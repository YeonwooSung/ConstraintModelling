MINION 3
# CSETopLevel_number = 1
# CSETopLevel_eliminated_expressions = 2
# CSETopLevel_total_size = 5
# CSE_active_number = 177
# CSE_active_eliminated_expressions = 366
# CSE_active_total_size = 825
**VARIABLES**
DISCRETE moves_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00001, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00002 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00002, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00003 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00003, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00004 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00004, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00005 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00005, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00006 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00006, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00007 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00007, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00008 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00008, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00009 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00009, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00010 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00010, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00011 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00011, [1,1,3,3])
**VARIABLES**
DISCRETE movesFrom_00001 #
{3..14}
DISCRETE movesFrom_00002 #
{3..13}
DISCRETE movesFrom_00003 #
{2..12}
DISCRETE movesFrom_00004 #
{2..11}
DISCRETE movesFrom_00005 #
{2..10}
DISCRETE movesFrom_00006 #
{2..9}
DISCRETE movesFrom_00007 #
{2..8}
DISCRETE movesFrom_00008 #
{2..7}
DISCRETE movesFrom_00009 #
{2..6}
DISCRETE movesFrom_00010 #
{2..5}
DISCRETE movesFrom_00011 #
{2..4}
DISCRETE movesFrom_00012 #
{2..3}
DISCRETE movesTo_00001 #
{1..13}
DISCRETE movesTo_00002 #
{1..12}
DISCRETE movesTo_00003 #
{1..11}
DISCRETE movesTo_00004 #
{1..10}
DISCRETE movesTo_00005 #
{1..9}
DISCRETE movesTo_00006 #
{1..8}
DISCRETE movesTo_00007 #
{1..7}
DISCRETE movesTo_00008 #
{1..6}
DISCRETE movesTo_00009 #
{1..5}
DISCRETE movesTo_00010 #
{1..4}
DISCRETE movesTo_00011 #
{1..3}
DISCRETE movesTo_00012 #
{1..2}
DISCRETE states_00002_00001 #
{41..49}
DISCRETE states_00002_00002 #
{3..11}
DISCRETE states_00002_00003 #
{1..41}
DISCRETE states_00002_00004 #
{9..41}
DISCRETE states_00002_00005 #
{1..41}
DISCRETE states_00002_00006 #
{1..41}
DISCRETE states_00002_00007 #
{1..41}
DISCRETE states_00002_00008 #
{1..41}
DISCRETE states_00002_00009 #
{1..41}
DISCRETE states_00002_00010 #
{1..30}
DISCRETE states_00002_00011 #
{1..41}
DISCRETE states_00002_00012 #
{1..41}
DISCRETE states_00002_00013 #
{1..41}
DISCRETE states_00003_00001 #
{41..49}
DISCRETE states_00003_00002 #
{1..41}
DISCRETE states_00003_00003 #
{1..41}
DISCRETE states_00003_00004 #
{1..41}
DISCRETE states_00003_00005 #
{1..41}
DISCRETE states_00003_00006 #
{1..41}
DISCRETE states_00003_00007 #
{1..41}
DISCRETE states_00003_00008 #
{1..41}
DISCRETE states_00003_00009 #
{1..41}
DISCRETE states_00003_00010 #
{1..41}
DISCRETE states_00003_00011 #
{1..41}
DISCRETE states_00003_00012 #
{1..41}
DISCRETE states_00004_00001 #
{2..49}
DISCRETE states_00004_00002 #
{1..41}
DISCRETE states_00004_00003 #
{1..41}
DISCRETE states_00004_00004 #
{1..41}
DISCRETE states_00004_00005 #
{1..41}
DISCRETE states_00004_00006 #
{1..41}
DISCRETE states_00004_00007 #
{1..41}
DISCRETE states_00004_00008 #
{1..41}
DISCRETE states_00004_00009 #
{1..41}
DISCRETE states_00004_00010 #
{1..41}
DISCRETE states_00004_00011 #
{1..41}
DISCRETE states_00005_00001 #
{1..49}
DISCRETE states_00005_00002 #
{1..41}
DISCRETE states_00005_00003 #
{1..41}
DISCRETE states_00005_00004 #
{1..41}
DISCRETE states_00005_00005 #
{1..41}
DISCRETE states_00005_00006 #
{1..41}
DISCRETE states_00005_00007 #
{1..41}
DISCRETE states_00005_00008 #
{1..41}
DISCRETE states_00005_00009 #
{1..41}
DISCRETE states_00005_00010 #
{1..41}
DISCRETE states_00006_00001 #
{1..49}
DISCRETE states_00006_00002 #
{1..41}
DISCRETE states_00006_00003 #
{1..41}
DISCRETE states_00006_00004 #
{1..41}
DISCRETE states_00006_00005 #
{1..41}
DISCRETE states_00006_00006 #
{1..41}
DISCRETE states_00006_00007 #
{1..41}
DISCRETE states_00006_00008 #
{1..41}
DISCRETE states_00006_00009 #
{1..41}
DISCRETE states_00007_00001 #
{1..49}
DISCRETE states_00007_00002 #
{1..41}
DISCRETE states_00007_00003 #
{1..41}
DISCRETE states_00007_00004 #
{1..41}
DISCRETE states_00007_00005 #
{1..41}
DISCRETE states_00007_00006 #
{1..41}
DISCRETE states_00007_00007 #
{1..41}
DISCRETE states_00007_00008 #
{1..41}
DISCRETE states_00008_00001 #
{1..49}
DISCRETE states_00008_00002 #
{1..41}
DISCRETE states_00008_00003 #
{1..41}
DISCRETE states_00008_00004 #
{1..41}
DISCRETE states_00008_00005 #
{1..41}
DISCRETE states_00008_00006 #
{1..41}
DISCRETE states_00008_00007 #
{1..41}
DISCRETE states_00009_00001 #
{1..49}
DISCRETE states_00009_00002 #
{1..41}
DISCRETE states_00009_00003 #
{1..41}
DISCRETE states_00009_00004 #
{1..41}
DISCRETE states_00009_00005 #
{1..41}
DISCRETE states_00009_00006 #
{1..41}
DISCRETE states_00010_00001 #
{1..49}
DISCRETE states_00010_00002 #
{1..41}
DISCRETE states_00010_00003 #
{1..41}
DISCRETE states_00010_00004 #
{1..41}
DISCRETE states_00010_00005 #
{1..41}
DISCRETE states_00011_00001 #
{1..49}
DISCRETE states_00011_00002 #
{1..41}
DISCRETE states_00011_00003 #
{1..41}
DISCRETE states_00011_00004 #
{1..41}
DISCRETE states_00012_00001 #
{1..49}
DISCRETE states_00012_00002 #
{1..41}
DISCRETE states_00012_00003 #
{1..41}
DISCRETE states_00013_00001 #
{1..49}
DISCRETE states_00014_00001 #
{1..41}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: Element([49, 11, 3, 41, 9, 35, 29, 37, 4, 1, 30, 18, 17], (-1 + movesTo_00001))
{3..49}
**CONSTRAINTS**
w-inintervalset(aux16, [3,4,9,9,11,11,17,18,29,30,35,35,37,37,49,49])
**VARIABLES**
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: Element([3, 41, 9, 35, 29, 37, 4, 1, 30, 18, 17, 13], (-3 + movesFrom_00001))
{1..41}
**CONSTRAINTS**
w-inintervalset(aux17, [1,1,3,4,9,9,13,13,17,18,29,30,35,35,37,37,41,41])
**VARIABLES**
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012], (-1 + movesTo_00002))
{1..49}
DISCRETE aux19 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012], (-2 + movesFrom_00003))
{1..41}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011], (-1 + movesTo_00003))
{1..49}
DISCRETE aux21 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013], (-3 + movesFrom_00002))
{1..41}
DISCRETE aux22 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011], (-2 + movesFrom_00004))
{1..41}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010], (-1 + movesTo_00004))
{1..49}
DISCRETE aux24 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010], (-2 + movesFrom_00005))
{1..41}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009], (-1 + movesTo_00005))
{1..49}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008], (-1 + movesTo_00006))
{1..49}
DISCRETE aux27 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009], (-2 + movesFrom_00006))
{1..41}
DISCRETE aux28 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008], (-2 + movesFrom_00007))
{1..41}
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007], (-1 + movesTo_00007))
{1..49}
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006], (-1 + movesTo_00008))
{1..49}
DISCRETE aux31 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007], (-2 + movesFrom_00008))
{1..41}
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005], (-1 + movesTo_00009))
{1..49}
DISCRETE aux33 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006], (-2 + movesFrom_00009))
{1..41}
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004], (-1 + movesTo_00010))
{1..49}
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005], (-2 + movesFrom_00010))
{1..41}
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00011_00001, states_00011_00002, states_00011_00003], (-1 + movesTo_00011))
{1..49}
DISCRETE aux37 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00011_00002, states_00011_00003, states_00011_00004], (-2 + movesFrom_00011))
{1..41}
DISCRETE aux38 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00012_00002, states_00012_00003], (-2 + movesFrom_00012))
{1..41}
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00012_00001, states_00012_00002], (-1 + movesTo_00012))
{1..49}
BOOL aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00001=(1 + movesTo_00001))
BOOL aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00002=(1 + movesTo_00002))
BOOL aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00003=(1 + movesTo_00003))
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00001=(3 + movesTo_00001))
BOOL aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00002=(3 + movesTo_00002))
BOOL aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00004=(1 + movesTo_00004))
BOOL aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00003=(3 + movesTo_00003))
BOOL aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00005=(1 + movesTo_00005))
BOOL aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00006=(1 + movesTo_00006))
BOOL aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00004=(3 + movesTo_00004))
BOOL aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00007=(1 + movesTo_00007))
BOOL aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00005=(3 + movesTo_00005))
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00006=(3 + movesTo_00006))
BOOL aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00008=(1 + movesTo_00008))
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00007=(3 + movesTo_00007))
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00009=(1 + movesTo_00009))
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00008=(3 + movesTo_00008))
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00009=(3 + movesTo_00009))
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00011=(1 + movesTo_00011))
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00010=(1 + movesTo_00010))
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00011=(3 + movesTo_00011))
BOOL aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00010=(3 + movesTo_00010))
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00009)
{0..4}
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00008)
{0..5}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00005)
{0..8}
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00004)
{0..9}
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00007)
{0..6}
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00006)
{0..7}
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00001)
{0..12}
**CONSTRAINTS**
w-inintervalset(aux68, [0,2,4,8,10,12])
**VARIABLES**
DISCRETE aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00003)
{0..10}
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00002)
{0..11}
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00012)
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00011)
{0..2}
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00010)
{0..3}
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00004=states_00011_00003)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00005=states_00011_00004)
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00002=states_00011_00002)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00003=states_00011_00002)
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00003=states_00011_00003)
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00011_00002)
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00011_00003)
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00011_00004)
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00010=states_00006_00009)
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00003=states_00006_00002)
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00003=states_00006_00003)
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00002=states_00006_00002)
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00005=states_00006_00004)
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00005=states_00006_00005)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00004=states_00006_00004)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00004=states_00006_00003)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00007=states_00006_00006)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00007=states_00006_00007)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00006=states_00006_00006)
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00006=states_00006_00005)
BOOL aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00009=states_00006_00008)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00008=states_00006_00008)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00008=states_00006_00007)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00010_00002)
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00010_00002)
BOOL aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00010_00003)
BOOL aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00010_00004)
BOOL aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00010_00003)
BOOL aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00010_00004)
BOOL aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00010_00005)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00008_00004)
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00008_00003)
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00008_00003)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00008_00002)
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00008_00007)
BOOL aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00008_00006)
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00008_00005)
BOOL aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00008_00005)
BOOL aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00008_00004)
BOOL aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00003_00010)
BOOL aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00003_00011)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00003_00012)
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00003_00002)
BOOL aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00003_00003)
BOOL aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00003_00004)
BOOL aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00003_00005)
BOOL aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00003_00003)
BOOL aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00003_00004)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00003_00007)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00003_00006)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00003_00005)
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00003_00006)
BOOL aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00003_00009)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00003_00008)
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00003_00008)
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00003_00007)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00003_00010)
BOOL aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00003_00009)
BOOL aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00005_00007)
BOOL aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00005_00008)
BOOL aux134 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00005_00007)
BOOL aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00005_00006)
BOOL aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00005_00005)
BOOL aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00005_00006)
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00005_00005)
BOOL aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00005_00004)
BOOL aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00005_00003)
BOOL aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00005_00004)
BOOL aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00005_00003)
BOOL aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00005_00002)
BOOL aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00005_00002)
BOOL aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00005_00009)
BOOL aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00005_00008)
BOOL aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00005_00009)
BOOL aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00005_00010)
BOOL aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00010=states_00003_00010)
BOOL aux150 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00011=states_00003_00010)
BOOL aux151 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00011=states_00003_00011)
BOOL aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00012=states_00003_00011)
BOOL aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00013=states_00003_00012)
BOOL aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00010=states_00003_00009)
BOOL aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00006=states_00003_00005)
BOOL aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00006=states_00003_00006)
BOOL aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00005=states_00003_00005)
BOOL aux158 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00005=states_00003_00004)
BOOL aux159 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00004=states_00003_00003)
BOOL aux160 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00004=states_00003_00004)
BOOL aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00003=states_00003_00003)
BOOL aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00009=states_00003_00009)
BOOL aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00009=states_00003_00008)
BOOL aux164 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00008=states_00003_00007)
BOOL aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00008=states_00003_00008)
BOOL aux166 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00007=states_00003_00007)
BOOL aux167 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00007=states_00003_00006)
BOOL aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00002=states_00003_00002)
BOOL aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00002=states_00007_00002)
BOOL aux170 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00006=states_00007_00005)
BOOL aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00006=states_00007_00006)
BOOL aux172 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00005=states_00007_00005)
BOOL aux173 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00005=states_00007_00004)
BOOL aux174 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00004=states_00007_00003)
BOOL aux175 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00004=states_00007_00004)
BOOL aux176 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00003=states_00007_00003)
BOOL aux177 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00003=states_00007_00002)
BOOL aux178 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00009=states_00007_00008)
BOOL aux179 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00008=states_00007_00007)
BOOL aux180 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00007=states_00007_00007)
BOOL aux181 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00007=states_00007_00006)
BOOL aux182 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00007=states_00008_00006)
BOOL aux183 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00006=states_00008_00006)
BOOL aux184 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00006=states_00008_00005)
BOOL aux185 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00008=states_00008_00007)
BOOL aux186 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00003=states_00008_00002)
BOOL aux187 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00003=states_00008_00003)
BOOL aux188 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00002=states_00008_00002)
BOOL aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00005=states_00008_00004)
BOOL aux190 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00005=states_00008_00005)
BOOL aux191 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00004=states_00008_00004)
BOOL aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00004=states_00008_00003)
DISCRETE aux193 #
{0..3}
DISCRETE aux194 #
{3..11}
**CONSTRAINTS**
w-inintervalset(aux194, [3,5,9,11])
**VARIABLES**
DISCRETE aux195 #
{0..3}
DISCRETE aux196 #
{0..12}
DISCRETE aux197 #
{0..3}
DISCRETE aux198 #
{0..12}
DISCRETE aux199 #
{0..12}
DISCRETE aux200 #
{0..3}
DISCRETE aux201 #
{0..3}
DISCRETE aux202 #
{0..12}
DISCRETE aux203 #
{0..3}
DISCRETE aux204 #
{0..12}
DISCRETE aux205 #
{0..3}
DISCRETE aux206 #
{0..12}
DISCRETE aux207 #
{0..3}
DISCRETE aux208 #
{0..12}
DISCRETE aux209 #
{0..3}
DISCRETE aux210 #
{0..12}
DISCRETE aux211 #
{0..3}
DISCRETE aux212 #
{0..12}
DISCRETE aux213 #
{0..12}
DISCRETE aux214 #
{0..3}
DISCRETE aux215 #
{0..12}
DISCRETE aux216 #
{0..3}
DISCRETE aux217 #
{0..3}
DISCRETE aux218 #
{0..12}
DISCRETE aux219 #(-3 + movesFrom_00001)
{0..11}
DISCRETE aux220 #(-2 + movesFrom_00003)
{0..10}
DISCRETE aux221 #(-3 + movesFrom_00002)
{0..10}
DISCRETE aux222 #(-2 + movesFrom_00004)
{0..9}
DISCRETE aux223 #(-2 + movesFrom_00005)
{0..8}
DISCRETE aux224 #(-2 + movesFrom_00006)
{0..7}
DISCRETE aux225 #(-2 + movesFrom_00007)
{0..6}
DISCRETE aux226 #(-2 + movesFrom_00008)
{0..5}
DISCRETE aux227 #(-2 + movesFrom_00009)
{0..4}
DISCRETE aux228 #(-2 + movesFrom_00010)
{0..3}
DISCRETE aux229 #(-2 + movesFrom_00011)
{0..2}
BOOL aux230 #(-2 + movesFrom_00012)
BOOL aux231 #(1<movesTo_00001)
BOOL aux232 #(2<movesTo_00001)
BOOL aux233 #(3<movesTo_00001)
BOOL aux234 #(4<movesTo_00001)
BOOL aux235 #(5<movesTo_00001)
BOOL aux236 #(6<movesTo_00001)
BOOL aux237 #(7<movesTo_00001)
BOOL aux238 #(8<movesTo_00001)
BOOL aux239 #(9<movesTo_00001)
BOOL aux240 #(10<movesTo_00001)
BOOL aux241 #(11<movesTo_00001)
BOOL aux242 #(12<movesTo_00001)
BOOL aux243 #(1<movesTo_00002)
BOOL aux244 #(2<movesTo_00002)
BOOL aux245 #(3<movesTo_00002)
BOOL aux246 #(4<movesTo_00002)
BOOL aux247 #(5<movesTo_00002)
BOOL aux248 #(6<movesTo_00002)
BOOL aux249 #(7<movesTo_00002)
BOOL aux250 #(8<movesTo_00002)
BOOL aux251 #(9<movesTo_00002)
BOOL aux252 #(10<movesTo_00002)
BOOL aux253 #(11<movesTo_00002)
BOOL aux254 #(1<movesTo_00003)
BOOL aux255 #(2<movesTo_00003)
BOOL aux256 #(3<movesTo_00003)
BOOL aux257 #(4<movesTo_00003)
BOOL aux258 #(5<movesTo_00003)
BOOL aux259 #(6<movesTo_00003)
BOOL aux260 #(7<movesTo_00003)
BOOL aux261 #(8<movesTo_00003)
BOOL aux262 #(9<movesTo_00003)
BOOL aux263 #(10<movesTo_00003)
BOOL aux264 #(1<movesTo_00004)
BOOL aux265 #(2<movesTo_00004)
BOOL aux266 #(3<movesTo_00004)
BOOL aux267 #(4<movesTo_00004)
BOOL aux268 #(5<movesTo_00004)
BOOL aux269 #(6<movesTo_00004)
BOOL aux270 #(7<movesTo_00004)
BOOL aux271 #(8<movesTo_00004)
BOOL aux272 #(9<movesTo_00004)
BOOL aux273 #(1<movesTo_00005)
BOOL aux274 #(2<movesTo_00005)
BOOL aux275 #(3<movesTo_00005)
BOOL aux276 #(4<movesTo_00005)
BOOL aux277 #(5<movesTo_00005)
BOOL aux278 #(6<movesTo_00005)
BOOL aux279 #(7<movesTo_00005)
BOOL aux280 #(8<movesTo_00005)
BOOL aux281 #(1<movesTo_00006)
BOOL aux282 #(2<movesTo_00006)
BOOL aux283 #(3<movesTo_00006)
BOOL aux284 #(4<movesTo_00006)
BOOL aux285 #(5<movesTo_00006)
BOOL aux286 #(6<movesTo_00006)
BOOL aux287 #(7<movesTo_00006)
BOOL aux288 #(1<movesTo_00007)
BOOL aux289 #(2<movesTo_00007)
BOOL aux290 #(3<movesTo_00007)
BOOL aux291 #(4<movesTo_00007)
BOOL aux292 #(5<movesTo_00007)
BOOL aux293 #(6<movesTo_00007)
BOOL aux294 #(1<movesTo_00008)
BOOL aux295 #(2<movesTo_00008)
BOOL aux296 #(3<movesTo_00008)
BOOL aux297 #(4<movesTo_00008)
BOOL aux298 #(5<movesTo_00008)
BOOL aux299 #(1<movesTo_00009)
BOOL aux300 #(2<movesTo_00009)
BOOL aux301 #(3<movesTo_00009)
BOOL aux302 #(4<movesTo_00009)
BOOL aux303 #(1<movesTo_00010)
BOOL aux304 #(2<movesTo_00010)
BOOL aux305 #(3<movesTo_00010)
BOOL aux306 #(1<movesTo_00011)
BOOL aux307 #(2<movesTo_00011)
BOOL aux308 #(1<movesTo_00012)
**VARIABLES**
ALIAS cards[14]=[49, 11, 3, 41, 9, 35, 29, 37, 4, 1, 30, 18, 17, 13]
**SEARCH**
PRINT[[moves_00001],[moves_00002],[moves_00003],[moves_00004],[moves_00005],[moves_00006],[moves_00007],[moves_00008],[moves_00009],[moves_00010],[moves_00011],[movesFrom_00001],[movesFrom_00002],[movesFrom_00003],[movesFrom_00004],[movesFrom_00005],[movesFrom_00006],[movesFrom_00007],[movesFrom_00008],[movesFrom_00009],[movesFrom_00010],[movesFrom_00011],[movesFrom_00012],[movesTo_00001],[movesTo_00002],[movesTo_00003],[movesTo_00004],[movesTo_00005],[movesTo_00006],[movesTo_00007],[movesTo_00008],[movesTo_00009],[movesTo_00010],[movesTo_00011],[movesTo_00012],[states_00002_00001],[states_00002_00002],[states_00002_00003],[states_00002_00004],[states_00002_00005],[states_00002_00006],[states_00002_00007],[states_00002_00008],[states_00002_00009],[states_00002_00010],[states_00002_00011],[states_00002_00012],[states_00002_00013],[states_00003_00001],[states_00003_00002],[states_00003_00003],[states_00003_00004],[states_00003_00005],[states_00003_00006],[states_00003_00007],[states_00003_00008],[states_00003_00009],[states_00003_00010],[states_00003_00011],[states_00003_00012],[states_00004_00001],[states_00004_00002],[states_00004_00003],[states_00004_00004],[states_00004_00005],[states_00004_00006],[states_00004_00007],[states_00004_00008],[states_00004_00009],[states_00004_00010],[states_00004_00011],[states_00005_00001],[states_00005_00002],[states_00005_00003],[states_00005_00004],[states_00005_00005],[states_00005_00006],[states_00005_00007],[states_00005_00008],[states_00005_00009],[states_00005_00010],[states_00006_00001],[states_00006_00002],[states_00006_00003],[states_00006_00004],[states_00006_00005],[states_00006_00006],[states_00006_00007],[states_00006_00008],[states_00006_00009],[states_00007_00001],[states_00007_00002],[states_00007_00003],[states_00007_00004],[states_00007_00005],[states_00007_00006],[states_00007_00007],[states_00007_00008],[states_00008_00001],[states_00008_00002],[states_00008_00003],[states_00008_00004],[states_00008_00005],[states_00008_00006],[states_00008_00007],[states_00009_00001],[states_00009_00002],[states_00009_00003],[states_00009_00004],[states_00009_00005],[states_00009_00006],[states_00010_00001],[states_00010_00002],[states_00010_00003],[states_00010_00004],[states_00010_00005],[states_00011_00001],[states_00011_00002],[states_00011_00003],[states_00011_00004],[states_00012_00001],[states_00012_00002],[states_00012_00003],[states_00013_00001],[states_00014_00001]]
VARORDER STATIC [moves_00001, moves_00002, moves_00003, moves_00004, moves_00005, moves_00006, moves_00007, moves_00008, moves_00009, moves_00010, moves_00011, movesFrom_00001, movesFrom_00002, movesFrom_00003, movesFrom_00004, movesFrom_00005, movesFrom_00006, movesFrom_00007, movesFrom_00008, movesFrom_00009, movesFrom_00010, movesFrom_00011, movesFrom_00012, movesTo_00001, movesTo_00002, movesTo_00003, movesTo_00004, movesTo_00005, movesTo_00006, movesTo_00007, movesTo_00008, movesTo_00009, movesTo_00010, movesTo_00011, movesTo_00012, states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00012_00001, states_00012_00002, states_00012_00003, states_00013_00001, states_00014_00001]
**CONSTRAINTS**
reify(ineq(1, movesTo_00001, -1), aux231)
reify(ineq(2, movesTo_00001, -1), aux232)
reify(ineq(3, movesTo_00001, -1), aux233)
reify(ineq(4, movesTo_00001, -1), aux234)
reify(ineq(5, movesTo_00001, -1), aux235)
reify(ineq(6, movesTo_00001, -1), aux236)
reify(ineq(7, movesTo_00001, -1), aux237)
reify(ineq(8, movesTo_00001, -1), aux238)
reify(ineq(9, movesTo_00001, -1), aux239)
reify(ineq(10, movesTo_00001, -1), aux240)
reify(ineq(11, movesTo_00001, -1), aux241)
reify(ineq(12, movesTo_00001, -1), aux242)
reify(ineq(1, movesTo_00002, -1), aux243)
reify(ineq(2, movesTo_00002, -1), aux244)
reify(ineq(3, movesTo_00002, -1), aux245)
reify(ineq(4, movesTo_00002, -1), aux246)
reify(ineq(5, movesTo_00002, -1), aux247)
reify(ineq(6, movesTo_00002, -1), aux248)
reify(ineq(7, movesTo_00002, -1), aux249)
reify(ineq(8, movesTo_00002, -1), aux250)
reify(ineq(9, movesTo_00002, -1), aux251)
reify(ineq(10, movesTo_00002, -1), aux252)
reify(ineq(11, movesTo_00002, -1), aux253)
reify(ineq(1, movesTo_00003, -1), aux254)
reify(ineq(2, movesTo_00003, -1), aux255)
reify(ineq(3, movesTo_00003, -1), aux256)
reify(ineq(4, movesTo_00003, -1), aux257)
reify(ineq(5, movesTo_00003, -1), aux258)
reify(ineq(6, movesTo_00003, -1), aux259)
reify(ineq(7, movesTo_00003, -1), aux260)
reify(ineq(8, movesTo_00003, -1), aux261)
reify(ineq(9, movesTo_00003, -1), aux262)
reify(ineq(10, movesTo_00003, -1), aux263)
reify(ineq(1, movesTo_00004, -1), aux264)
reify(ineq(2, movesTo_00004, -1), aux265)
reify(ineq(3, movesTo_00004, -1), aux266)
reify(ineq(4, movesTo_00004, -1), aux267)
reify(ineq(5, movesTo_00004, -1), aux268)
reify(ineq(6, movesTo_00004, -1), aux269)
reify(ineq(7, movesTo_00004, -1), aux270)
reify(ineq(8, movesTo_00004, -1), aux271)
reify(ineq(9, movesTo_00004, -1), aux272)
reify(ineq(1, movesTo_00005, -1), aux273)
reify(ineq(2, movesTo_00005, -1), aux274)
reify(ineq(3, movesTo_00005, -1), aux275)
reify(ineq(4, movesTo_00005, -1), aux276)
reify(ineq(5, movesTo_00005, -1), aux277)
reify(ineq(6, movesTo_00005, -1), aux278)
reify(ineq(7, movesTo_00005, -1), aux279)
reify(ineq(8, movesTo_00005, -1), aux280)
reify(ineq(1, movesTo_00006, -1), aux281)
reify(ineq(2, movesTo_00006, -1), aux282)
reify(ineq(3, movesTo_00006, -1), aux283)
reify(ineq(4, movesTo_00006, -1), aux284)
reify(ineq(5, movesTo_00006, -1), aux285)
reify(ineq(6, movesTo_00006, -1), aux286)
reify(ineq(7, movesTo_00006, -1), aux287)
reify(ineq(1, movesTo_00007, -1), aux288)
reify(ineq(2, movesTo_00007, -1), aux289)
reify(ineq(3, movesTo_00007, -1), aux290)
reify(ineq(4, movesTo_00007, -1), aux291)
reify(ineq(5, movesTo_00007, -1), aux292)
reify(ineq(6, movesTo_00007, -1), aux293)
reify(ineq(1, movesTo_00008, -1), aux294)
reify(ineq(2, movesTo_00008, -1), aux295)
reify(ineq(3, movesTo_00008, -1), aux296)
reify(ineq(4, movesTo_00008, -1), aux297)
reify(ineq(5, movesTo_00008, -1), aux298)
reify(ineq(1, movesTo_00009, -1), aux299)
reify(ineq(2, movesTo_00009, -1), aux300)
reify(ineq(3, movesTo_00009, -1), aux301)
reify(ineq(4, movesTo_00009, -1), aux302)
reify(ineq(1, movesTo_00010, -1), aux303)
reify(ineq(2, movesTo_00010, -1), aux304)
reify(ineq(3, movesTo_00010, -1), aux305)
reify(ineq(1, movesTo_00011, -1), aux306)
reify(ineq(2, movesTo_00011, -1), aux307)
reify(ineq(1, movesTo_00012, -1), aux308)
div(aux16, 13, aux193)
modulo(aux16,13,aux194)
div(aux18, 13, aux195)
modulo(aux18,13,aux196)
div(aux19, 13, aux197)
modulo(aux19,13,aux198)
modulo(aux22,13,aux199)
div(aux22, 13, aux200)
div(aux24, 13, aux201)
modulo(aux24,13,aux202)
div(aux26, 13, aux203)
modulo(aux26,13,aux204)
div(aux29, 13, aux205)
modulo(aux29,13,aux206)
div(aux30, 13, aux207)
modulo(aux30,13,aux208)
div(aux33, 13, aux209)
modulo(aux32,13,aux210)
div(aux34, 13, aux211)
modulo(aux34,13,aux212)
modulo(aux37,13,aux213)
div(aux36, 13, aux214)
modulo(aux39,13,aux215)
div(aux38, 13, aux216)
div(states_00013_00001, 13, aux217)
modulo(states_00014_00001,13,aux218)
watchelement([49, 11, 3, 41, 9, 35, 29, 37, 4, 1, 30, 18, 17], aux68, aux16)
watchelement([3, 41, 9, 35, 29, 37, 4, 1, 30, 18, 17, 13], aux219, aux17)
watchelement([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012], aux70, aux18)
watchelement([states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012], aux220, aux19)
watchelement([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011], aux69, aux20)
watchelement([states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013], aux221, aux21)
watchelement([states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011], aux222, aux22)
watchelement([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010], aux65, aux23)
watchelement([states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010], aux223, aux24)
watchelement([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009], aux64, aux25)
watchelement([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008], aux67, aux26)
watchelement([states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009], aux224, aux27)
watchelement([states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008], aux225, aux28)
watchelement([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007], aux66, aux29)
watchelement([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006], aux63, aux30)
watchelement([states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007], aux226, aux31)
watchelement([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005], aux62, aux32)
watchelement([states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006], aux227, aux33)
watchelement([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004], aux73, aux34)
watchelement([states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005], aux228, aux35)
watchelement([states_00011_00001, states_00011_00002, states_00011_00003], aux72, aux36)
watchelement([states_00011_00002, states_00011_00003, states_00011_00004], aux229, aux37)
watchelement([states_00012_00002, states_00012_00003], aux230, aux38)
watchelement([states_00012_00001, states_00012_00002], aux71, aux39)
reify(watched-and({sumleq([1,movesTo_00001],movesFrom_00001),sumgeq([1,movesTo_00001],movesFrom_00001)}), aux40)
reify(watched-and({sumleq([1,movesTo_00002],movesFrom_00002),sumgeq([1,movesTo_00002],movesFrom_00002)}), aux41)
reify(watched-and({sumleq([1,movesTo_00003],movesFrom_00003),sumgeq([1,movesTo_00003],movesFrom_00003)}), aux42)
reify(watched-and({sumleq([3,movesTo_00001],movesFrom_00001),sumgeq([3,movesTo_00001],movesFrom_00001)}), aux43)
reify(watched-and({sumleq([3,movesTo_00002],movesFrom_00002),sumgeq([3,movesTo_00002],movesFrom_00002)}), aux44)
reify(watched-and({sumleq([1,movesTo_00004],movesFrom_00004),sumgeq([1,movesTo_00004],movesFrom_00004)}), aux45)
reify(watched-and({sumleq([3,movesTo_00003],movesFrom_00003),sumgeq([3,movesTo_00003],movesFrom_00003)}), aux46)
reify(watched-and({sumleq([1,movesTo_00005],movesFrom_00005),sumgeq([1,movesTo_00005],movesFrom_00005)}), aux47)
reify(watched-and({sumleq([1,movesTo_00006],movesFrom_00006),sumgeq([1,movesTo_00006],movesFrom_00006)}), aux48)
reify(watched-and({sumleq([3,movesTo_00004],movesFrom_00004),sumgeq([3,movesTo_00004],movesFrom_00004)}), aux49)
reify(watched-and({sumleq([1,movesTo_00007],movesFrom_00007),sumgeq([1,movesTo_00007],movesFrom_00007)}), aux50)
reify(watched-and({sumleq([3,movesTo_00005],movesFrom_00005),sumgeq([3,movesTo_00005],movesFrom_00005)}), aux51)
reify(watched-and({sumleq([3,movesTo_00006],movesFrom_00006),sumgeq([3,movesTo_00006],movesFrom_00006)}), aux52)
reify(watched-and({sumleq([1,movesTo_00008],movesFrom_00008),sumgeq([1,movesTo_00008],movesFrom_00008)}), aux53)
reify(watched-and({sumleq([3,movesTo_00007],movesFrom_00007),sumgeq([3,movesTo_00007],movesFrom_00007)}), aux54)
reify(watched-and({sumleq([1,movesTo_00009],movesFrom_00009),sumgeq([1,movesTo_00009],movesFrom_00009)}), aux55)
reify(watched-and({sumleq([3,movesTo_00008],movesFrom_00008),sumgeq([3,movesTo_00008],movesFrom_00008)}), aux56)
reify(watched-and({sumleq([3,movesTo_00009],movesFrom_00009),sumgeq([3,movesTo_00009],movesFrom_00009)}), aux57)
reify(watched-and({sumleq([1,movesTo_00011],movesFrom_00011),sumgeq([1,movesTo_00011],movesFrom_00011)}), aux58)
reify(watched-and({sumleq([1,movesTo_00010],movesFrom_00010),sumgeq([1,movesTo_00010],movesFrom_00010)}), aux59)
reify(sumleq([3,movesTo_00011],movesFrom_00011), aux60)
reify(watched-and({sumleq([3,movesTo_00010],movesFrom_00010),sumgeq([3,movesTo_00010],movesFrom_00010)}), aux61)
reify(gaceq(states_00010_00004,states_00011_00003), aux74)
reify(gaceq(states_00010_00005,states_00011_00004), aux75)
reify(gaceq(states_00010_00002,states_00011_00002), aux76)
reify(gaceq(states_00010_00003,states_00011_00002), aux77)
reify(gaceq(states_00010_00003,states_00011_00003), aux78)
reify(gaceq(states_00012_00002,states_00011_00002), aux79)
reify(gaceq(states_00012_00002,states_00011_00003), aux80)
reify(gaceq(states_00012_00003,states_00011_00004), aux81)
reify(gaceq(states_00005_00010,states_00006_00009), aux82)
reify(gaceq(states_00005_00003,states_00006_00002), aux83)
reify(gaceq(states_00005_00003,states_00006_00003), aux84)
reify(gaceq(states_00005_00002,states_00006_00002), aux85)
reify(gaceq(states_00005_00005,states_00006_00004), aux86)
reify(gaceq(states_00005_00005,states_00006_00005), aux87)
reify(gaceq(states_00005_00004,states_00006_00004), aux88)
reify(gaceq(states_00005_00004,states_00006_00003), aux89)
reify(gaceq(states_00005_00007,states_00006_00006), aux90)
reify(gaceq(states_00005_00007,states_00006_00007), aux91)
reify(gaceq(states_00005_00006,states_00006_00006), aux92)
reify(gaceq(states_00005_00006,states_00006_00005), aux93)
reify(gaceq(states_00005_00009,states_00006_00008), aux94)
reify(gaceq(states_00005_00008,states_00006_00008), aux95)
reify(gaceq(states_00005_00008,states_00006_00007), aux96)
reify(gaceq(states_00009_00002,states_00010_00002), aux97)
reify(gaceq(states_00009_00003,states_00010_00002), aux98)
reify(gaceq(states_00009_00003,states_00010_00003), aux99)
reify(gaceq(states_00009_00004,states_00010_00004), aux100)
reify(gaceq(states_00009_00004,states_00010_00003), aux101)
reify(gaceq(states_00009_00005,states_00010_00004), aux102)
reify(gaceq(states_00009_00006,states_00010_00005), aux103)
reify(gaceq(states_00009_00003,states_00008_00004), aux104)
reify(gaceq(states_00009_00003,states_00008_00003), aux105)
reify(gaceq(states_00009_00002,states_00008_00003), aux106)
reify(gaceq(states_00009_00002,states_00008_00002), aux107)
reify(gaceq(states_00009_00006,states_00008_00007), aux108)
reify(gaceq(states_00009_00005,states_00008_00006), aux109)
reify(gaceq(states_00009_00005,states_00008_00005), aux110)
reify(gaceq(states_00009_00004,states_00008_00005), aux111)
reify(gaceq(states_00009_00004,states_00008_00004), aux112)
reify(gaceq(states_00004_00010,states_00003_00010), aux113)
reify(gaceq(states_00004_00010,states_00003_00011), aux114)
reify(gaceq(states_00004_00011,states_00003_00012), aux115)
reify(gaceq(states_00004_00002,states_00003_00002), aux116)
reify(gaceq(states_00004_00002,states_00003_00003), aux117)
reify(gaceq(states_00004_00004,states_00003_00004), aux118)
reify(gaceq(states_00004_00004,states_00003_00005), aux119)
reify(gaceq(states_00004_00003,states_00003_00003), aux120)
reify(gaceq(states_00004_00003,states_00003_00004), aux121)
reify(gaceq(states_00004_00006,states_00003_00007), aux122)
reify(gaceq(states_00004_00006,states_00003_00006), aux123)
reify(gaceq(states_00004_00005,states_00003_00005), aux124)
reify(gaceq(states_00004_00005,states_00003_00006), aux125)
reify(gaceq(states_00004_00008,states_00003_00009), aux126)
reify(gaceq(states_00004_00008,states_00003_00008), aux127)
reify(gaceq(states_00004_00007,states_00003_00008), aux128)
reify(gaceq(states_00004_00007,states_00003_00007), aux129)
reify(gaceq(states_00004_00009,states_00003_00010), aux130)
reify(gaceq(states_00004_00009,states_00003_00009), aux131)
reify(gaceq(states_00004_00008,states_00005_00007), aux132)
reify(gaceq(states_00004_00008,states_00005_00008), aux133)
reify(gaceq(states_00004_00007,states_00005_00007), aux134)
reify(gaceq(states_00004_00007,states_00005_00006), aux135)
reify(gaceq(states_00004_00006,states_00005_00005), aux136)
reify(gaceq(states_00004_00006,states_00005_00006), aux137)
reify(gaceq(states_00004_00005,states_00005_00005), aux138)
reify(gaceq(states_00004_00005,states_00005_00004), aux139)
reify(gaceq(states_00004_00004,states_00005_00003), aux140)
reify(gaceq(states_00004_00004,states_00005_00004), aux141)
reify(gaceq(states_00004_00003,states_00005_00003), aux142)
reify(gaceq(states_00004_00003,states_00005_00002), aux143)
reify(gaceq(states_00004_00002,states_00005_00002), aux144)
reify(gaceq(states_00004_00009,states_00005_00009), aux145)
reify(gaceq(states_00004_00009,states_00005_00008), aux146)
reify(gaceq(states_00004_00010,states_00005_00009), aux147)
reify(gaceq(states_00004_00011,states_00005_00010), aux148)
reify(gaceq(states_00002_00010,states_00003_00010), aux149)
reify(gaceq(states_00002_00011,states_00003_00010), aux150)
reify(gaceq(states_00002_00011,states_00003_00011), aux151)
reify(gaceq(states_00002_00012,states_00003_00011), aux152)
reify(gaceq(states_00002_00013,states_00003_00012), aux153)
reify(gaceq(states_00002_00010,states_00003_00009), aux154)
reify(gaceq(states_00002_00006,states_00003_00005), aux155)
reify(gaceq(states_00002_00006,states_00003_00006), aux156)
reify(gaceq(states_00002_00005,states_00003_00005), aux157)
reify(gaceq(states_00002_00005,states_00003_00004), aux158)
reify(gaceq(states_00002_00004,states_00003_00003), aux159)
reify(gaceq(states_00002_00004,states_00003_00004), aux160)
reify(gaceq(states_00002_00003,states_00003_00003), aux161)
reify(gaceq(states_00002_00009,states_00003_00009), aux162)
reify(gaceq(states_00002_00009,states_00003_00008), aux163)
reify(gaceq(states_00002_00008,states_00003_00007), aux164)
reify(gaceq(states_00002_00008,states_00003_00008), aux165)
reify(gaceq(states_00002_00007,states_00003_00007), aux166)
reify(gaceq(states_00002_00007,states_00003_00006), aux167)
reify(gaceq(states_00002_00002,states_00003_00002), aux168)
reify(gaceq(states_00006_00002,states_00007_00002), aux169)
reify(gaceq(states_00006_00006,states_00007_00005), aux170)
reify(gaceq(states_00006_00006,states_00007_00006), aux171)
reify(gaceq(states_00006_00005,states_00007_00005), aux172)
reify(gaceq(states_00006_00005,states_00007_00004), aux173)
reify(gaceq(states_00006_00004,states_00007_00003), aux174)
reify(gaceq(states_00006_00004,states_00007_00004), aux175)
reify(gaceq(states_00006_00003,states_00007_00003), aux176)
reify(gaceq(states_00006_00003,states_00007_00002), aux177)
reify(gaceq(states_00006_00009,states_00007_00008), aux178)
reify(gaceq(states_00006_00008,states_00007_00007), aux179)
reify(gaceq(states_00006_00007,states_00007_00007), aux180)
reify(gaceq(states_00006_00007,states_00007_00006), aux181)
reify(gaceq(states_00007_00007,states_00008_00006), aux182)
reify(gaceq(states_00007_00006,states_00008_00006), aux183)
reify(gaceq(states_00007_00006,states_00008_00005), aux184)
reify(gaceq(states_00007_00008,states_00008_00007), aux185)
reify(gaceq(states_00007_00003,states_00008_00002), aux186)
reify(gaceq(states_00007_00003,states_00008_00003), aux187)
reify(gaceq(states_00007_00002,states_00008_00002), aux188)
reify(gaceq(states_00007_00005,states_00008_00004), aux189)
reify(gaceq(states_00007_00005,states_00008_00005), aux190)
reify(gaceq(states_00007_00004,states_00008_00004), aux191)
reify(gaceq(states_00007_00004,states_00008_00003), aux192)
watched-or({diseq(1,moves_00001),w-literal(states_00002_00002,3),ineq(2, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00003,41),ineq(3, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00004,9),ineq(4, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00005,35),ineq(5, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00006,29),ineq(6, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00007,37),ineq(7, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00008,4),ineq(8, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00009,1),ineq(9, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00010,30),ineq(10, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00011,18),ineq(11, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00012,17),ineq(12, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00013,13),ineq(13, movesTo_00001, 0)})
watched-or({diseq(1,moves_00002),gaceq(states_00002_00003,states_00003_00002),ineq(2, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux159,1),ineq(3, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux158,1),ineq(4, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux155,1),ineq(5, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux167,1),ineq(6, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux164,1),ineq(7, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux163,1),ineq(8, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux154,1),ineq(9, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux150,1),ineq(10, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux152,1),ineq(11, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux153,1),ineq(12, movesTo_00002, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux117,1),ineq(2, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux121,1),ineq(3, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux119,1),ineq(4, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux125,1),ineq(5, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux122,1),ineq(6, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux128,1),ineq(7, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux126,1),ineq(8, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux130,1),ineq(9, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux114,1),ineq(10, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux115,1),ineq(11, movesTo_00003, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux143,1),ineq(2, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux140,1),ineq(3, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux139,1),ineq(4, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux136,1),ineq(5, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux135,1),ineq(6, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux132,1),ineq(7, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux146,1),ineq(8, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux147,1),ineq(9, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux148,1),ineq(10, movesTo_00004, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux83,1),ineq(2, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux89,1),ineq(3, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux86,1),ineq(4, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux93,1),ineq(5, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux90,1),ineq(6, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux96,1),ineq(7, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux94,1),ineq(8, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux82,1),ineq(9, movesTo_00005, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux177,1),ineq(2, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux174,1),ineq(3, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux173,1),ineq(4, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux170,1),ineq(5, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux181,1),ineq(6, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux179,1),ineq(7, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux178,1),ineq(8, movesTo_00006, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux186,1),ineq(2, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux192,1),ineq(3, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux189,1),ineq(4, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux184,1),ineq(5, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux182,1),ineq(6, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux185,1),ineq(7, movesTo_00007, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux106,1),ineq(2, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux104,1),ineq(3, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux111,1),ineq(4, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux109,1),ineq(5, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux108,1),ineq(6, movesTo_00008, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux98,1),ineq(2, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux101,1),ineq(3, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux102,1),ineq(4, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux103,1),ineq(5, movesTo_00009, 0)})
watched-or({diseq(1,moves_00010),ineq(2, movesTo_00010, 0),w-literal(aux77,1)})
watched-or({diseq(1,moves_00010),ineq(3, movesTo_00010, 0),w-literal(aux74,1)})
watched-or({diseq(1,moves_00010),ineq(4, movesTo_00010, 0),w-literal(aux75,1)})
watched-or({diseq(1,moves_00011),w-literal(aux80,1),ineq(2, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux81,1),ineq(3, movesTo_00011, 0)})
watched-or({gaceq(states_00012_00003,states_00014_00001),ineq(2, movesTo_00012, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00002,11),ineq(2, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00003,3),ineq(movesFrom_00001, 3, 0),ineq(3, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00004,41),ineq(movesFrom_00001, 4, 0),ineq(4, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00005,9),ineq(movesFrom_00001, 5, 0),ineq(5, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00006,35),ineq(movesFrom_00001, 6, 0),ineq(6, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00007,29),ineq(movesFrom_00001, 7, 0),ineq(7, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00008,37),ineq(movesFrom_00001, 8, 0),ineq(8, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00009,4),ineq(movesFrom_00001, 9, 0),ineq(9, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00010,1),ineq(movesFrom_00001, 10, 0),ineq(10, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00011,30),ineq(movesFrom_00001, 11, 0),ineq(11, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00012,18),ineq(movesFrom_00001, 12, 0),ineq(12, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00013,17),ineq(movesFrom_00001, 13, 0),ineq(13, movesTo_00001, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux168,1),ineq(2, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux161,1),ineq(movesFrom_00002, 3, 0),ineq(3, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux160,1),ineq(movesFrom_00002, 4, 0),ineq(4, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux157,1),ineq(movesFrom_00002, 5, 0),ineq(5, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux156,1),ineq(movesFrom_00002, 6, 0),ineq(6, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux166,1),ineq(movesFrom_00002, 7, 0),ineq(7, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux165,1),ineq(movesFrom_00002, 8, 0),ineq(8, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux162,1),ineq(movesFrom_00002, 9, 0),ineq(9, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux149,1),ineq(movesFrom_00002, 10, 0),ineq(10, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux151,1),ineq(movesFrom_00002, 11, 0),ineq(11, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),gaceq(states_00002_00012,states_00003_00012),ineq(movesFrom_00002, 12, 0),ineq(12, movesTo_00002, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux116,1),ineq(movesFrom_00003, 2, 0),ineq(2, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux120,1),ineq(movesFrom_00003, 3, 0),ineq(3, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux118,1),ineq(movesFrom_00003, 4, 0),ineq(4, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux124,1),ineq(movesFrom_00003, 5, 0),ineq(5, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux123,1),ineq(movesFrom_00003, 6, 0),ineq(6, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux129,1),ineq(movesFrom_00003, 7, 0),ineq(7, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux127,1),ineq(movesFrom_00003, 8, 0),ineq(8, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux131,1),ineq(movesFrom_00003, 9, 0),ineq(9, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux113,1),ineq(movesFrom_00003, 10, 0),ineq(10, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),gaceq(states_00004_00011,states_00003_00011),ineq(movesFrom_00003, 11, 0),ineq(11, movesTo_00003, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux144,1),ineq(movesFrom_00004, 2, 0),ineq(2, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux142,1),ineq(movesFrom_00004, 3, 0),ineq(3, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux141,1),ineq(movesFrom_00004, 4, 0),ineq(4, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux138,1),ineq(movesFrom_00004, 5, 0),ineq(5, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux137,1),ineq(movesFrom_00004, 6, 0),ineq(6, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux134,1),ineq(movesFrom_00004, 7, 0),ineq(7, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux133,1),ineq(movesFrom_00004, 8, 0),ineq(8, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux145,1),ineq(movesFrom_00004, 9, 0),ineq(9, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),gaceq(states_00004_00010,states_00005_00010),ineq(movesFrom_00004, 10, 0),ineq(10, movesTo_00004, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux85,1),ineq(movesFrom_00005, 2, 0),ineq(2, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux84,1),ineq(movesFrom_00005, 3, 0),ineq(3, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux88,1),ineq(movesFrom_00005, 4, 0),ineq(4, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux87,1),ineq(movesFrom_00005, 5, 0),ineq(5, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux92,1),ineq(movesFrom_00005, 6, 0),ineq(6, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux91,1),ineq(movesFrom_00005, 7, 0),ineq(7, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux95,1),ineq(movesFrom_00005, 8, 0),ineq(8, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),gaceq(states_00005_00009,states_00006_00009),ineq(movesFrom_00005, 9, 0),ineq(9, movesTo_00005, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 2, 0),w-literal(aux169,1),ineq(2, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 3, 0),w-literal(aux176,1),ineq(3, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 4, 0),w-literal(aux175,1),ineq(4, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 5, 0),w-literal(aux172,1),ineq(5, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 6, 0),w-literal(aux171,1),ineq(6, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 7, 0),w-literal(aux180,1),ineq(7, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 8, 0),gaceq(states_00006_00008,states_00007_00008),ineq(8, movesTo_00006, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux188,1),ineq(movesFrom_00007, 2, 0),ineq(2, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux187,1),ineq(movesFrom_00007, 3, 0),ineq(3, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux191,1),ineq(movesFrom_00007, 4, 0),ineq(4, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux190,1),ineq(movesFrom_00007, 5, 0),ineq(5, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux183,1),ineq(movesFrom_00007, 6, 0),ineq(6, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),gaceq(states_00007_00007,states_00008_00007),ineq(movesFrom_00007, 7, 0),ineq(7, movesTo_00007, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux107,1),ineq(movesFrom_00008, 2, 0),ineq(2, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux105,1),ineq(movesFrom_00008, 3, 0),ineq(3, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux112,1),ineq(movesFrom_00008, 4, 0),ineq(4, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux110,1),ineq(movesFrom_00008, 5, 0),ineq(5, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),gaceq(states_00009_00006,states_00008_00006),ineq(movesFrom_00008, 6, 0),ineq(6, movesTo_00008, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 2, 0),w-literal(aux97,1),ineq(2, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 3, 0),w-literal(aux99,1),ineq(3, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 4, 0),w-literal(aux100,1),ineq(4, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 5, 0),gaceq(states_00009_00005,states_00010_00005),ineq(5, movesTo_00009, 0)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 2, 0),ineq(2, movesTo_00010, 0),w-literal(aux76,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 3, 0),ineq(3, movesTo_00010, 0),w-literal(aux78,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 4, 0),ineq(4, movesTo_00010, 0),gaceq(states_00010_00004,states_00011_00004)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 2, 0),w-literal(aux79,1),ineq(2, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 3, 0),gaceq(states_00012_00003,states_00011_00003),ineq(3, movesTo_00011, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00003,41),ineq(4, movesFrom_00001, 0),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00004,9),ineq(5, movesFrom_00001, 0),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00005,35),ineq(6, movesFrom_00001, 0),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00006,29),ineq(7, movesFrom_00001, 0),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00007,37),ineq(8, movesFrom_00001, 0),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00008,4),ineq(9, movesFrom_00001, 0),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00009,1),ineq(10, movesFrom_00001, 0),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00010,30),ineq(11, movesFrom_00001, 0),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00011,18),ineq(12, movesFrom_00001, 0),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00012,17),ineq(13, movesFrom_00001, 0),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00013,13),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux159,1),ineq(4, movesFrom_00002, 0),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux158,1),ineq(5, movesFrom_00002, 0),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux155,1),ineq(6, movesFrom_00002, 0),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux167,1),ineq(7, movesFrom_00002, 0),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux164,1),ineq(8, movesFrom_00002, 0),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux163,1),ineq(9, movesFrom_00002, 0),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux154,1),ineq(10, movesFrom_00002, 0),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux150,1),ineq(11, movesFrom_00002, 0),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux152,1),ineq(12, movesFrom_00002, 0),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux153,1),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux117,1),ineq(3, movesFrom_00003, 0),ineq(12, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux121,1),ineq(4, movesFrom_00003, 0),ineq(12, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux119,1),ineq(5, movesFrom_00003, 0),ineq(12, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux125,1),ineq(6, movesFrom_00003, 0),ineq(12, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux122,1),ineq(7, movesFrom_00003, 0),ineq(12, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux128,1),ineq(8, movesFrom_00003, 0),ineq(12, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux126,1),ineq(9, movesFrom_00003, 0),ineq(12, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux130,1),ineq(10, movesFrom_00003, 0),ineq(12, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux114,1),ineq(11, movesFrom_00003, 0),ineq(12, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux115,1),ineq(12, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux143,1),ineq(3, movesFrom_00004, 0),ineq(11, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux140,1),ineq(4, movesFrom_00004, 0),ineq(11, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux139,1),ineq(5, movesFrom_00004, 0),ineq(11, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux136,1),ineq(6, movesFrom_00004, 0),ineq(11, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux135,1),ineq(7, movesFrom_00004, 0),ineq(11, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux132,1),ineq(8, movesFrom_00004, 0),ineq(11, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux146,1),ineq(9, movesFrom_00004, 0),ineq(11, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux147,1),ineq(10, movesFrom_00004, 0),ineq(11, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux148,1),ineq(11, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux83,1),ineq(3, movesFrom_00005, 0),ineq(10, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux89,1),ineq(4, movesFrom_00005, 0),ineq(10, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux86,1),ineq(5, movesFrom_00005, 0),ineq(10, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux93,1),ineq(6, movesFrom_00005, 0),ineq(10, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux90,1),ineq(7, movesFrom_00005, 0),ineq(10, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux96,1),ineq(8, movesFrom_00005, 0),ineq(10, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux94,1),ineq(9, movesFrom_00005, 0),ineq(10, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux82,1),ineq(10, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux177,1),ineq(3, movesFrom_00006, 0),ineq(9, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux174,1),ineq(4, movesFrom_00006, 0),ineq(9, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux173,1),ineq(5, movesFrom_00006, 0),ineq(9, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux170,1),ineq(6, movesFrom_00006, 0),ineq(9, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux181,1),ineq(7, movesFrom_00006, 0),ineq(9, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux179,1),ineq(8, movesFrom_00006, 0),ineq(9, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux178,1),ineq(9, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux186,1),ineq(3, movesFrom_00007, 0),ineq(8, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux192,1),ineq(4, movesFrom_00007, 0),ineq(8, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux189,1),ineq(5, movesFrom_00007, 0),ineq(8, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux184,1),ineq(6, movesFrom_00007, 0),ineq(8, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux182,1),ineq(7, movesFrom_00007, 0),ineq(8, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux185,1),ineq(8, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux106,1),ineq(3, movesFrom_00008, 0),ineq(7, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux104,1),ineq(4, movesFrom_00008, 0),ineq(7, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux111,1),ineq(5, movesFrom_00008, 0),ineq(7, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux109,1),ineq(6, movesFrom_00008, 0),ineq(7, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux108,1),ineq(7, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux98,1),ineq(3, movesFrom_00009, 0),ineq(6, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux101,1),ineq(4, movesFrom_00009, 0),ineq(6, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux102,1),ineq(5, movesFrom_00009, 0),ineq(6, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux103,1),ineq(6, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00010),ineq(3, movesFrom_00010, 0),ineq(5, movesFrom_00010, 0),w-literal(aux77,1)})
watched-or({diseq(3,moves_00010),ineq(4, movesFrom_00010, 0),ineq(5, movesFrom_00010, 0),w-literal(aux74,1)})
watched-or({diseq(3,moves_00010),ineq(5, movesFrom_00010, 0),w-literal(aux75,1)})
watched-or({diseq(3,moves_00011),w-literal(aux80,1),ineq(3, movesFrom_00011, 0),ineq(4, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux81,1),ineq(4, movesFrom_00011, 0)})
reifyimply(w-literal(states_00002_00001,49), aux231)
reifyimply(w-literal(states_00002_00002,11), aux232)
reifyimply(w-literal(states_00002_00003,3), aux233)
reifyimply(w-literal(states_00002_00004,41), aux234)
reifyimply(w-literal(states_00002_00005,9), aux235)
reifyimply(w-literal(states_00002_00006,35), aux236)
reifyimply(w-literal(states_00002_00007,29), aux237)
reifyimply(w-literal(states_00002_00008,37), aux238)
reifyimply(w-literal(states_00002_00009,4), aux239)
reifyimply(w-literal(states_00002_00010,1), aux240)
reifyimply(w-literal(states_00002_00011,30), aux241)
reifyimply(w-literal(states_00002_00012,18), aux242)
reifyimply(gaceq(states_00002_00001,states_00003_00001), aux243)
ineq(aux244, aux168, 0)
ineq(aux245, aux161, 0)
ineq(aux246, aux160, 0)
ineq(aux247, aux157, 0)
ineq(aux248, aux156, 0)
ineq(aux249, aux166, 0)
ineq(aux250, aux165, 0)
ineq(aux251, aux162, 0)
ineq(aux252, aux149, 0)
ineq(aux253, aux151, 0)
reifyimply(gaceq(states_00004_00001,states_00003_00001), aux254)
ineq(aux255, aux116, 0)
ineq(aux256, aux120, 0)
ineq(aux257, aux118, 0)
ineq(aux258, aux124, 0)
ineq(aux259, aux123, 0)
ineq(aux260, aux129, 0)
ineq(aux261, aux127, 0)
ineq(aux262, aux131, 0)
ineq(aux263, aux113, 0)
reifyimply(gaceq(states_00004_00001,states_00005_00001), aux264)
ineq(aux265, aux144, 0)
ineq(aux266, aux142, 0)
ineq(aux267, aux141, 0)
ineq(aux268, aux138, 0)
ineq(aux269, aux137, 0)
ineq(aux270, aux134, 0)
ineq(aux271, aux133, 0)
ineq(aux272, aux145, 0)
reifyimply(gaceq(states_00005_00001,states_00006_00001), aux273)
ineq(aux274, aux85, 0)
ineq(aux275, aux84, 0)
ineq(aux276, aux88, 0)
ineq(aux277, aux87, 0)
ineq(aux278, aux92, 0)
ineq(aux279, aux91, 0)
ineq(aux280, aux95, 0)
reifyimply(gaceq(states_00006_00001,states_00007_00001), aux281)
ineq(aux282, aux169, 0)
ineq(aux283, aux176, 0)
ineq(aux284, aux175, 0)
ineq(aux285, aux172, 0)
ineq(aux286, aux171, 0)
ineq(aux287, aux180, 0)
reifyimply(gaceq(states_00007_00001,states_00008_00001), aux288)
ineq(aux289, aux188, 0)
ineq(aux290, aux187, 0)
ineq(aux291, aux191, 0)
ineq(aux292, aux190, 0)
ineq(aux293, aux183, 0)
reifyimply(gaceq(states_00009_00001,states_00008_00001), aux294)
ineq(aux295, aux107, 0)
ineq(aux296, aux105, 0)
ineq(aux297, aux112, 0)
ineq(aux298, aux110, 0)
reifyimply(gaceq(states_00009_00001,states_00010_00001), aux299)
ineq(aux300, aux97, 0)
ineq(aux301, aux99, 0)
ineq(aux302, aux100, 0)
reifyimply(gaceq(states_00010_00001,states_00011_00001), aux303)
ineq(aux304, aux76, 0)
ineq(aux305, aux78, 0)
reifyimply(gaceq(states_00012_00001,states_00011_00001), aux306)
ineq(aux307, aux79, 0)
reifyimply(gaceq(states_00012_00001,states_00013_00001), aux308)
watchelement([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013], aux68, aux17)
watchelement([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012], aux70, aux21)
watchelement([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011], aux69, aux19)
watchelement([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010], aux65, aux22)
watchelement([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009], aux64, aux24)
watchelement([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008], aux67, aux27)
watchelement([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007], aux66, aux28)
watchelement([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006], aux63, aux31)
watchelement([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005], aux62, aux33)
watchelement([states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004], aux73, aux35)
watchelement([states_00012_00001, states_00012_00002, states_00012_00003], aux72, aux37)
watchelement([states_00013_00001, states_00014_00001], aux71, aux38)
watched-or({div(aux17, 13, aux193),modulo(aux17,13,aux194)})
watched-or({div(aux21, 13, aux195),modulo(aux21,13,aux196)})
watched-or({div(aux20, 13, aux197),modulo(aux20,13,aux198)})
watched-or({modulo(aux23,13,aux199),div(aux23, 13, aux200)})
watched-or({div(aux25, 13, aux201),modulo(aux25,13,aux202)})
watched-or({div(aux27, 13, aux203),modulo(aux27,13,aux204)})
watched-or({div(aux28, 13, aux205),modulo(aux28,13,aux206)})
watched-or({div(aux31, 13, aux207),modulo(aux31,13,aux208)})
watched-or({div(aux32, 13, aux209),modulo(aux33,13,aux210)})
watched-or({div(aux35, 13, aux211),modulo(aux35,13,aux212)})
watched-or({modulo(aux36,13,aux213),div(aux37, 13, aux214)})
watched-or({modulo(aux38,13,aux215),div(aux39, 13, aux216)})
watched-or({div(states_00014_00001, 13, aux217),modulo(states_00013_00001,13,aux218)})
watched-or({w-literal(aux40,1),w-literal(aux43,1)})
watched-or({w-literal(aux41,1),w-literal(aux44,1)})
watched-or({w-literal(aux42,1),w-literal(aux46,1)})
watched-or({w-literal(aux45,1),w-literal(aux49,1)})
watched-or({w-literal(aux47,1),w-literal(aux51,1)})
watched-or({w-literal(aux48,1),w-literal(aux52,1)})
watched-or({w-literal(aux50,1),w-literal(aux54,1)})
watched-or({w-literal(aux53,1),w-literal(aux56,1)})
watched-or({w-literal(aux55,1),w-literal(aux57,1)})
watched-or({w-literal(aux59,1),w-literal(aux61,1)})
watched-or({w-literal(aux58,1),w-literal(aux60,1)})
reifyimply(w-literal(moves_00001,1), aux40)
reifyimply(w-literal(moves_00002,1), aux41)
reifyimply(w-literal(moves_00003,1), aux42)
reifyimply(w-literal(moves_00004,1), aux45)
reifyimply(w-literal(moves_00005,1), aux47)
reifyimply(w-literal(moves_00006,1), aux48)
reifyimply(w-literal(moves_00007,1), aux50)
reifyimply(w-literal(moves_00008,1), aux53)
reifyimply(w-literal(moves_00009,1), aux55)
reifyimply(w-literal(moves_00010,1), aux59)
reifyimply(w-literal(moves_00011,1), aux58)
reifyimply(w-literal(moves_00001,3), aux43)
reifyimply(w-literal(moves_00002,3), aux44)
reifyimply(w-literal(moves_00003,3), aux46)
reifyimply(w-literal(moves_00004,3), aux49)
reifyimply(w-literal(moves_00005,3), aux51)
reifyimply(w-literal(moves_00006,3), aux52)
reifyimply(w-literal(moves_00007,3), aux54)
reifyimply(w-literal(moves_00008,3), aux56)
reifyimply(w-literal(moves_00009,3), aux57)
reifyimply(w-literal(moves_00010,3), aux61)
reifyimply(w-literal(moves_00011,3), aux60)
ineq(movesTo_00001, movesFrom_00001, -1)
ineq(movesTo_00002, movesFrom_00002, -1)
ineq(movesTo_00003, movesFrom_00003, -1)
ineq(movesTo_00004, movesFrom_00004, -1)
ineq(movesTo_00005, movesFrom_00005, -1)
ineq(movesTo_00006, movesFrom_00006, -1)
ineq(movesTo_00007, movesFrom_00007, -1)
ineq(movesTo_00008, movesFrom_00008, -1)
ineq(movesTo_00009, movesFrom_00009, -1)
ineq(movesTo_00010, movesFrom_00010, -1)
ineq(movesTo_00011, movesFrom_00011, -1)
ineq(movesTo_00012, movesFrom_00012, -1)
sumleq([-3,movesFrom_00001],aux219)
sumgeq([-3,movesFrom_00001],aux219)
sumleq([-2,movesFrom_00003],aux220)
sumgeq([-2,movesFrom_00003],aux220)
sumleq([-3,movesFrom_00002],aux221)
sumgeq([-3,movesFrom_00002],aux221)
sumleq([-2,movesFrom_00004],aux222)
sumgeq([-2,movesFrom_00004],aux222)
sumleq([-2,movesFrom_00005],aux223)
sumgeq([-2,movesFrom_00005],aux223)
sumleq([-2,movesFrom_00006],aux224)
sumgeq([-2,movesFrom_00006],aux224)
sumleq([-2,movesFrom_00007],aux225)
sumgeq([-2,movesFrom_00007],aux225)
sumleq([-2,movesFrom_00008],aux226)
sumgeq([-2,movesFrom_00008],aux226)
sumleq([-2,movesFrom_00009],aux227)
sumgeq([-2,movesFrom_00009],aux227)
sumleq([-2,movesFrom_00010],aux228)
sumgeq([-2,movesFrom_00010],aux228)
sumleq([-2,movesFrom_00011],aux229)
sumgeq([-2,movesFrom_00011],aux229)
sumleq([-2,movesFrom_00012],aux230)
sumgeq([-2,movesFrom_00012],aux230)
sumleq([-1,movesTo_00009],aux62)
sumgeq([-1,movesTo_00009],aux62)
sumleq([-1,movesTo_00008],aux63)
sumgeq([-1,movesTo_00008],aux63)
sumleq([-1,movesTo_00005],aux64)
sumgeq([-1,movesTo_00005],aux64)
sumleq([-1,movesTo_00004],aux65)
sumgeq([-1,movesTo_00004],aux65)
sumleq([-1,movesTo_00007],aux66)
sumgeq([-1,movesTo_00007],aux66)
sumleq([-1,movesTo_00006],aux67)
sumgeq([-1,movesTo_00006],aux67)
sumleq([-1,movesTo_00001],aux68)
sumgeq([-1,movesTo_00001],aux68)
sumleq([-1,movesTo_00003],aux69)
sumgeq([-1,movesTo_00003],aux69)
sumleq([-1,movesTo_00002],aux70)
sumgeq([-1,movesTo_00002],aux70)
sumleq([-1,movesTo_00012],aux71)
sumgeq([-1,movesTo_00012],aux71)
sumleq([-1,movesTo_00011],aux72)
sumgeq([-1,movesTo_00011],aux72)
sumleq([-1,movesTo_00010],aux73)
sumgeq([-1,movesTo_00010],aux73)
sumleq([1,movesTo_00012],movesFrom_00012)
sumgeq([1,movesTo_00012],movesFrom_00012)
**EOF**
