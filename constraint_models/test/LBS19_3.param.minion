MINION 3
# CSETopLevel_number = 1
# CSETopLevel_eliminated_expressions = 2
# CSETopLevel_total_size = 5
# CSE_active_number = 336
# CSE_active_eliminated_expressions = 689
# CSE_active_total_size = 1509
**VARIABLES**
DISCRETE moves_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00001, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00002 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00002, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00003 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00003, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00004 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00004, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00005 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00005, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00006 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00006, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00007 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00007, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00008 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00008, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00009 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00009, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00010 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00010, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00011 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00011, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00012 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00012, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00013 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00013, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00014 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00014, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00015 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00015, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00016 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00016, [1,1,3,3])
**VARIABLES**
DISCRETE movesFrom_00001 #
{2..18}
DISCRETE movesFrom_00002 #
{2..18}
DISCRETE movesFrom_00003 #
{2..17}
DISCRETE movesFrom_00004 #
{2..16}
DISCRETE movesFrom_00005 #
{2..15}
DISCRETE movesFrom_00006 #
{2..14}
DISCRETE movesFrom_00007 #
{2..13}
DISCRETE movesFrom_00008 #
{2..12}
DISCRETE movesFrom_00009 #
{2..11}
DISCRETE movesFrom_00010 #
{2..10}
DISCRETE movesFrom_00011 #
{2..9}
DISCRETE movesFrom_00012 #
{2..8}
DISCRETE movesFrom_00013 #
{2..7}
DISCRETE movesFrom_00014 #
{2..6}
DISCRETE movesFrom_00015 #
{2..5}
DISCRETE movesFrom_00016 #
{2..4}
DISCRETE movesFrom_00017 #
{2..3}
DISCRETE movesTo_00001 #
{1..15}
DISCRETE movesTo_00002 #
{1..16}
DISCRETE movesTo_00003 #
{1..16}
DISCRETE movesTo_00004 #
{1..15}
DISCRETE movesTo_00005 #
{1..14}
DISCRETE movesTo_00006 #
{1..13}
DISCRETE movesTo_00007 #
{1..12}
DISCRETE movesTo_00008 #
{1..11}
DISCRETE movesTo_00009 #
{1..10}
DISCRETE movesTo_00010 #
{1..9}
DISCRETE movesTo_00011 #
{1..8}
DISCRETE movesTo_00012 #
{1..7}
DISCRETE movesTo_00013 #
{1..6}
DISCRETE movesTo_00014 #
{1..5}
DISCRETE movesTo_00015 #
{1..4}
DISCRETE movesTo_00016 #
{1..3}
DISCRETE movesTo_00017 #
{1..2}
DISCRETE states_00002_00001 #
{18..21}
**CONSTRAINTS**
w-inintervalset(states_00002_00001, [18,18,20,21])
**VARIABLES**
DISCRETE states_00002_00002 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00002, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00003 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00003, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00004 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00004, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00005 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00005, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00006 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00006, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00007 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00007, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00008 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00008, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00009 #
{3..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00009, [3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00010 #
{3..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00010, [3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00011 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00011, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00012 #
{10..13}
**CONSTRAINTS**
w-inintervalset(states_00002_00012, [10,10,12,13])
**VARIABLES**
DISCRETE states_00002_00013 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00013, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00014 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00014, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00015 #
{7..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00015, [7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00002_00016 #
{20..40}
**CONSTRAINTS**
w-inintervalset(states_00002_00016, [20,21,27,28,31,31,34,34,37,37,40,40])
**VARIABLES**
DISCRETE states_00002_00017 #
{34..40}
**CONSTRAINTS**
w-inintervalset(states_00002_00017, [34,34,37,37,40,40])
**VARIABLES**
DISCRETE states_00003_00001 #
{13..31}
**CONSTRAINTS**
w-inintervalset(states_00003_00001, [13,13,18,18,20,21,27,28,31,31])
**VARIABLES**
DISCRETE states_00003_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00008 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00008, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00009 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00009, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00010 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00010, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00011 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00011, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00012 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00012, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00013 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00013, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00014 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00014, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00015 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00015, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00016 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00016, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00003_00017 #
{0..34}
**CONSTRAINTS**
w-inintervalset(states_00003_00017, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34])
**VARIABLES**
DISCRETE states_00004_00001 #
{0..37}
**CONSTRAINTS**
w-inintervalset(states_00004_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37])
**VARIABLES**
DISCRETE states_00004_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00008 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00008, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00009 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00009, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00010 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00010, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00011 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00011, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00012 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00012, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00013 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00013, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00014 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00014, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00015 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00015, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00004_00016 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00016, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00001 #
{0..41}
**CONSTRAINTS**
w-inintervalset(states_00005_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41])
**VARIABLES**
DISCRETE states_00005_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00008 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00008, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00009 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00009, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00010 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00010, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00011 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00011, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00012 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00012, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00013 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00013, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00014 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00014, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00005_00015 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00015, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00008 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00008, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00009 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00009, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00010 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00010, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00011 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00011, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00012 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00012, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00013 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00013, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00006_00014 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00014, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00008 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00008, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00009 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00009, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00010 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00010, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00011 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00011, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00012 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00012, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00007_00013 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00013, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00008 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00008, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00009 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00009, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00010 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00010, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00011 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00011, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00008_00012 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00012, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00008 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00008, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00009 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00009, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00010 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00010, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00009_00011 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00011, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00010_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00010_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00010_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00010_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00010_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00010_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00010_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00010_00008 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00008, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00010_00009 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00009, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00010_00010 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00010, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00011_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00011_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00011_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00011_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00011_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00011_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00011_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00011_00008 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00008, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00011_00009 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00009, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00012_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00012_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00012_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00012_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00012_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00012_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00012_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00012_00008 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00008, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00013_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00013_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00013_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00013_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00013_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00013_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00013_00007 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00007, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00014_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00014_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00014_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00014_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00014_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00014_00006 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00006, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00015_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00015_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00015_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00015_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00015_00005 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00005, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00016_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00016_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00016_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00016_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00016_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00016_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00016_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00016_00004, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00017_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00017_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00017_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00017_00002, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00017_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00017_00003, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00018_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00018_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE states_00019_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(states_00019_00001, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016, states_00002_00017, 0], (-2 + movesFrom_00002))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux16, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: Element([21, 12, 7, 28, 37, 27, 41, 43, 3, 49, 13, 10, 9, 31, 20, 40, 34], (-2 + movesFrom_00001))
{3..49}
**CONSTRAINTS**
w-inintervalset(aux17, [3,3,7,7,9,10,12,13,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016], (-1 + movesTo_00003))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux18, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016], (-1 + movesTo_00002))
{3..49}
**CONSTRAINTS**
w-inintervalset(aux19, [3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux20 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016, states_00003_00017], (-2 + movesFrom_00003))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux20, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015], (-1 + movesTo_00004))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux21, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux22 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015, states_00004_00016], (-2 + movesFrom_00004))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux22, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: Element([18, 21, 12, 7, 28, 37, 27, 41, 43, 3, 49, 13, 10, 9, 31], (-1 + movesTo_00001))
{3..49}
**CONSTRAINTS**
w-inintervalset(aux23, [3,3,7,7,9,10,12,13,18,18,21,21,27,28,31,31,37,37,41,41,43,43,49,49])
**VARIABLES**
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014], (-1 + movesTo_00005))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux24, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux25 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014, states_00005_00015], (-2 + movesFrom_00005))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux25, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux26 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013, states_00006_00014], (-2 + movesFrom_00006))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux26, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013], (-1 + movesTo_00006))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux27, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012], (-1 + movesTo_00007))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux28, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux29 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012, states_00007_00013], (-2 + movesFrom_00007))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux29, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux30 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011, states_00008_00012], (-2 + movesFrom_00008))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux30, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011], (-1 + movesTo_00008))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux31, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux32 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010, states_00009_00011], (-2 + movesFrom_00009))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux32, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010], (-1 + movesTo_00009))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux33, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009, states_00010_00010], (-2 + movesFrom_00010))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux34, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009], (-1 + movesTo_00010))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux35, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008, states_00011_00009], (-2 + movesFrom_00011))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux36, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008], (-1 + movesTo_00011))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux37, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux38 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007, states_00012_00008], (-2 + movesFrom_00012))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux38, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00012_00001, states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007], (-1 + movesTo_00012))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux39, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00013_00001, states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006], (-1 + movesTo_00013))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux40, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux41 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006, states_00013_00007], (-2 + movesFrom_00013))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux41, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00014_00001, states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005], (-1 + movesTo_00014))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux42, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005, states_00014_00006], (-2 + movesFrom_00014))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux43, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00015_00001, states_00015_00002, states_00015_00003, states_00015_00004], (-1 + movesTo_00015))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux44, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux45 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00015_00002, states_00015_00003, states_00015_00004, states_00015_00005], (-2 + movesFrom_00015))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux45, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00016_00002, states_00016_00003, states_00016_00004], (-2 + movesFrom_00016))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux46, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00016_00001, states_00016_00002, states_00016_00003], (-1 + movesTo_00016))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux47, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux48 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00017_00002, states_00017_00003], (-2 + movesFrom_00017))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux48, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00017_00001, states_00017_00002], (-1 + movesTo_00017))
{0..49}
**CONSTRAINTS**
w-inintervalset(aux49, [0,0,3,3,7,7,9,10,12,13,18,18,20,21,27,28,31,31,34,34,37,37,40,41,43,43,49,49])
**VARIABLES**
BOOL aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00001=(1 + movesTo_00001))
BOOL aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00002=(1 + movesTo_00002))
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00003=(1 + movesTo_00003))
BOOL aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00001=(3 + movesTo_00001))
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00002=(3 + movesTo_00002))
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00004=(1 + movesTo_00004))
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00003=(3 + movesTo_00003))
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00005=(1 + movesTo_00005))
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00006=(1 + movesTo_00006))
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00004=(3 + movesTo_00004))
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00007=(1 + movesTo_00007))
BOOL aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00005=(3 + movesTo_00005))
BOOL aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00006=(3 + movesTo_00006))
BOOL aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00008=(1 + movesTo_00008))
BOOL aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00007=(3 + movesTo_00007))
BOOL aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00009=(1 + movesTo_00009))
BOOL aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00008=(3 + movesTo_00008))
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00009=(3 + movesTo_00009))
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00011=(1 + movesTo_00011))
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00010=(1 + movesTo_00010))
BOOL aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00013=(1 + movesTo_00013))
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00011=(3 + movesTo_00011))
BOOL aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00010=(3 + movesTo_00010))
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00012=(1 + movesTo_00012))
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00013=(3 + movesTo_00013))
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00015=(1 + movesTo_00015))
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00014=(1 + movesTo_00014))
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00012=(3 + movesTo_00012))
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00015=(3 + movesTo_00015))
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00014=(3 + movesTo_00014))
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00016=(1 + movesTo_00016))
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00016=(3 + movesTo_00016))
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00013_00002)
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00013_00002)
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00013_00003)
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00006=states_00013_00006)
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00006=states_00013_00005)
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00007=states_00013_00006)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00004=states_00013_00004)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00004=states_00013_00003)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00005=states_00013_00004)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00005=states_00013_00005)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00008=states_00013_00007)
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00009)
{0..9}
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00008)
{0..10}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00005)
{0..13}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00004)
{0..14}
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00007)
{0..11}
DISCRETE aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00006)
{0..12}
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00001)
{0..14}
**CONSTRAINTS**
w-inintervalset(aux99, [0,10,12,14])
**VARIABLES**
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00003)
{0..15}
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00002)
{0..15}
BOOL aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00017)
DISCRETE aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00016)
{0..2}
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00013)
{0..5}
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00012)
{0..6}
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00015)
{0..3}
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00014)
{0..4}
DISCRETE aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00011)
{0..7}
DISCRETE aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00010)
{0..8}
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00008=states_00011_00008)
BOOL aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00008=states_00011_00007)
BOOL aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00009=states_00011_00008)
BOOL aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00006=states_00011_00006)
BOOL aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00006=states_00011_00005)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00007=states_00011_00006)
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00007=states_00011_00007)
BOOL aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00004=states_00011_00004)
BOOL aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00004=states_00011_00003)
BOOL aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00005=states_00011_00004)
BOOL aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00005=states_00011_00005)
BOOL aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00002=states_00011_00002)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00003=states_00011_00002)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00003=states_00011_00003)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00010=states_00011_00009)
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00004=states_00011_00004)
BOOL aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00004=states_00011_00005)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00005=states_00011_00005)
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00005=states_00011_00006)
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00006=states_00011_00006)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00006=states_00011_00007)
BOOL aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00007=states_00011_00007)
BOOL aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00007=states_00011_00008)
BOOL aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00011_00002)
BOOL aux134 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00011_00003)
BOOL aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00011_00003)
BOOL aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00011_00004)
BOOL aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00008=states_00011_00009)
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00002=states_00016_00002)
BOOL aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00002=states_00016_00003)
BOOL aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00003=states_00016_00004)
BOOL aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00006=states_00015_00005)
BOOL aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00004=states_00015_00004)
BOOL aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00004=states_00015_00003)
BOOL aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00005=states_00015_00004)
BOOL aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00002=states_00015_00002)
BOOL aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00003=states_00015_00002)
BOOL aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00003=states_00015_00003)
BOOL aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00013=states_00006_00013)
BOOL aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00013=states_00006_00012)
BOOL aux150 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00014=states_00006_00013)
BOOL aux151 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00011=states_00006_00011)
BOOL aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00011=states_00006_00010)
BOOL aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00012=states_00006_00011)
BOOL aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00012=states_00006_00012)
BOOL aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00015=states_00006_00014)
BOOL aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00010=states_00006_00009)
BOOL aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00010=states_00006_00010)
BOOL aux158 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00003=states_00006_00002)
BOOL aux159 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00003=states_00006_00003)
BOOL aux160 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00002=states_00006_00002)
BOOL aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00005=states_00006_00004)
BOOL aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00005=states_00006_00005)
BOOL aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00004=states_00006_00004)
BOOL aux164 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00004=states_00006_00003)
BOOL aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00007=states_00006_00006)
BOOL aux166 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00007=states_00006_00007)
BOOL aux167 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00006=states_00006_00006)
BOOL aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00006=states_00006_00005)
BOOL aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00009=states_00006_00008)
BOOL aux170 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00009=states_00006_00009)
BOOL aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00008=states_00006_00008)
BOOL aux172 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00008=states_00006_00007)
BOOL aux173 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00010_00002)
BOOL aux174 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00010_00002)
BOOL aux175 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00010_00003)
BOOL aux176 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00010_00004)
BOOL aux177 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00010_00003)
BOOL aux178 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00010_00005)
BOOL aux179 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00010_00004)
BOOL aux180 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00010_00006)
BOOL aux181 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00010_00005)
BOOL aux182 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00007=states_00010_00006)
BOOL aux183 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00007=states_00010_00007)
BOOL aux184 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00008=states_00010_00008)
BOOL aux185 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00008=states_00010_00007)
BOOL aux186 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00009=states_00010_00009)
BOOL aux187 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00009=states_00010_00008)
BOOL aux188 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00010=states_00010_00009)
BOOL aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00011=states_00010_00010)
BOOL aux190 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00007=states_00014_00006)
BOOL aux191 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00003=states_00014_00003)
BOOL aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00003=states_00014_00002)
BOOL aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00004=states_00014_00003)
BOOL aux194 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00004=states_00014_00004)
BOOL aux195 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00005=states_00014_00005)
BOOL aux196 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00005=states_00014_00004)
BOOL aux197 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00006=states_00014_00005)
BOOL aux198 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00002=states_00014_00002)
BOOL aux199 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00010=states_00008_00010)
BOOL aux200 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00010=states_00008_00011)
BOOL aux201 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00011=states_00008_00012)
BOOL aux202 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00008=states_00008_00009)
BOOL aux203 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00008=states_00008_00008)
BOOL aux204 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00009=states_00008_00009)
BOOL aux205 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00009=states_00008_00010)
BOOL aux206 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00008_00004)
BOOL aux207 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00008_00003)
BOOL aux208 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00008_00003)
BOOL aux209 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00008_00002)
BOOL aux210 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00007=states_00008_00008)
BOOL aux211 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00007=states_00008_00007)
BOOL aux212 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00008_00007)
BOOL aux213 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00008_00006)
BOOL aux214 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00008_00006)
BOOL aux215 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00008_00005)
BOOL aux216 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00008_00005)
BOOL aux217 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00008_00004)
BOOL aux218 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00003_00010)
BOOL aux219 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00003_00011)
BOOL aux220 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00003_00011)
BOOL aux221 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00003_00012)
BOOL aux222 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00014=states_00003_00014)
BOOL aux223 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00014=states_00003_00015)
BOOL aux224 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00015=states_00003_00015)
BOOL aux225 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00015=states_00003_00016)
BOOL aux226 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00012=states_00003_00012)
BOOL aux227 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00012=states_00003_00013)
BOOL aux228 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00013=states_00003_00013)
BOOL aux229 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00013=states_00003_00014)
BOOL aux230 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00016=states_00003_00017)
BOOL aux231 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00003_00002)
BOOL aux232 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00003_00003)
BOOL aux233 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00003_00004)
BOOL aux234 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00003_00005)
BOOL aux235 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00003_00003)
BOOL aux236 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00003_00004)
BOOL aux237 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00003_00007)
BOOL aux238 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00003_00006)
BOOL aux239 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00003_00005)
BOOL aux240 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00003_00006)
BOOL aux241 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00003_00009)
BOOL aux242 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00003_00008)
BOOL aux243 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00003_00008)
BOOL aux244 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00003_00007)
BOOL aux245 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00003_00010)
BOOL aux246 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00003_00009)
BOOL aux247 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00005_00007)
BOOL aux248 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00005_00008)
BOOL aux249 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00005_00007)
BOOL aux250 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00005_00006)
BOOL aux251 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00005_00005)
BOOL aux252 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00005_00006)
BOOL aux253 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00005_00005)
BOOL aux254 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00005_00004)
BOOL aux255 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00005_00003)
BOOL aux256 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00005_00004)
BOOL aux257 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00005_00003)
BOOL aux258 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00005_00002)
BOOL aux259 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00005_00002)
BOOL aux260 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00005_00009)
BOOL aux261 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00005_00008)
BOOL aux262 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00005_00009)
BOOL aux263 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00005_00010)
BOOL aux264 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00005_00010)
BOOL aux265 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00005_00011)
BOOL aux266 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00012=states_00005_00012)
BOOL aux267 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00012=states_00005_00011)
BOOL aux268 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00013=states_00005_00012)
BOOL aux269 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00013=states_00005_00013)
BOOL aux270 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00014=states_00005_00014)
BOOL aux271 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00014=states_00005_00013)
BOOL aux272 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00015=states_00005_00014)
BOOL aux273 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00016=states_00005_00015)
BOOL aux274 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00014=states_00003_00014)
BOOL aux275 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00014=states_00003_00013)
BOOL aux276 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00015=states_00003_00014)
BOOL aux277 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00015=states_00003_00015)
BOOL aux278 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00016=states_00003_00015)
BOOL aux279 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00017=states_00003_00016)
BOOL aux280 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00010=states_00003_00010)
BOOL aux281 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00011=states_00003_00010)
BOOL aux282 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00011=states_00003_00011)
BOOL aux283 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00012=states_00003_00012)
BOOL aux284 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00012=states_00003_00011)
BOOL aux285 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00013=states_00003_00012)
BOOL aux286 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00013=states_00003_00013)
BOOL aux287 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00010=states_00003_00009)
BOOL aux288 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00006=states_00003_00005)
BOOL aux289 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00006=states_00003_00006)
BOOL aux290 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00005=states_00003_00005)
BOOL aux291 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00005=states_00003_00004)
BOOL aux292 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00004=states_00003_00003)
BOOL aux293 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00004=states_00003_00004)
BOOL aux294 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00003=states_00003_00003)
BOOL aux295 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00003=states_00003_00002)
BOOL aux296 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00009=states_00003_00009)
BOOL aux297 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00009=states_00003_00008)
BOOL aux298 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00008=states_00003_00007)
BOOL aux299 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00008=states_00003_00008)
BOOL aux300 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00007=states_00003_00007)
BOOL aux301 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00007=states_00003_00006)
BOOL aux302 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00002=states_00003_00002)
BOOL aux303 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00002=states_00007_00002)
BOOL aux304 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00006=states_00007_00005)
BOOL aux305 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00006=states_00007_00006)
BOOL aux306 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00005=states_00007_00005)
BOOL aux307 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00005=states_00007_00004)
BOOL aux308 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00004=states_00007_00003)
BOOL aux309 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00004=states_00007_00004)
BOOL aux310 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00003=states_00007_00003)
BOOL aux311 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00003=states_00007_00002)
BOOL aux312 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00009=states_00007_00009)
BOOL aux313 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00009=states_00007_00008)
BOOL aux314 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00008=states_00007_00007)
BOOL aux315 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00008=states_00007_00008)
BOOL aux316 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00007=states_00007_00007)
BOOL aux317 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00007=states_00007_00006)
BOOL aux318 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00010=states_00007_00009)
BOOL aux319 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00014=states_00007_00013)
BOOL aux320 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00010=states_00007_00010)
BOOL aux321 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00011=states_00007_00010)
BOOL aux322 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00011=states_00007_00011)
BOOL aux323 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00012=states_00007_00012)
BOOL aux324 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00012=states_00007_00011)
BOOL aux325 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00013=states_00007_00012)
BOOL aux326 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00007=states_00008_00006)
BOOL aux327 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00007=states_00008_00007)
BOOL aux328 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00006=states_00008_00006)
BOOL aux329 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00006=states_00008_00005)
BOOL aux330 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00009=states_00008_00008)
BOOL aux331 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00009=states_00008_00009)
BOOL aux332 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00008=states_00008_00008)
BOOL aux333 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00008=states_00008_00007)
BOOL aux334 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00003=states_00008_00002)
BOOL aux335 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00003=states_00008_00003)
BOOL aux336 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00002=states_00008_00002)
BOOL aux337 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00005=states_00008_00004)
BOOL aux338 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00005=states_00008_00005)
BOOL aux339 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00004=states_00008_00004)
BOOL aux340 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00004=states_00008_00003)
BOOL aux341 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00013=states_00008_00012)
BOOL aux342 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00011=states_00008_00011)
BOOL aux343 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00011=states_00008_00010)
BOOL aux344 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00012=states_00008_00011)
BOOL aux345 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00010=states_00008_00009)
BOOL aux346 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00010=states_00008_00010)
BOOL aux347 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00002=states_00016_00002)
BOOL aux348 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00003=states_00016_00003)
BOOL aux349 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00003=states_00016_00002)
BOOL aux350 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00004=states_00016_00003)
BOOL aux351 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00005=states_00016_00004)
DISCRETE aux352 #
{0..3}
DISCRETE aux353 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux353, [0,5,7,12])
**VARIABLES**
DISCRETE aux354 #
{0..3}
DISCRETE aux355 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux355, [0,5,7,12])
**VARIABLES**
DISCRETE aux356 #
{0..3}
DISCRETE aux357 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux357, [0,5,7,12])
**VARIABLES**
DISCRETE aux358 #
{0..3}
DISCRETE aux359 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux359, [0,5,7,12])
**VARIABLES**
DISCRETE aux360 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux360, [0,5,7,12])
**VARIABLES**
DISCRETE aux361 #
{0..3}
DISCRETE aux362 #
{0..3}
DISCRETE aux363 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux363, [0,5,7,12])
**VARIABLES**
DISCRETE aux364 #
{0..3}
DISCRETE aux365 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux365, [0,5,7,12])
**VARIABLES**
DISCRETE aux366 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux366, [0,5,7,12])
**VARIABLES**
DISCRETE aux367 #
{0..3}
DISCRETE aux368 #
{0..3}
DISCRETE aux369 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux369, [0,5,7,12])
**VARIABLES**
DISCRETE aux370 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux370, [0,5,7,12])
**VARIABLES**
DISCRETE aux371 #
{0..3}
DISCRETE aux372 #
{0..3}
DISCRETE aux373 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux373, [0,5,7,12])
**VARIABLES**
DISCRETE aux374 #
{0..3}
DISCRETE aux375 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux375, [0,5,7,12])
**VARIABLES**
DISCRETE aux376 #
{0..3}
DISCRETE aux377 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux377, [0,5,7,12])
**VARIABLES**
DISCRETE aux378 #
{0..3}
DISCRETE aux379 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux379, [0,5,7,12])
**VARIABLES**
DISCRETE aux380 #
{0..3}
DISCRETE aux381 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux381, [0,5,7,12])
**VARIABLES**
DISCRETE aux382 #
{0..3}
DISCRETE aux383 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux383, [0,5,7,12])
**VARIABLES**
DISCRETE aux384 #
{0..3}
DISCRETE aux385 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux385, [0,5,7,12])
**VARIABLES**
DISCRETE aux386 #
{0..3}
DISCRETE aux387 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux387, [0,5,7,12])
**VARIABLES**
DISCRETE aux388 #(-2 + movesFrom_00002)
{0..16}
DISCRETE aux389 #(-2 + movesFrom_00001)
{0..16}
**CONSTRAINTS**
w-inintervalset(aux389, [0,7,9,16])
**VARIABLES**
DISCRETE aux390 #(-2 + movesFrom_00003)
{0..15}
DISCRETE aux391 #(-2 + movesFrom_00004)
{0..14}
DISCRETE aux392 #(-2 + movesFrom_00005)
{0..13}
DISCRETE aux393 #(-2 + movesFrom_00006)
{0..12}
DISCRETE aux394 #(-2 + movesFrom_00007)
{0..11}
DISCRETE aux395 #(-2 + movesFrom_00008)
{0..10}
DISCRETE aux396 #(-2 + movesFrom_00009)
{0..9}
DISCRETE aux397 #(-2 + movesFrom_00010)
{0..8}
DISCRETE aux398 #(-2 + movesFrom_00011)
{0..7}
DISCRETE aux399 #(-2 + movesFrom_00012)
{0..6}
DISCRETE aux400 #(-2 + movesFrom_00013)
{0..5}
DISCRETE aux401 #(-2 + movesFrom_00014)
{0..4}
DISCRETE aux402 #(-2 + movesFrom_00015)
{0..3}
DISCRETE aux403 #(-2 + movesFrom_00016)
{0..2}
BOOL aux404 #(-2 + movesFrom_00017)
BOOL aux405 #(1<movesTo_00001)
BOOL aux406 #(2<movesTo_00001)
BOOL aux407 #(3<movesTo_00001)
BOOL aux408 #(4<movesTo_00001)
BOOL aux409 #(5<movesTo_00001)
BOOL aux410 #(6<movesTo_00001)
BOOL aux411 #(7<movesTo_00001)
BOOL aux412 #(8<movesTo_00001)
BOOL aux413 #(9<movesTo_00001)
BOOL aux414 #(10<movesTo_00001)
BOOL aux415 #(11<movesTo_00001)
BOOL aux416 #(12<movesTo_00001)
BOOL aux417 #(13<movesTo_00001)
BOOL aux418 #(14<movesTo_00001)
BOOL aux419 #(1<movesTo_00002)
BOOL aux420 #(2<movesTo_00002)
BOOL aux421 #(3<movesTo_00002)
BOOL aux422 #(4<movesTo_00002)
BOOL aux423 #(5<movesTo_00002)
BOOL aux424 #(6<movesTo_00002)
BOOL aux425 #(7<movesTo_00002)
BOOL aux426 #(8<movesTo_00002)
BOOL aux427 #(9<movesTo_00002)
BOOL aux428 #(10<movesTo_00002)
BOOL aux429 #(11<movesTo_00002)
BOOL aux430 #(12<movesTo_00002)
BOOL aux431 #(13<movesTo_00002)
BOOL aux432 #(14<movesTo_00002)
BOOL aux433 #(15<movesTo_00002)
BOOL aux434 #(1<movesTo_00003)
BOOL aux435 #(2<movesTo_00003)
BOOL aux436 #(3<movesTo_00003)
BOOL aux437 #(4<movesTo_00003)
BOOL aux438 #(5<movesTo_00003)
BOOL aux439 #(6<movesTo_00003)
BOOL aux440 #(7<movesTo_00003)
BOOL aux441 #(8<movesTo_00003)
BOOL aux442 #(9<movesTo_00003)
BOOL aux443 #(10<movesTo_00003)
BOOL aux444 #(11<movesTo_00003)
BOOL aux445 #(12<movesTo_00003)
BOOL aux446 #(13<movesTo_00003)
BOOL aux447 #(14<movesTo_00003)
BOOL aux448 #(15<movesTo_00003)
BOOL aux449 #(1<movesTo_00004)
BOOL aux450 #(2<movesTo_00004)
BOOL aux451 #(3<movesTo_00004)
BOOL aux452 #(4<movesTo_00004)
BOOL aux453 #(5<movesTo_00004)
BOOL aux454 #(6<movesTo_00004)
BOOL aux455 #(7<movesTo_00004)
BOOL aux456 #(8<movesTo_00004)
BOOL aux457 #(9<movesTo_00004)
BOOL aux458 #(10<movesTo_00004)
BOOL aux459 #(11<movesTo_00004)
BOOL aux460 #(12<movesTo_00004)
BOOL aux461 #(13<movesTo_00004)
BOOL aux462 #(14<movesTo_00004)
BOOL aux463 #(1<movesTo_00005)
BOOL aux464 #(2<movesTo_00005)
BOOL aux465 #(3<movesTo_00005)
BOOL aux466 #(4<movesTo_00005)
BOOL aux467 #(5<movesTo_00005)
BOOL aux468 #(6<movesTo_00005)
BOOL aux469 #(7<movesTo_00005)
BOOL aux470 #(8<movesTo_00005)
BOOL aux471 #(9<movesTo_00005)
BOOL aux472 #(10<movesTo_00005)
BOOL aux473 #(11<movesTo_00005)
BOOL aux474 #(12<movesTo_00005)
BOOL aux475 #(13<movesTo_00005)
BOOL aux476 #(1<movesTo_00006)
BOOL aux477 #(2<movesTo_00006)
BOOL aux478 #(3<movesTo_00006)
BOOL aux479 #(4<movesTo_00006)
BOOL aux480 #(5<movesTo_00006)
BOOL aux481 #(6<movesTo_00006)
BOOL aux482 #(7<movesTo_00006)
BOOL aux483 #(8<movesTo_00006)
BOOL aux484 #(9<movesTo_00006)
BOOL aux485 #(10<movesTo_00006)
BOOL aux486 #(11<movesTo_00006)
BOOL aux487 #(12<movesTo_00006)
BOOL aux488 #(1<movesTo_00007)
BOOL aux489 #(2<movesTo_00007)
BOOL aux490 #(3<movesTo_00007)
BOOL aux491 #(4<movesTo_00007)
BOOL aux492 #(5<movesTo_00007)
BOOL aux493 #(6<movesTo_00007)
BOOL aux494 #(7<movesTo_00007)
BOOL aux495 #(8<movesTo_00007)
BOOL aux496 #(9<movesTo_00007)
BOOL aux497 #(10<movesTo_00007)
BOOL aux498 #(11<movesTo_00007)
BOOL aux499 #(1<movesTo_00008)
BOOL aux500 #(2<movesTo_00008)
BOOL aux501 #(3<movesTo_00008)
BOOL aux502 #(4<movesTo_00008)
BOOL aux503 #(5<movesTo_00008)
BOOL aux504 #(6<movesTo_00008)
BOOL aux505 #(7<movesTo_00008)
BOOL aux506 #(8<movesTo_00008)
BOOL aux507 #(9<movesTo_00008)
BOOL aux508 #(10<movesTo_00008)
BOOL aux509 #(1<movesTo_00009)
BOOL aux510 #(2<movesTo_00009)
BOOL aux511 #(3<movesTo_00009)
BOOL aux512 #(4<movesTo_00009)
BOOL aux513 #(5<movesTo_00009)
BOOL aux514 #(6<movesTo_00009)
BOOL aux515 #(7<movesTo_00009)
BOOL aux516 #(8<movesTo_00009)
BOOL aux517 #(9<movesTo_00009)
BOOL aux518 #(1<movesTo_00010)
BOOL aux519 #(2<movesTo_00010)
BOOL aux520 #(3<movesTo_00010)
BOOL aux521 #(4<movesTo_00010)
BOOL aux522 #(5<movesTo_00010)
BOOL aux523 #(6<movesTo_00010)
BOOL aux524 #(7<movesTo_00010)
BOOL aux525 #(8<movesTo_00010)
BOOL aux526 #(1<movesTo_00011)
BOOL aux527 #(2<movesTo_00011)
BOOL aux528 #(3<movesTo_00011)
BOOL aux529 #(4<movesTo_00011)
BOOL aux530 #(5<movesTo_00011)
BOOL aux531 #(6<movesTo_00011)
BOOL aux532 #(7<movesTo_00011)
BOOL aux533 #(1<movesTo_00012)
BOOL aux534 #(2<movesTo_00012)
BOOL aux535 #(3<movesTo_00012)
BOOL aux536 #(4<movesTo_00012)
BOOL aux537 #(5<movesTo_00012)
BOOL aux538 #(6<movesTo_00012)
BOOL aux539 #(1<movesTo_00013)
BOOL aux540 #(2<movesTo_00013)
BOOL aux541 #(3<movesTo_00013)
BOOL aux542 #(4<movesTo_00013)
BOOL aux543 #(5<movesTo_00013)
BOOL aux544 #(1<movesTo_00014)
BOOL aux545 #(2<movesTo_00014)
BOOL aux546 #(3<movesTo_00014)
BOOL aux547 #(4<movesTo_00014)
BOOL aux548 #(1<movesTo_00015)
BOOL aux549 #(2<movesTo_00015)
BOOL aux550 #(3<movesTo_00015)
BOOL aux551 #(1<movesTo_00016)
BOOL aux552 #(2<movesTo_00016)
BOOL aux553 #(1<movesTo_00017)
**VARIABLES**
ALIAS cards[19]=[18, 21, 12, 7, 28, 37, 27, 41, 43, 3, 49, 13, 10, 9, 31, 20, 40, 34, 0]
**SEARCH**
PRINT[[moves_00001],[moves_00002],[moves_00003],[moves_00004],[moves_00005],[moves_00006],[moves_00007],[moves_00008],[moves_00009],[moves_00010],[moves_00011],[moves_00012],[moves_00013],[moves_00014],[moves_00015],[moves_00016],[movesFrom_00001],[movesFrom_00002],[movesFrom_00003],[movesFrom_00004],[movesFrom_00005],[movesFrom_00006],[movesFrom_00007],[movesFrom_00008],[movesFrom_00009],[movesFrom_00010],[movesFrom_00011],[movesFrom_00012],[movesFrom_00013],[movesFrom_00014],[movesFrom_00015],[movesFrom_00016],[movesFrom_00017],[movesTo_00001],[movesTo_00002],[movesTo_00003],[movesTo_00004],[movesTo_00005],[movesTo_00006],[movesTo_00007],[movesTo_00008],[movesTo_00009],[movesTo_00010],[movesTo_00011],[movesTo_00012],[movesTo_00013],[movesTo_00014],[movesTo_00015],[movesTo_00016],[movesTo_00017],[states_00002_00001],[states_00002_00002],[states_00002_00003],[states_00002_00004],[states_00002_00005],[states_00002_00006],[states_00002_00007],[states_00002_00008],[states_00002_00009],[states_00002_00010],[states_00002_00011],[states_00002_00012],[states_00002_00013],[states_00002_00014],[states_00002_00015],[states_00002_00016],[states_00002_00017],[states_00003_00001],[states_00003_00002],[states_00003_00003],[states_00003_00004],[states_00003_00005],[states_00003_00006],[states_00003_00007],[states_00003_00008],[states_00003_00009],[states_00003_00010],[states_00003_00011],[states_00003_00012],[states_00003_00013],[states_00003_00014],[states_00003_00015],[states_00003_00016],[states_00003_00017],[states_00004_00001],[states_00004_00002],[states_00004_00003],[states_00004_00004],[states_00004_00005],[states_00004_00006],[states_00004_00007],[states_00004_00008],[states_00004_00009],[states_00004_00010],[states_00004_00011],[states_00004_00012],[states_00004_00013],[states_00004_00014],[states_00004_00015],[states_00004_00016],[states_00005_00001],[states_00005_00002],[states_00005_00003],[states_00005_00004],[states_00005_00005],[states_00005_00006],[states_00005_00007],[states_00005_00008],[states_00005_00009],[states_00005_00010],[states_00005_00011],[states_00005_00012],[states_00005_00013],[states_00005_00014],[states_00005_00015],[states_00006_00001],[states_00006_00002],[states_00006_00003],[states_00006_00004],[states_00006_00005],[states_00006_00006],[states_00006_00007],[states_00006_00008],[states_00006_00009],[states_00006_00010],[states_00006_00011],[states_00006_00012],[states_00006_00013],[states_00006_00014],[states_00007_00001],[states_00007_00002],[states_00007_00003],[states_00007_00004],[states_00007_00005],[states_00007_00006],[states_00007_00007],[states_00007_00008],[states_00007_00009],[states_00007_00010],[states_00007_00011],[states_00007_00012],[states_00007_00013],[states_00008_00001],[states_00008_00002],[states_00008_00003],[states_00008_00004],[states_00008_00005],[states_00008_00006],[states_00008_00007],[states_00008_00008],[states_00008_00009],[states_00008_00010],[states_00008_00011],[states_00008_00012],[states_00009_00001],[states_00009_00002],[states_00009_00003],[states_00009_00004],[states_00009_00005],[states_00009_00006],[states_00009_00007],[states_00009_00008],[states_00009_00009],[states_00009_00010],[states_00009_00011],[states_00010_00001],[states_00010_00002],[states_00010_00003],[states_00010_00004],[states_00010_00005],[states_00010_00006],[states_00010_00007],[states_00010_00008],[states_00010_00009],[states_00010_00010],[states_00011_00001],[states_00011_00002],[states_00011_00003],[states_00011_00004],[states_00011_00005],[states_00011_00006],[states_00011_00007],[states_00011_00008],[states_00011_00009],[states_00012_00001],[states_00012_00002],[states_00012_00003],[states_00012_00004],[states_00012_00005],[states_00012_00006],[states_00012_00007],[states_00012_00008],[states_00013_00001],[states_00013_00002],[states_00013_00003],[states_00013_00004],[states_00013_00005],[states_00013_00006],[states_00013_00007],[states_00014_00001],[states_00014_00002],[states_00014_00003],[states_00014_00004],[states_00014_00005],[states_00014_00006],[states_00015_00001],[states_00015_00002],[states_00015_00003],[states_00015_00004],[states_00015_00005],[states_00016_00001],[states_00016_00002],[states_00016_00003],[states_00016_00004],[states_00017_00001],[states_00017_00002],[states_00017_00003],[states_00018_00001],[states_00019_00001]]
VARORDER STATIC [moves_00001, moves_00002, moves_00003, moves_00004, moves_00005, moves_00006, moves_00007, moves_00008, moves_00009, moves_00010, moves_00011, moves_00012, moves_00013, moves_00014, moves_00015, moves_00016, movesFrom_00001, movesFrom_00002, movesFrom_00003, movesFrom_00004, movesFrom_00005, movesFrom_00006, movesFrom_00007, movesFrom_00008, movesFrom_00009, movesFrom_00010, movesFrom_00011, movesFrom_00012, movesFrom_00013, movesFrom_00014, movesFrom_00015, movesFrom_00016, movesFrom_00017, movesTo_00001, movesTo_00002, movesTo_00003, movesTo_00004, movesTo_00005, movesTo_00006, movesTo_00007, movesTo_00008, movesTo_00009, movesTo_00010, movesTo_00011, movesTo_00012, movesTo_00013, movesTo_00014, movesTo_00015, movesTo_00016, movesTo_00017, states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016, states_00002_00017, states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016, states_00003_00017, states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015, states_00004_00016, states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014, states_00005_00015, states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013, states_00006_00014, states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012, states_00007_00013, states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011, states_00008_00012, states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010, states_00009_00011, states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009, states_00010_00010, states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008, states_00011_00009, states_00012_00001, states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007, states_00012_00008, states_00013_00001, states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006, states_00013_00007, states_00014_00001, states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005, states_00014_00006, states_00015_00001, states_00015_00002, states_00015_00003, states_00015_00004, states_00015_00005, states_00016_00001, states_00016_00002, states_00016_00003, states_00016_00004, states_00017_00001, states_00017_00002, states_00017_00003, states_00018_00001, states_00019_00001]
**CONSTRAINTS**
reify(ineq(1, movesTo_00001, -1), aux405)
reify(ineq(2, movesTo_00001, -1), aux406)
reify(ineq(3, movesTo_00001, -1), aux407)
reify(ineq(4, movesTo_00001, -1), aux408)
reify(ineq(5, movesTo_00001, -1), aux409)
reify(ineq(6, movesTo_00001, -1), aux410)
reify(ineq(7, movesTo_00001, -1), aux411)
reify(ineq(8, movesTo_00001, -1), aux412)
reify(ineq(9, movesTo_00001, -1), aux413)
reify(ineq(10, movesTo_00001, -1), aux414)
reify(ineq(11, movesTo_00001, -1), aux415)
reify(ineq(12, movesTo_00001, -1), aux416)
reify(ineq(13, movesTo_00001, -1), aux417)
reify(ineq(14, movesTo_00001, -1), aux418)
reify(ineq(1, movesTo_00002, -1), aux419)
reify(ineq(2, movesTo_00002, -1), aux420)
reify(ineq(3, movesTo_00002, -1), aux421)
reify(ineq(4, movesTo_00002, -1), aux422)
reify(ineq(5, movesTo_00002, -1), aux423)
reify(ineq(6, movesTo_00002, -1), aux424)
reify(ineq(7, movesTo_00002, -1), aux425)
reify(ineq(8, movesTo_00002, -1), aux426)
reify(ineq(9, movesTo_00002, -1), aux427)
reify(ineq(10, movesTo_00002, -1), aux428)
reify(ineq(11, movesTo_00002, -1), aux429)
reify(ineq(12, movesTo_00002, -1), aux430)
reify(ineq(13, movesTo_00002, -1), aux431)
reify(ineq(14, movesTo_00002, -1), aux432)
reify(ineq(15, movesTo_00002, -1), aux433)
reify(ineq(1, movesTo_00003, -1), aux434)
reify(ineq(2, movesTo_00003, -1), aux435)
reify(ineq(3, movesTo_00003, -1), aux436)
reify(ineq(4, movesTo_00003, -1), aux437)
reify(ineq(5, movesTo_00003, -1), aux438)
reify(ineq(6, movesTo_00003, -1), aux439)
reify(ineq(7, movesTo_00003, -1), aux440)
reify(ineq(8, movesTo_00003, -1), aux441)
reify(ineq(9, movesTo_00003, -1), aux442)
reify(ineq(10, movesTo_00003, -1), aux443)
reify(ineq(11, movesTo_00003, -1), aux444)
reify(ineq(12, movesTo_00003, -1), aux445)
reify(ineq(13, movesTo_00003, -1), aux446)
reify(ineq(14, movesTo_00003, -1), aux447)
reify(ineq(15, movesTo_00003, -1), aux448)
reify(ineq(1, movesTo_00004, -1), aux449)
reify(ineq(2, movesTo_00004, -1), aux450)
reify(ineq(3, movesTo_00004, -1), aux451)
reify(ineq(4, movesTo_00004, -1), aux452)
reify(ineq(5, movesTo_00004, -1), aux453)
reify(ineq(6, movesTo_00004, -1), aux454)
reify(ineq(7, movesTo_00004, -1), aux455)
reify(ineq(8, movesTo_00004, -1), aux456)
reify(ineq(9, movesTo_00004, -1), aux457)
reify(ineq(10, movesTo_00004, -1), aux458)
reify(ineq(11, movesTo_00004, -1), aux459)
reify(ineq(12, movesTo_00004, -1), aux460)
reify(ineq(13, movesTo_00004, -1), aux461)
reify(ineq(14, movesTo_00004, -1), aux462)
reify(ineq(1, movesTo_00005, -1), aux463)
reify(ineq(2, movesTo_00005, -1), aux464)
reify(ineq(3, movesTo_00005, -1), aux465)
reify(ineq(4, movesTo_00005, -1), aux466)
reify(ineq(5, movesTo_00005, -1), aux467)
reify(ineq(6, movesTo_00005, -1), aux468)
reify(ineq(7, movesTo_00005, -1), aux469)
reify(ineq(8, movesTo_00005, -1), aux470)
reify(ineq(9, movesTo_00005, -1), aux471)
reify(ineq(10, movesTo_00005, -1), aux472)
reify(ineq(11, movesTo_00005, -1), aux473)
reify(ineq(12, movesTo_00005, -1), aux474)
reify(ineq(13, movesTo_00005, -1), aux475)
reify(ineq(1, movesTo_00006, -1), aux476)
reify(ineq(2, movesTo_00006, -1), aux477)
reify(ineq(3, movesTo_00006, -1), aux478)
reify(ineq(4, movesTo_00006, -1), aux479)
reify(ineq(5, movesTo_00006, -1), aux480)
reify(ineq(6, movesTo_00006, -1), aux481)
reify(ineq(7, movesTo_00006, -1), aux482)
reify(ineq(8, movesTo_00006, -1), aux483)
reify(ineq(9, movesTo_00006, -1), aux484)
reify(ineq(10, movesTo_00006, -1), aux485)
reify(ineq(11, movesTo_00006, -1), aux486)
reify(ineq(12, movesTo_00006, -1), aux487)
reify(ineq(1, movesTo_00007, -1), aux488)
reify(ineq(2, movesTo_00007, -1), aux489)
reify(ineq(3, movesTo_00007, -1), aux490)
reify(ineq(4, movesTo_00007, -1), aux491)
reify(ineq(5, movesTo_00007, -1), aux492)
reify(ineq(6, movesTo_00007, -1), aux493)
reify(ineq(7, movesTo_00007, -1), aux494)
reify(ineq(8, movesTo_00007, -1), aux495)
reify(ineq(9, movesTo_00007, -1), aux496)
reify(ineq(10, movesTo_00007, -1), aux497)
reify(ineq(11, movesTo_00007, -1), aux498)
reify(ineq(1, movesTo_00008, -1), aux499)
reify(ineq(2, movesTo_00008, -1), aux500)
reify(ineq(3, movesTo_00008, -1), aux501)
reify(ineq(4, movesTo_00008, -1), aux502)
reify(ineq(5, movesTo_00008, -1), aux503)
reify(ineq(6, movesTo_00008, -1), aux504)
reify(ineq(7, movesTo_00008, -1), aux505)
reify(ineq(8, movesTo_00008, -1), aux506)
reify(ineq(9, movesTo_00008, -1), aux507)
reify(ineq(10, movesTo_00008, -1), aux508)
reify(ineq(1, movesTo_00009, -1), aux509)
reify(ineq(2, movesTo_00009, -1), aux510)
reify(ineq(3, movesTo_00009, -1), aux511)
reify(ineq(4, movesTo_00009, -1), aux512)
reify(ineq(5, movesTo_00009, -1), aux513)
reify(ineq(6, movesTo_00009, -1), aux514)
reify(ineq(7, movesTo_00009, -1), aux515)
reify(ineq(8, movesTo_00009, -1), aux516)
reify(ineq(9, movesTo_00009, -1), aux517)
reify(ineq(1, movesTo_00010, -1), aux518)
reify(ineq(2, movesTo_00010, -1), aux519)
reify(ineq(3, movesTo_00010, -1), aux520)
reify(ineq(4, movesTo_00010, -1), aux521)
reify(ineq(5, movesTo_00010, -1), aux522)
reify(ineq(6, movesTo_00010, -1), aux523)
reify(ineq(7, movesTo_00010, -1), aux524)
reify(ineq(8, movesTo_00010, -1), aux525)
reify(ineq(1, movesTo_00011, -1), aux526)
reify(ineq(2, movesTo_00011, -1), aux527)
reify(ineq(3, movesTo_00011, -1), aux528)
reify(ineq(4, movesTo_00011, -1), aux529)
reify(ineq(5, movesTo_00011, -1), aux530)
reify(ineq(6, movesTo_00011, -1), aux531)
reify(ineq(7, movesTo_00011, -1), aux532)
reify(ineq(1, movesTo_00012, -1), aux533)
reify(ineq(2, movesTo_00012, -1), aux534)
reify(ineq(3, movesTo_00012, -1), aux535)
reify(ineq(4, movesTo_00012, -1), aux536)
reify(ineq(5, movesTo_00012, -1), aux537)
reify(ineq(6, movesTo_00012, -1), aux538)
reify(ineq(1, movesTo_00013, -1), aux539)
reify(ineq(2, movesTo_00013, -1), aux540)
reify(ineq(3, movesTo_00013, -1), aux541)
reify(ineq(4, movesTo_00013, -1), aux542)
reify(ineq(5, movesTo_00013, -1), aux543)
reify(ineq(1, movesTo_00014, -1), aux544)
reify(ineq(2, movesTo_00014, -1), aux545)
reify(ineq(3, movesTo_00014, -1), aux546)
reify(ineq(4, movesTo_00014, -1), aux547)
reify(ineq(1, movesTo_00015, -1), aux548)
reify(ineq(2, movesTo_00015, -1), aux549)
reify(ineq(3, movesTo_00015, -1), aux550)
reify(ineq(1, movesTo_00016, -1), aux551)
reify(ineq(2, movesTo_00016, -1), aux552)
reify(ineq(1, movesTo_00017, -1), aux553)
div(aux17, 13, aux352)
modulo(aux17,13,aux353)
div(aux16, 13, aux354)
modulo(aux16,13,aux355)
div(aux20, 13, aux356)
modulo(aux20,13,aux357)
div(aux21, 13, aux358)
modulo(aux21,13,aux359)
modulo(aux25,13,aux360)
div(aux24, 13, aux361)
div(aux27, 13, aux362)
modulo(aux27,13,aux363)
div(aux29, 13, aux364)
modulo(aux29,13,aux365)
modulo(aux30,13,aux366)
div(aux30, 13, aux367)
div(aux33, 13, aux368)
modulo(aux32,13,aux369)
modulo(aux34,13,aux370)
div(aux35, 13, aux371)
div(aux37, 13, aux372)
modulo(aux37,13,aux373)
div(aux39, 13, aux374)
modulo(aux39,13,aux375)
div(aux40, 13, aux376)
modulo(aux40,13,aux377)
div(aux43, 13, aux378)
modulo(aux42,13,aux379)
div(aux45, 13, aux380)
modulo(aux45,13,aux381)
div(aux46, 13, aux382)
modulo(aux47,13,aux383)
div(aux48, 13, aux384)
modulo(aux48,13,aux385)
div(states_00018_00001, 13, aux386)
modulo(states_00019_00001,13,aux387)
watchelement([states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016, states_00002_00017, 0], aux388, aux16)
watchelement([21, 12, 7, 28, 37, 27, 41, 43, 3, 49, 13, 10, 9, 31, 20, 40, 34], aux389, aux17)
watchelement([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016], aux100, aux18)
watchelement([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016], aux101, aux19)
watchelement([states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016, states_00003_00017], aux390, aux20)
watchelement([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015], aux96, aux21)
watchelement([states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015, states_00004_00016], aux391, aux22)
watchelement([18, 21, 12, 7, 28, 37, 27, 41, 43, 3, 49, 13, 10, 9, 31], aux99, aux23)
watchelement([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014], aux95, aux24)
watchelement([states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014, states_00005_00015], aux392, aux25)
watchelement([states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013, states_00006_00014], aux393, aux26)
watchelement([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013], aux98, aux27)
watchelement([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012], aux97, aux28)
watchelement([states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012, states_00007_00013], aux394, aux29)
watchelement([states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011, states_00008_00012], aux395, aux30)
watchelement([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011], aux94, aux31)
watchelement([states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010, states_00009_00011], aux396, aux32)
watchelement([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010], aux93, aux33)
watchelement([states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009, states_00010_00010], aux397, aux34)
watchelement([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009], aux109, aux35)
watchelement([states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008, states_00011_00009], aux398, aux36)
watchelement([states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008], aux108, aux37)
watchelement([states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007, states_00012_00008], aux399, aux38)
watchelement([states_00012_00001, states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007], aux105, aux39)
watchelement([states_00013_00001, states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006], aux104, aux40)
watchelement([states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006, states_00013_00007], aux400, aux41)
watchelement([states_00014_00001, states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005], aux107, aux42)
watchelement([states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005, states_00014_00006], aux401, aux43)
watchelement([states_00015_00001, states_00015_00002, states_00015_00003, states_00015_00004], aux106, aux44)
watchelement([states_00015_00002, states_00015_00003, states_00015_00004, states_00015_00005], aux402, aux45)
watchelement([states_00016_00002, states_00016_00003, states_00016_00004], aux403, aux46)
watchelement([states_00016_00001, states_00016_00002, states_00016_00003], aux103, aux47)
watchelement([states_00017_00002, states_00017_00003], aux404, aux48)
watchelement([states_00017_00001, states_00017_00002], aux102, aux49)
reify(watched-and({sumleq([1,movesTo_00001],movesFrom_00001),sumgeq([1,movesTo_00001],movesFrom_00001)}), aux50)
reify(watched-and({sumleq([1,movesTo_00002],movesFrom_00002),sumgeq([1,movesTo_00002],movesFrom_00002)}), aux51)
reify(watched-and({sumleq([1,movesTo_00003],movesFrom_00003),sumgeq([1,movesTo_00003],movesFrom_00003)}), aux52)
reify(watched-and({sumleq([3,movesTo_00001],movesFrom_00001),sumgeq([3,movesTo_00001],movesFrom_00001)}), aux53)
reify(watched-and({sumleq([3,movesTo_00002],movesFrom_00002),sumgeq([3,movesTo_00002],movesFrom_00002)}), aux54)
reify(watched-and({sumleq([1,movesTo_00004],movesFrom_00004),sumgeq([1,movesTo_00004],movesFrom_00004)}), aux55)
reify(watched-and({sumleq([3,movesTo_00003],movesFrom_00003),sumgeq([3,movesTo_00003],movesFrom_00003)}), aux56)
reify(watched-and({sumleq([1,movesTo_00005],movesFrom_00005),sumgeq([1,movesTo_00005],movesFrom_00005)}), aux57)
reify(watched-and({sumleq([1,movesTo_00006],movesFrom_00006),sumgeq([1,movesTo_00006],movesFrom_00006)}), aux58)
reify(watched-and({sumleq([3,movesTo_00004],movesFrom_00004),sumgeq([3,movesTo_00004],movesFrom_00004)}), aux59)
reify(watched-and({sumleq([1,movesTo_00007],movesFrom_00007),sumgeq([1,movesTo_00007],movesFrom_00007)}), aux60)
reify(watched-and({sumleq([3,movesTo_00005],movesFrom_00005),sumgeq([3,movesTo_00005],movesFrom_00005)}), aux61)
reify(watched-and({sumleq([3,movesTo_00006],movesFrom_00006),sumgeq([3,movesTo_00006],movesFrom_00006)}), aux62)
reify(watched-and({sumleq([1,movesTo_00008],movesFrom_00008),sumgeq([1,movesTo_00008],movesFrom_00008)}), aux63)
reify(watched-and({sumleq([3,movesTo_00007],movesFrom_00007),sumgeq([3,movesTo_00007],movesFrom_00007)}), aux64)
reify(watched-and({sumleq([1,movesTo_00009],movesFrom_00009),sumgeq([1,movesTo_00009],movesFrom_00009)}), aux65)
reify(watched-and({sumleq([3,movesTo_00008],movesFrom_00008),sumgeq([3,movesTo_00008],movesFrom_00008)}), aux66)
reify(watched-and({sumleq([3,movesTo_00009],movesFrom_00009),sumgeq([3,movesTo_00009],movesFrom_00009)}), aux67)
reify(watched-and({sumleq([1,movesTo_00011],movesFrom_00011),sumgeq([1,movesTo_00011],movesFrom_00011)}), aux68)
reify(watched-and({sumleq([1,movesTo_00010],movesFrom_00010),sumgeq([1,movesTo_00010],movesFrom_00010)}), aux69)
reify(watched-and({sumleq([1,movesTo_00013],movesFrom_00013),sumgeq([1,movesTo_00013],movesFrom_00013)}), aux70)
reify(watched-and({sumleq([3,movesTo_00011],movesFrom_00011),sumgeq([3,movesTo_00011],movesFrom_00011)}), aux71)
reify(watched-and({sumleq([3,movesTo_00010],movesFrom_00010),sumgeq([3,movesTo_00010],movesFrom_00010)}), aux72)
reify(watched-and({sumleq([1,movesTo_00012],movesFrom_00012),sumgeq([1,movesTo_00012],movesFrom_00012)}), aux73)
reify(watched-and({sumleq([3,movesTo_00013],movesFrom_00013),sumgeq([3,movesTo_00013],movesFrom_00013)}), aux74)
reify(watched-and({sumleq([1,movesTo_00015],movesFrom_00015),sumgeq([1,movesTo_00015],movesFrom_00015)}), aux75)
reify(watched-and({sumleq([1,movesTo_00014],movesFrom_00014),sumgeq([1,movesTo_00014],movesFrom_00014)}), aux76)
reify(watched-and({sumleq([3,movesTo_00012],movesFrom_00012),sumgeq([3,movesTo_00012],movesFrom_00012)}), aux77)
reify(watched-and({sumleq([3,movesTo_00015],movesFrom_00015),sumgeq([3,movesTo_00015],movesFrom_00015)}), aux78)
reify(watched-and({sumleq([3,movesTo_00014],movesFrom_00014),sumgeq([3,movesTo_00014],movesFrom_00014)}), aux79)
reify(watched-and({sumleq([1,movesTo_00016],movesFrom_00016),sumgeq([1,movesTo_00016],movesFrom_00016)}), aux80)
reify(sumleq([3,movesTo_00016],movesFrom_00016), aux81)
reify(gaceq(states_00012_00002,states_00013_00002), aux82)
reify(gaceq(states_00012_00003,states_00013_00002), aux83)
reify(gaceq(states_00012_00003,states_00013_00003), aux84)
reify(gaceq(states_00012_00006,states_00013_00006), aux85)
reify(gaceq(states_00012_00006,states_00013_00005), aux86)
reify(gaceq(states_00012_00007,states_00013_00006), aux87)
reify(gaceq(states_00012_00004,states_00013_00004), aux88)
reify(gaceq(states_00012_00004,states_00013_00003), aux89)
reify(gaceq(states_00012_00005,states_00013_00004), aux90)
reify(gaceq(states_00012_00005,states_00013_00005), aux91)
reify(gaceq(states_00012_00008,states_00013_00007), aux92)
reify(gaceq(states_00010_00008,states_00011_00008), aux110)
reify(gaceq(states_00010_00008,states_00011_00007), aux111)
reify(gaceq(states_00010_00009,states_00011_00008), aux112)
reify(gaceq(states_00010_00006,states_00011_00006), aux113)
reify(gaceq(states_00010_00006,states_00011_00005), aux114)
reify(gaceq(states_00010_00007,states_00011_00006), aux115)
reify(gaceq(states_00010_00007,states_00011_00007), aux116)
reify(gaceq(states_00010_00004,states_00011_00004), aux117)
reify(gaceq(states_00010_00004,states_00011_00003), aux118)
reify(gaceq(states_00010_00005,states_00011_00004), aux119)
reify(gaceq(states_00010_00005,states_00011_00005), aux120)
reify(gaceq(states_00010_00002,states_00011_00002), aux121)
reify(gaceq(states_00010_00003,states_00011_00002), aux122)
reify(gaceq(states_00010_00003,states_00011_00003), aux123)
reify(gaceq(states_00010_00010,states_00011_00009), aux124)
reify(gaceq(states_00012_00004,states_00011_00004), aux125)
reify(gaceq(states_00012_00004,states_00011_00005), aux126)
reify(gaceq(states_00012_00005,states_00011_00005), aux127)
reify(gaceq(states_00012_00005,states_00011_00006), aux128)
reify(gaceq(states_00012_00006,states_00011_00006), aux129)
reify(gaceq(states_00012_00006,states_00011_00007), aux130)
reify(gaceq(states_00012_00007,states_00011_00007), aux131)
reify(gaceq(states_00012_00007,states_00011_00008), aux132)
reify(gaceq(states_00012_00002,states_00011_00002), aux133)
reify(gaceq(states_00012_00002,states_00011_00003), aux134)
reify(gaceq(states_00012_00003,states_00011_00003), aux135)
reify(gaceq(states_00012_00003,states_00011_00004), aux136)
reify(gaceq(states_00012_00008,states_00011_00009), aux137)
reify(gaceq(states_00017_00002,states_00016_00002), aux138)
reify(gaceq(states_00017_00002,states_00016_00003), aux139)
reify(gaceq(states_00017_00003,states_00016_00004), aux140)
reify(gaceq(states_00014_00006,states_00015_00005), aux141)
reify(gaceq(states_00014_00004,states_00015_00004), aux142)
reify(gaceq(states_00014_00004,states_00015_00003), aux143)
reify(gaceq(states_00014_00005,states_00015_00004), aux144)
reify(gaceq(states_00014_00002,states_00015_00002), aux145)
reify(gaceq(states_00014_00003,states_00015_00002), aux146)
reify(gaceq(states_00014_00003,states_00015_00003), aux147)
reify(gaceq(states_00005_00013,states_00006_00013), aux148)
reify(gaceq(states_00005_00013,states_00006_00012), aux149)
reify(gaceq(states_00005_00014,states_00006_00013), aux150)
reify(gaceq(states_00005_00011,states_00006_00011), aux151)
reify(gaceq(states_00005_00011,states_00006_00010), aux152)
reify(gaceq(states_00005_00012,states_00006_00011), aux153)
reify(gaceq(states_00005_00012,states_00006_00012), aux154)
reify(gaceq(states_00005_00015,states_00006_00014), aux155)
reify(gaceq(states_00005_00010,states_00006_00009), aux156)
reify(gaceq(states_00005_00010,states_00006_00010), aux157)
reify(gaceq(states_00005_00003,states_00006_00002), aux158)
reify(gaceq(states_00005_00003,states_00006_00003), aux159)
reify(gaceq(states_00005_00002,states_00006_00002), aux160)
reify(gaceq(states_00005_00005,states_00006_00004), aux161)
reify(gaceq(states_00005_00005,states_00006_00005), aux162)
reify(gaceq(states_00005_00004,states_00006_00004), aux163)
reify(gaceq(states_00005_00004,states_00006_00003), aux164)
reify(gaceq(states_00005_00007,states_00006_00006), aux165)
reify(gaceq(states_00005_00007,states_00006_00007), aux166)
reify(gaceq(states_00005_00006,states_00006_00006), aux167)
reify(gaceq(states_00005_00006,states_00006_00005), aux168)
reify(gaceq(states_00005_00009,states_00006_00008), aux169)
reify(gaceq(states_00005_00009,states_00006_00009), aux170)
reify(gaceq(states_00005_00008,states_00006_00008), aux171)
reify(gaceq(states_00005_00008,states_00006_00007), aux172)
reify(gaceq(states_00009_00002,states_00010_00002), aux173)
reify(gaceq(states_00009_00003,states_00010_00002), aux174)
reify(gaceq(states_00009_00003,states_00010_00003), aux175)
reify(gaceq(states_00009_00004,states_00010_00004), aux176)
reify(gaceq(states_00009_00004,states_00010_00003), aux177)
reify(gaceq(states_00009_00005,states_00010_00005), aux178)
reify(gaceq(states_00009_00005,states_00010_00004), aux179)
reify(gaceq(states_00009_00006,states_00010_00006), aux180)
reify(gaceq(states_00009_00006,states_00010_00005), aux181)
reify(gaceq(states_00009_00007,states_00010_00006), aux182)
reify(gaceq(states_00009_00007,states_00010_00007), aux183)
reify(gaceq(states_00009_00008,states_00010_00008), aux184)
reify(gaceq(states_00009_00008,states_00010_00007), aux185)
reify(gaceq(states_00009_00009,states_00010_00009), aux186)
reify(gaceq(states_00009_00009,states_00010_00008), aux187)
reify(gaceq(states_00009_00010,states_00010_00009), aux188)
reify(gaceq(states_00009_00011,states_00010_00010), aux189)
reify(gaceq(states_00013_00007,states_00014_00006), aux190)
reify(gaceq(states_00013_00003,states_00014_00003), aux191)
reify(gaceq(states_00013_00003,states_00014_00002), aux192)
reify(gaceq(states_00013_00004,states_00014_00003), aux193)
reify(gaceq(states_00013_00004,states_00014_00004), aux194)
reify(gaceq(states_00013_00005,states_00014_00005), aux195)
reify(gaceq(states_00013_00005,states_00014_00004), aux196)
reify(gaceq(states_00013_00006,states_00014_00005), aux197)
reify(gaceq(states_00013_00002,states_00014_00002), aux198)
reify(gaceq(states_00009_00010,states_00008_00010), aux199)
reify(gaceq(states_00009_00010,states_00008_00011), aux200)
reify(gaceq(states_00009_00011,states_00008_00012), aux201)
reify(gaceq(states_00009_00008,states_00008_00009), aux202)
reify(gaceq(states_00009_00008,states_00008_00008), aux203)
reify(gaceq(states_00009_00009,states_00008_00009), aux204)
reify(gaceq(states_00009_00009,states_00008_00010), aux205)
reify(gaceq(states_00009_00003,states_00008_00004), aux206)
reify(gaceq(states_00009_00003,states_00008_00003), aux207)
reify(gaceq(states_00009_00002,states_00008_00003), aux208)
reify(gaceq(states_00009_00002,states_00008_00002), aux209)
reify(gaceq(states_00009_00007,states_00008_00008), aux210)
reify(gaceq(states_00009_00007,states_00008_00007), aux211)
reify(gaceq(states_00009_00006,states_00008_00007), aux212)
reify(gaceq(states_00009_00006,states_00008_00006), aux213)
reify(gaceq(states_00009_00005,states_00008_00006), aux214)
reify(gaceq(states_00009_00005,states_00008_00005), aux215)
reify(gaceq(states_00009_00004,states_00008_00005), aux216)
reify(gaceq(states_00009_00004,states_00008_00004), aux217)
reify(gaceq(states_00004_00010,states_00003_00010), aux218)
reify(gaceq(states_00004_00010,states_00003_00011), aux219)
reify(gaceq(states_00004_00011,states_00003_00011), aux220)
reify(gaceq(states_00004_00011,states_00003_00012), aux221)
reify(gaceq(states_00004_00014,states_00003_00014), aux222)
reify(gaceq(states_00004_00014,states_00003_00015), aux223)
reify(gaceq(states_00004_00015,states_00003_00015), aux224)
reify(gaceq(states_00004_00015,states_00003_00016), aux225)
reify(gaceq(states_00004_00012,states_00003_00012), aux226)
reify(gaceq(states_00004_00012,states_00003_00013), aux227)
reify(gaceq(states_00004_00013,states_00003_00013), aux228)
reify(gaceq(states_00004_00013,states_00003_00014), aux229)
reify(gaceq(states_00004_00016,states_00003_00017), aux230)
reify(gaceq(states_00004_00002,states_00003_00002), aux231)
reify(gaceq(states_00004_00002,states_00003_00003), aux232)
reify(gaceq(states_00004_00004,states_00003_00004), aux233)
reify(gaceq(states_00004_00004,states_00003_00005), aux234)
reify(gaceq(states_00004_00003,states_00003_00003), aux235)
reify(gaceq(states_00004_00003,states_00003_00004), aux236)
reify(gaceq(states_00004_00006,states_00003_00007), aux237)
reify(gaceq(states_00004_00006,states_00003_00006), aux238)
reify(gaceq(states_00004_00005,states_00003_00005), aux239)
reify(gaceq(states_00004_00005,states_00003_00006), aux240)
reify(gaceq(states_00004_00008,states_00003_00009), aux241)
reify(gaceq(states_00004_00008,states_00003_00008), aux242)
reify(gaceq(states_00004_00007,states_00003_00008), aux243)
reify(gaceq(states_00004_00007,states_00003_00007), aux244)
reify(gaceq(states_00004_00009,states_00003_00010), aux245)
reify(gaceq(states_00004_00009,states_00003_00009), aux246)
reify(gaceq(states_00004_00008,states_00005_00007), aux247)
reify(gaceq(states_00004_00008,states_00005_00008), aux248)
reify(gaceq(states_00004_00007,states_00005_00007), aux249)
reify(gaceq(states_00004_00007,states_00005_00006), aux250)
reify(gaceq(states_00004_00006,states_00005_00005), aux251)
reify(gaceq(states_00004_00006,states_00005_00006), aux252)
reify(gaceq(states_00004_00005,states_00005_00005), aux253)
reify(gaceq(states_00004_00005,states_00005_00004), aux254)
reify(gaceq(states_00004_00004,states_00005_00003), aux255)
reify(gaceq(states_00004_00004,states_00005_00004), aux256)
reify(gaceq(states_00004_00003,states_00005_00003), aux257)
reify(gaceq(states_00004_00003,states_00005_00002), aux258)
reify(gaceq(states_00004_00002,states_00005_00002), aux259)
reify(gaceq(states_00004_00009,states_00005_00009), aux260)
reify(gaceq(states_00004_00009,states_00005_00008), aux261)
reify(gaceq(states_00004_00010,states_00005_00009), aux262)
reify(gaceq(states_00004_00010,states_00005_00010), aux263)
reify(gaceq(states_00004_00011,states_00005_00010), aux264)
reify(gaceq(states_00004_00011,states_00005_00011), aux265)
reify(gaceq(states_00004_00012,states_00005_00012), aux266)
reify(gaceq(states_00004_00012,states_00005_00011), aux267)
reify(gaceq(states_00004_00013,states_00005_00012), aux268)
reify(gaceq(states_00004_00013,states_00005_00013), aux269)
reify(gaceq(states_00004_00014,states_00005_00014), aux270)
reify(gaceq(states_00004_00014,states_00005_00013), aux271)
reify(gaceq(states_00004_00015,states_00005_00014), aux272)
reify(gaceq(states_00004_00016,states_00005_00015), aux273)
reify(gaceq(states_00002_00014,states_00003_00014), aux274)
reify(gaceq(states_00002_00014,states_00003_00013), aux275)
reify(gaceq(states_00002_00015,states_00003_00014), aux276)
reify(gaceq(states_00002_00015,states_00003_00015), aux277)
reify(gaceq(states_00002_00016,states_00003_00015), aux278)
reify(gaceq(states_00002_00017,states_00003_00016), aux279)
reify(gaceq(states_00002_00010,states_00003_00010), aux280)
reify(gaceq(states_00002_00011,states_00003_00010), aux281)
reify(gaceq(states_00002_00011,states_00003_00011), aux282)
reify(gaceq(states_00002_00012,states_00003_00012), aux283)
reify(gaceq(states_00002_00012,states_00003_00011), aux284)
reify(gaceq(states_00002_00013,states_00003_00012), aux285)
reify(gaceq(states_00002_00013,states_00003_00013), aux286)
reify(gaceq(states_00002_00010,states_00003_00009), aux287)
reify(gaceq(states_00002_00006,states_00003_00005), aux288)
reify(gaceq(states_00002_00006,states_00003_00006), aux289)
reify(gaceq(states_00002_00005,states_00003_00005), aux290)
reify(gaceq(states_00002_00005,states_00003_00004), aux291)
reify(gaceq(states_00002_00004,states_00003_00003), aux292)
reify(gaceq(states_00002_00004,states_00003_00004), aux293)
reify(gaceq(states_00002_00003,states_00003_00003), aux294)
reify(gaceq(states_00002_00003,states_00003_00002), aux295)
reify(gaceq(states_00002_00009,states_00003_00009), aux296)
reify(gaceq(states_00002_00009,states_00003_00008), aux297)
reify(gaceq(states_00002_00008,states_00003_00007), aux298)
reify(gaceq(states_00002_00008,states_00003_00008), aux299)
reify(gaceq(states_00002_00007,states_00003_00007), aux300)
reify(gaceq(states_00002_00007,states_00003_00006), aux301)
reify(gaceq(states_00002_00002,states_00003_00002), aux302)
reify(gaceq(states_00006_00002,states_00007_00002), aux303)
reify(gaceq(states_00006_00006,states_00007_00005), aux304)
reify(gaceq(states_00006_00006,states_00007_00006), aux305)
reify(gaceq(states_00006_00005,states_00007_00005), aux306)
reify(gaceq(states_00006_00005,states_00007_00004), aux307)
reify(gaceq(states_00006_00004,states_00007_00003), aux308)
reify(gaceq(states_00006_00004,states_00007_00004), aux309)
reify(gaceq(states_00006_00003,states_00007_00003), aux310)
reify(gaceq(states_00006_00003,states_00007_00002), aux311)
reify(gaceq(states_00006_00009,states_00007_00009), aux312)
reify(gaceq(states_00006_00009,states_00007_00008), aux313)
reify(gaceq(states_00006_00008,states_00007_00007), aux314)
reify(gaceq(states_00006_00008,states_00007_00008), aux315)
reify(gaceq(states_00006_00007,states_00007_00007), aux316)
reify(gaceq(states_00006_00007,states_00007_00006), aux317)
reify(gaceq(states_00006_00010,states_00007_00009), aux318)
reify(gaceq(states_00006_00014,states_00007_00013), aux319)
reify(gaceq(states_00006_00010,states_00007_00010), aux320)
reify(gaceq(states_00006_00011,states_00007_00010), aux321)
reify(gaceq(states_00006_00011,states_00007_00011), aux322)
reify(gaceq(states_00006_00012,states_00007_00012), aux323)
reify(gaceq(states_00006_00012,states_00007_00011), aux324)
reify(gaceq(states_00006_00013,states_00007_00012), aux325)
reify(gaceq(states_00007_00007,states_00008_00006), aux326)
reify(gaceq(states_00007_00007,states_00008_00007), aux327)
reify(gaceq(states_00007_00006,states_00008_00006), aux328)
reify(gaceq(states_00007_00006,states_00008_00005), aux329)
reify(gaceq(states_00007_00009,states_00008_00008), aux330)
reify(gaceq(states_00007_00009,states_00008_00009), aux331)
reify(gaceq(states_00007_00008,states_00008_00008), aux332)
reify(gaceq(states_00007_00008,states_00008_00007), aux333)
reify(gaceq(states_00007_00003,states_00008_00002), aux334)
reify(gaceq(states_00007_00003,states_00008_00003), aux335)
reify(gaceq(states_00007_00002,states_00008_00002), aux336)
reify(gaceq(states_00007_00005,states_00008_00004), aux337)
reify(gaceq(states_00007_00005,states_00008_00005), aux338)
reify(gaceq(states_00007_00004,states_00008_00004), aux339)
reify(gaceq(states_00007_00004,states_00008_00003), aux340)
reify(gaceq(states_00007_00013,states_00008_00012), aux341)
reify(gaceq(states_00007_00011,states_00008_00011), aux342)
reify(gaceq(states_00007_00011,states_00008_00010), aux343)
reify(gaceq(states_00007_00012,states_00008_00011), aux344)
reify(gaceq(states_00007_00010,states_00008_00009), aux345)
reify(gaceq(states_00007_00010,states_00008_00010), aux346)
reify(gaceq(states_00015_00002,states_00016_00002), aux347)
reify(gaceq(states_00015_00003,states_00016_00003), aux348)
reify(gaceq(states_00015_00003,states_00016_00002), aux349)
reify(gaceq(states_00015_00004,states_00016_00003), aux350)
reify(gaceq(states_00015_00005,states_00016_00004), aux351)
watched-or({diseq(1,moves_00001),w-literal(states_00002_00002,12),ineq(2, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00003,7),ineq(3, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00004,28),ineq(4, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00005,37),ineq(5, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00006,27),ineq(6, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00007,41),ineq(7, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00008,43),ineq(8, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00009,3),ineq(9, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00010,49),ineq(10, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00011,13),ineq(11, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00012,10),ineq(12, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00013,9),ineq(13, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00014,31),ineq(14, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00015,20),ineq(15, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00016,40)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00017,34)})
watched-or({diseq(1,moves_00002),w-literal(aux295,1),ineq(2, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux292,1),ineq(3, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux291,1),ineq(4, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux288,1),ineq(5, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux301,1),ineq(6, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux298,1),ineq(7, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux297,1),ineq(8, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux287,1),ineq(9, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux281,1),ineq(10, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux284,1),ineq(11, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux285,1),ineq(12, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux275,1),ineq(13, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux276,1),ineq(14, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux278,1),ineq(15, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux279,1),ineq(16, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(states_00003_00017,0)})
watched-or({diseq(1,moves_00003),w-literal(aux232,1),ineq(2, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux236,1),ineq(3, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux234,1),ineq(4, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux240,1),ineq(5, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux237,1),ineq(6, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux243,1),ineq(7, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux241,1),ineq(8, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux245,1),ineq(9, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux219,1),ineq(10, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux221,1),ineq(11, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux227,1),ineq(12, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux229,1),ineq(13, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux223,1),ineq(14, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux225,1),ineq(15, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux230,1),ineq(16, movesTo_00003, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux258,1),ineq(2, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux255,1),ineq(3, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux254,1),ineq(4, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux251,1),ineq(5, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux250,1),ineq(6, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux247,1),ineq(7, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux261,1),ineq(8, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux262,1),ineq(9, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux264,1),ineq(10, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux267,1),ineq(11, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux268,1),ineq(12, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux271,1),ineq(13, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux272,1),ineq(14, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux273,1),ineq(15, movesTo_00004, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux158,1),ineq(2, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux164,1),ineq(3, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux161,1),ineq(4, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux168,1),ineq(5, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux165,1),ineq(6, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux172,1),ineq(7, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux169,1),ineq(8, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux156,1),ineq(9, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux152,1),ineq(10, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux153,1),ineq(11, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux149,1),ineq(12, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux150,1),ineq(13, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux155,1),ineq(14, movesTo_00005, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux311,1),ineq(2, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux308,1),ineq(3, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux307,1),ineq(4, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux304,1),ineq(5, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux317,1),ineq(6, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux314,1),ineq(7, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux313,1),ineq(8, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux318,1),ineq(9, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux321,1),ineq(10, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux324,1),ineq(11, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux325,1),ineq(12, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux319,1),ineq(13, movesTo_00006, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux334,1),ineq(2, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux340,1),ineq(3, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux337,1),ineq(4, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux329,1),ineq(5, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux326,1),ineq(6, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux333,1),ineq(7, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux330,1),ineq(8, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux345,1),ineq(9, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux343,1),ineq(10, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux344,1),ineq(11, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux341,1),ineq(12, movesTo_00007, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux208,1),ineq(2, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux206,1),ineq(3, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux216,1),ineq(4, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux214,1),ineq(5, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux212,1),ineq(6, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux210,1),ineq(7, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux202,1),ineq(8, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux205,1),ineq(9, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux200,1),ineq(10, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux201,1),ineq(11, movesTo_00008, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux174,1),ineq(2, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux177,1),ineq(3, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux179,1),ineq(4, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux181,1),ineq(5, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux182,1),ineq(6, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux185,1),ineq(7, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux187,1),ineq(8, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux188,1),ineq(9, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux189,1),ineq(10, movesTo_00009, 0)})
watched-or({diseq(1,moves_00010),ineq(2, movesTo_00010, 0),w-literal(aux122,1)})
watched-or({diseq(1,moves_00010),ineq(3, movesTo_00010, 0),w-literal(aux118,1)})
watched-or({diseq(1,moves_00010),ineq(4, movesTo_00010, 0),w-literal(aux119,1)})
watched-or({diseq(1,moves_00010),ineq(5, movesTo_00010, 0),w-literal(aux114,1)})
watched-or({diseq(1,moves_00010),ineq(6, movesTo_00010, 0),w-literal(aux115,1)})
watched-or({diseq(1,moves_00010),ineq(7, movesTo_00010, 0),w-literal(aux111,1)})
watched-or({diseq(1,moves_00010),ineq(8, movesTo_00010, 0),w-literal(aux112,1)})
watched-or({diseq(1,moves_00010),ineq(9, movesTo_00010, 0),w-literal(aux124,1)})
watched-or({diseq(1,moves_00011),w-literal(aux134,1),ineq(2, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux136,1),ineq(3, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux126,1),ineq(4, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux128,1),ineq(5, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux130,1),ineq(6, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux132,1),ineq(7, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux137,1),ineq(8, movesTo_00011, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux83,1),ineq(2, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux89,1),ineq(3, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux90,1),ineq(4, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux86,1),ineq(5, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux87,1),ineq(6, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux92,1),ineq(7, movesTo_00012, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux192,1),ineq(2, movesTo_00013, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux193,1),ineq(3, movesTo_00013, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux196,1),ineq(4, movesTo_00013, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux197,1),ineq(5, movesTo_00013, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux190,1),ineq(6, movesTo_00013, 0)})
watched-or({diseq(1,moves_00014),w-literal(aux146,1),ineq(2, movesTo_00014, 0)})
watched-or({diseq(1,moves_00014),w-literal(aux143,1),ineq(3, movesTo_00014, 0)})
watched-or({diseq(1,moves_00014),w-literal(aux144,1),ineq(4, movesTo_00014, 0)})
watched-or({diseq(1,moves_00014),w-literal(aux141,1),ineq(5, movesTo_00014, 0)})
watched-or({diseq(1,moves_00015),w-literal(aux349,1),ineq(2, movesTo_00015, 0)})
watched-or({diseq(1,moves_00015),w-literal(aux350,1),ineq(3, movesTo_00015, 0)})
watched-or({diseq(1,moves_00015),w-literal(aux351,1),ineq(4, movesTo_00015, 0)})
watched-or({diseq(1,moves_00016),w-literal(aux139,1),ineq(2, movesTo_00016, 0)})
watched-or({diseq(1,moves_00016),w-literal(aux140,1),ineq(3, movesTo_00016, 0)})
watched-or({gaceq(states_00017_00003,states_00019_00001),ineq(2, movesTo_00017, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00002,21),ineq(movesFrom_00001, 2, 0),ineq(2, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00003,12),ineq(movesFrom_00001, 3, 0),ineq(3, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00004,7),ineq(movesFrom_00001, 4, 0),ineq(4, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00005,28),ineq(movesFrom_00001, 5, 0),ineq(5, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00006,37),ineq(movesFrom_00001, 6, 0),ineq(6, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00007,27),ineq(movesFrom_00001, 7, 0),ineq(7, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00008,41),ineq(movesFrom_00001, 8, 0),ineq(8, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00009,43),ineq(movesFrom_00001, 9, 0),ineq(9, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00010,3),ineq(movesFrom_00001, 10, 0),ineq(10, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00011,49),ineq(movesFrom_00001, 11, 0),ineq(11, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00012,13),ineq(movesFrom_00001, 12, 0),ineq(12, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00013,10),ineq(movesFrom_00001, 13, 0),ineq(13, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00014,9),ineq(movesFrom_00001, 14, 0),ineq(14, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00015,31),ineq(movesFrom_00001, 15, 0),ineq(15, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00016,20),ineq(movesFrom_00001, 16, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00017,40),ineq(movesFrom_00001, 17, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux302,1),ineq(movesFrom_00002, 2, 0),ineq(2, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux294,1),ineq(movesFrom_00002, 3, 0),ineq(3, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux293,1),ineq(movesFrom_00002, 4, 0),ineq(4, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux290,1),ineq(movesFrom_00002, 5, 0),ineq(5, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux289,1),ineq(movesFrom_00002, 6, 0),ineq(6, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux300,1),ineq(movesFrom_00002, 7, 0),ineq(7, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux299,1),ineq(movesFrom_00002, 8, 0),ineq(8, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux296,1),ineq(movesFrom_00002, 9, 0),ineq(9, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux280,1),ineq(movesFrom_00002, 10, 0),ineq(10, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux282,1),ineq(movesFrom_00002, 11, 0),ineq(11, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux283,1),ineq(movesFrom_00002, 12, 0),ineq(12, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux286,1),ineq(movesFrom_00002, 13, 0),ineq(13, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux274,1),ineq(movesFrom_00002, 14, 0),ineq(14, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux277,1),ineq(movesFrom_00002, 15, 0),ineq(15, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),gaceq(states_00002_00016,states_00003_00016),ineq(movesFrom_00002, 16, 0),ineq(16, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),gaceq(states_00002_00017,states_00003_00017),ineq(movesFrom_00002, 17, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux231,1),ineq(movesFrom_00003, 2, 0),ineq(2, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux235,1),ineq(movesFrom_00003, 3, 0),ineq(3, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux233,1),ineq(movesFrom_00003, 4, 0),ineq(4, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux239,1),ineq(movesFrom_00003, 5, 0),ineq(5, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux238,1),ineq(movesFrom_00003, 6, 0),ineq(6, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux244,1),ineq(movesFrom_00003, 7, 0),ineq(7, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux242,1),ineq(movesFrom_00003, 8, 0),ineq(8, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux246,1),ineq(movesFrom_00003, 9, 0),ineq(9, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux218,1),ineq(movesFrom_00003, 10, 0),ineq(10, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux220,1),ineq(movesFrom_00003, 11, 0),ineq(11, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux226,1),ineq(movesFrom_00003, 12, 0),ineq(12, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux228,1),ineq(movesFrom_00003, 13, 0),ineq(13, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux222,1),ineq(movesFrom_00003, 14, 0),ineq(14, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux224,1),ineq(movesFrom_00003, 15, 0),ineq(15, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),gaceq(states_00004_00016,states_00003_00016),ineq(movesFrom_00003, 16, 0),ineq(16, movesTo_00003, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux259,1),ineq(movesFrom_00004, 2, 0),ineq(2, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux257,1),ineq(movesFrom_00004, 3, 0),ineq(3, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux256,1),ineq(movesFrom_00004, 4, 0),ineq(4, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux253,1),ineq(movesFrom_00004, 5, 0),ineq(5, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux252,1),ineq(movesFrom_00004, 6, 0),ineq(6, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux249,1),ineq(movesFrom_00004, 7, 0),ineq(7, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux248,1),ineq(movesFrom_00004, 8, 0),ineq(8, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux260,1),ineq(movesFrom_00004, 9, 0),ineq(9, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux263,1),ineq(movesFrom_00004, 10, 0),ineq(10, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux265,1),ineq(movesFrom_00004, 11, 0),ineq(11, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux266,1),ineq(movesFrom_00004, 12, 0),ineq(12, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux269,1),ineq(movesFrom_00004, 13, 0),ineq(13, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux270,1),ineq(movesFrom_00004, 14, 0),ineq(14, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),gaceq(states_00004_00015,states_00005_00015),ineq(movesFrom_00004, 15, 0),ineq(15, movesTo_00004, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux160,1),ineq(movesFrom_00005, 2, 0),ineq(2, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux159,1),ineq(movesFrom_00005, 3, 0),ineq(3, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux163,1),ineq(movesFrom_00005, 4, 0),ineq(4, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux162,1),ineq(movesFrom_00005, 5, 0),ineq(5, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux167,1),ineq(movesFrom_00005, 6, 0),ineq(6, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux166,1),ineq(movesFrom_00005, 7, 0),ineq(7, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux171,1),ineq(movesFrom_00005, 8, 0),ineq(8, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux170,1),ineq(movesFrom_00005, 9, 0),ineq(9, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux157,1),ineq(movesFrom_00005, 10, 0),ineq(10, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux151,1),ineq(movesFrom_00005, 11, 0),ineq(11, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux154,1),ineq(movesFrom_00005, 12, 0),ineq(12, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux148,1),ineq(movesFrom_00005, 13, 0),ineq(13, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),gaceq(states_00005_00014,states_00006_00014),ineq(movesFrom_00005, 14, 0),ineq(14, movesTo_00005, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 2, 0),w-literal(aux303,1),ineq(2, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 3, 0),w-literal(aux310,1),ineq(3, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 4, 0),w-literal(aux309,1),ineq(4, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 5, 0),w-literal(aux306,1),ineq(5, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 6, 0),w-literal(aux305,1),ineq(6, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 7, 0),w-literal(aux316,1),ineq(7, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 8, 0),w-literal(aux315,1),ineq(8, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 9, 0),w-literal(aux312,1),ineq(9, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 10, 0),w-literal(aux320,1),ineq(10, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 11, 0),w-literal(aux322,1),ineq(11, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 12, 0),w-literal(aux323,1),ineq(12, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 13, 0),gaceq(states_00006_00013,states_00007_00013),ineq(13, movesTo_00006, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux336,1),ineq(movesFrom_00007, 2, 0),ineq(2, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux335,1),ineq(movesFrom_00007, 3, 0),ineq(3, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux339,1),ineq(movesFrom_00007, 4, 0),ineq(4, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux338,1),ineq(movesFrom_00007, 5, 0),ineq(5, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux328,1),ineq(movesFrom_00007, 6, 0),ineq(6, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux327,1),ineq(movesFrom_00007, 7, 0),ineq(7, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux332,1),ineq(movesFrom_00007, 8, 0),ineq(8, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux331,1),ineq(movesFrom_00007, 9, 0),ineq(9, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux346,1),ineq(movesFrom_00007, 10, 0),ineq(10, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux342,1),ineq(movesFrom_00007, 11, 0),ineq(11, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),gaceq(states_00007_00012,states_00008_00012),ineq(movesFrom_00007, 12, 0),ineq(12, movesTo_00007, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux209,1),ineq(movesFrom_00008, 2, 0),ineq(2, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux207,1),ineq(movesFrom_00008, 3, 0),ineq(3, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux217,1),ineq(movesFrom_00008, 4, 0),ineq(4, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux215,1),ineq(movesFrom_00008, 5, 0),ineq(5, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux213,1),ineq(movesFrom_00008, 6, 0),ineq(6, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux211,1),ineq(movesFrom_00008, 7, 0),ineq(7, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux203,1),ineq(movesFrom_00008, 8, 0),ineq(8, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux204,1),ineq(movesFrom_00008, 9, 0),ineq(9, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux199,1),ineq(movesFrom_00008, 10, 0),ineq(10, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),gaceq(states_00009_00011,states_00008_00011),ineq(movesFrom_00008, 11, 0),ineq(11, movesTo_00008, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 2, 0),w-literal(aux173,1),ineq(2, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 3, 0),w-literal(aux175,1),ineq(3, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 4, 0),w-literal(aux176,1),ineq(4, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 5, 0),w-literal(aux178,1),ineq(5, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 6, 0),w-literal(aux180,1),ineq(6, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 7, 0),w-literal(aux183,1),ineq(7, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 8, 0),w-literal(aux184,1),ineq(8, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 9, 0),w-literal(aux186,1),ineq(9, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 10, 0),gaceq(states_00009_00010,states_00010_00010),ineq(10, movesTo_00009, 0)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 2, 0),ineq(2, movesTo_00010, 0),w-literal(aux121,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 3, 0),ineq(3, movesTo_00010, 0),w-literal(aux123,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 4, 0),ineq(4, movesTo_00010, 0),w-literal(aux117,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 5, 0),ineq(5, movesTo_00010, 0),w-literal(aux120,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 6, 0),ineq(6, movesTo_00010, 0),w-literal(aux113,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 7, 0),ineq(7, movesTo_00010, 0),w-literal(aux116,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 8, 0),ineq(8, movesTo_00010, 0),w-literal(aux110,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 9, 0),ineq(9, movesTo_00010, 0),gaceq(states_00010_00009,states_00011_00009)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 2, 0),w-literal(aux133,1),ineq(2, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 3, 0),w-literal(aux135,1),ineq(3, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 4, 0),w-literal(aux125,1),ineq(4, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 5, 0),w-literal(aux127,1),ineq(5, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 6, 0),w-literal(aux129,1),ineq(6, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 7, 0),w-literal(aux131,1),ineq(7, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 8, 0),gaceq(states_00012_00008,states_00011_00008),ineq(8, movesTo_00011, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux82,1),ineq(movesFrom_00012, 2, 0),ineq(2, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux84,1),ineq(movesFrom_00012, 3, 0),ineq(3, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux88,1),ineq(movesFrom_00012, 4, 0),ineq(4, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux91,1),ineq(movesFrom_00012, 5, 0),ineq(5, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux85,1),ineq(movesFrom_00012, 6, 0),ineq(6, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),gaceq(states_00012_00007,states_00013_00007),ineq(movesFrom_00012, 7, 0),ineq(7, movesTo_00012, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 2, 0),w-literal(aux198,1),ineq(2, movesTo_00013, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 3, 0),w-literal(aux191,1),ineq(3, movesTo_00013, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 4, 0),w-literal(aux194,1),ineq(4, movesTo_00013, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 5, 0),w-literal(aux195,1),ineq(5, movesTo_00013, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 6, 0),gaceq(states_00013_00006,states_00014_00006),ineq(6, movesTo_00013, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux145,1),ineq(movesFrom_00014, 2, 0),ineq(2, movesTo_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux147,1),ineq(movesFrom_00014, 3, 0),ineq(3, movesTo_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux142,1),ineq(movesFrom_00014, 4, 0),ineq(4, movesTo_00014, 0)})
watched-or({diseq(3,moves_00014),gaceq(states_00014_00005,states_00015_00005),ineq(movesFrom_00014, 5, 0),ineq(5, movesTo_00014, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux347,1),ineq(movesFrom_00015, 2, 0),ineq(2, movesTo_00015, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux348,1),ineq(movesFrom_00015, 3, 0),ineq(3, movesTo_00015, 0)})
watched-or({diseq(3,moves_00015),gaceq(states_00015_00004,states_00016_00004),ineq(movesFrom_00015, 4, 0),ineq(4, movesTo_00015, 0)})
watched-or({diseq(3,moves_00016),ineq(movesFrom_00016, 2, 0),w-literal(aux138,1),ineq(2, movesTo_00016, 0)})
watched-or({diseq(3,moves_00016),ineq(movesFrom_00016, 3, 0),gaceq(states_00017_00003,states_00016_00003),ineq(3, movesTo_00016, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00002,12),ineq(3, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00003,7),ineq(4, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00004,28),ineq(5, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00005,37),ineq(6, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00006,27),ineq(7, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00007,41),ineq(8, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00008,43),ineq(9, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00009,3),ineq(10, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00010,49),ineq(11, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00011,13),ineq(12, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00012,10),ineq(13, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00013,9),ineq(14, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00014,31),ineq(15, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00015,20),ineq(16, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00016,40),ineq(17, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00017,34),ineq(18, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux295,1),ineq(3, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux292,1),ineq(4, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux291,1),ineq(5, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux288,1),ineq(6, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux301,1),ineq(7, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux298,1),ineq(8, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux297,1),ineq(9, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux287,1),ineq(10, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux281,1),ineq(11, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux284,1),ineq(12, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux285,1),ineq(13, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux275,1),ineq(14, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux276,1),ineq(15, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux278,1),ineq(16, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux279,1),ineq(17, movesFrom_00002, 0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(states_00003_00017,0),ineq(18, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux232,1),ineq(3, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux236,1),ineq(4, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux234,1),ineq(5, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux240,1),ineq(6, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux237,1),ineq(7, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux243,1),ineq(8, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux241,1),ineq(9, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux245,1),ineq(10, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux219,1),ineq(11, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux221,1),ineq(12, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux227,1),ineq(13, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux229,1),ineq(14, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux223,1),ineq(15, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux225,1),ineq(16, movesFrom_00003, 0),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux230,1),ineq(17, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux258,1),ineq(3, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux255,1),ineq(4, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux254,1),ineq(5, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux251,1),ineq(6, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux250,1),ineq(7, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux247,1),ineq(8, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux261,1),ineq(9, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux262,1),ineq(10, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux264,1),ineq(11, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux267,1),ineq(12, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux268,1),ineq(13, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux271,1),ineq(14, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux272,1),ineq(15, movesFrom_00004, 0),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux273,1),ineq(16, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux158,1),ineq(3, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux164,1),ineq(4, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux161,1),ineq(5, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux168,1),ineq(6, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux165,1),ineq(7, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux172,1),ineq(8, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux169,1),ineq(9, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux156,1),ineq(10, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux152,1),ineq(11, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux153,1),ineq(12, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux149,1),ineq(13, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux150,1),ineq(14, movesFrom_00005, 0),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux155,1),ineq(15, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux311,1),ineq(3, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux308,1),ineq(4, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux307,1),ineq(5, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux304,1),ineq(6, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux317,1),ineq(7, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux314,1),ineq(8, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux313,1),ineq(9, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux318,1),ineq(10, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux321,1),ineq(11, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux324,1),ineq(12, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux325,1),ineq(13, movesFrom_00006, 0),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux319,1),ineq(14, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux334,1),ineq(3, movesFrom_00007, 0),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux340,1),ineq(4, movesFrom_00007, 0),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux337,1),ineq(5, movesFrom_00007, 0),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux329,1),ineq(6, movesFrom_00007, 0),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux326,1),ineq(7, movesFrom_00007, 0),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux333,1),ineq(8, movesFrom_00007, 0),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux330,1),ineq(9, movesFrom_00007, 0),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux345,1),ineq(10, movesFrom_00007, 0),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux343,1),ineq(11, movesFrom_00007, 0),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux344,1),ineq(12, movesFrom_00007, 0),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux341,1),ineq(13, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux208,1),ineq(3, movesFrom_00008, 0),ineq(12, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux206,1),ineq(4, movesFrom_00008, 0),ineq(12, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux216,1),ineq(5, movesFrom_00008, 0),ineq(12, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux214,1),ineq(6, movesFrom_00008, 0),ineq(12, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux212,1),ineq(7, movesFrom_00008, 0),ineq(12, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux210,1),ineq(8, movesFrom_00008, 0),ineq(12, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux202,1),ineq(9, movesFrom_00008, 0),ineq(12, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux205,1),ineq(10, movesFrom_00008, 0),ineq(12, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux200,1),ineq(11, movesFrom_00008, 0),ineq(12, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux201,1),ineq(12, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux174,1),ineq(3, movesFrom_00009, 0),ineq(11, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux177,1),ineq(4, movesFrom_00009, 0),ineq(11, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux179,1),ineq(5, movesFrom_00009, 0),ineq(11, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux181,1),ineq(6, movesFrom_00009, 0),ineq(11, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux182,1),ineq(7, movesFrom_00009, 0),ineq(11, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux185,1),ineq(8, movesFrom_00009, 0),ineq(11, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux187,1),ineq(9, movesFrom_00009, 0),ineq(11, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux188,1),ineq(10, movesFrom_00009, 0),ineq(11, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux189,1),ineq(11, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00010),ineq(3, movesFrom_00010, 0),ineq(10, movesFrom_00010, 0),w-literal(aux122,1)})
watched-or({diseq(3,moves_00010),ineq(4, movesFrom_00010, 0),ineq(10, movesFrom_00010, 0),w-literal(aux118,1)})
watched-or({diseq(3,moves_00010),ineq(5, movesFrom_00010, 0),ineq(10, movesFrom_00010, 0),w-literal(aux119,1)})
watched-or({diseq(3,moves_00010),ineq(6, movesFrom_00010, 0),ineq(10, movesFrom_00010, 0),w-literal(aux114,1)})
watched-or({diseq(3,moves_00010),ineq(7, movesFrom_00010, 0),ineq(10, movesFrom_00010, 0),w-literal(aux115,1)})
watched-or({diseq(3,moves_00010),ineq(8, movesFrom_00010, 0),ineq(10, movesFrom_00010, 0),w-literal(aux111,1)})
watched-or({diseq(3,moves_00010),ineq(9, movesFrom_00010, 0),ineq(10, movesFrom_00010, 0),w-literal(aux112,1)})
watched-or({diseq(3,moves_00010),ineq(10, movesFrom_00010, 0),w-literal(aux124,1)})
watched-or({diseq(3,moves_00011),w-literal(aux134,1),ineq(3, movesFrom_00011, 0),ineq(9, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux136,1),ineq(4, movesFrom_00011, 0),ineq(9, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux126,1),ineq(5, movesFrom_00011, 0),ineq(9, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux128,1),ineq(6, movesFrom_00011, 0),ineq(9, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux130,1),ineq(7, movesFrom_00011, 0),ineq(9, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux132,1),ineq(8, movesFrom_00011, 0),ineq(9, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux137,1),ineq(9, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux83,1),ineq(3, movesFrom_00012, 0),ineq(8, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux89,1),ineq(4, movesFrom_00012, 0),ineq(8, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux90,1),ineq(5, movesFrom_00012, 0),ineq(8, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux86,1),ineq(6, movesFrom_00012, 0),ineq(8, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux87,1),ineq(7, movesFrom_00012, 0),ineq(8, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux92,1),ineq(8, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux192,1),ineq(3, movesFrom_00013, 0),ineq(7, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux193,1),ineq(4, movesFrom_00013, 0),ineq(7, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux196,1),ineq(5, movesFrom_00013, 0),ineq(7, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux197,1),ineq(6, movesFrom_00013, 0),ineq(7, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux190,1),ineq(7, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux146,1),ineq(3, movesFrom_00014, 0),ineq(6, movesFrom_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux143,1),ineq(4, movesFrom_00014, 0),ineq(6, movesFrom_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux144,1),ineq(5, movesFrom_00014, 0),ineq(6, movesFrom_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux141,1),ineq(6, movesFrom_00014, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux349,1),ineq(3, movesFrom_00015, 0),ineq(5, movesFrom_00015, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux350,1),ineq(4, movesFrom_00015, 0),ineq(5, movesFrom_00015, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux351,1),ineq(5, movesFrom_00015, 0)})
watched-or({diseq(3,moves_00016),w-literal(aux139,1),ineq(3, movesFrom_00016, 0),ineq(4, movesFrom_00016, 0)})
watched-or({diseq(3,moves_00016),w-literal(aux140,1),ineq(4, movesFrom_00016, 0)})
reifyimply(w-literal(states_00002_00001,18), aux405)
reifyimply(w-literal(states_00002_00002,21), aux406)
reifyimply(w-literal(states_00002_00003,12), aux407)
reifyimply(w-literal(states_00002_00004,7), aux408)
reifyimply(w-literal(states_00002_00005,28), aux409)
reifyimply(w-literal(states_00002_00006,37), aux410)
reifyimply(w-literal(states_00002_00007,27), aux411)
reifyimply(w-literal(states_00002_00008,41), aux412)
reifyimply(w-literal(states_00002_00009,43), aux413)
reifyimply(w-literal(states_00002_00010,3), aux414)
reifyimply(w-literal(states_00002_00011,49), aux415)
reifyimply(w-literal(states_00002_00012,13), aux416)
reifyimply(w-literal(states_00002_00013,10), aux417)
reifyimply(w-literal(states_00002_00014,9), aux418)
reifyimply(gaceq(states_00002_00001,states_00003_00001), aux419)
ineq(aux420, aux302, 0)
ineq(aux421, aux294, 0)
ineq(aux422, aux293, 0)
ineq(aux423, aux290, 0)
ineq(aux424, aux289, 0)
ineq(aux425, aux300, 0)
ineq(aux426, aux299, 0)
ineq(aux427, aux296, 0)
ineq(aux428, aux280, 0)
ineq(aux429, aux282, 0)
ineq(aux430, aux283, 0)
ineq(aux431, aux286, 0)
ineq(aux432, aux274, 0)
ineq(aux433, aux277, 0)
reifyimply(gaceq(states_00004_00001,states_00003_00001), aux434)
ineq(aux435, aux231, 0)
ineq(aux436, aux235, 0)
ineq(aux437, aux233, 0)
ineq(aux438, aux239, 0)
ineq(aux439, aux238, 0)
ineq(aux440, aux244, 0)
ineq(aux441, aux242, 0)
ineq(aux442, aux246, 0)
ineq(aux443, aux218, 0)
ineq(aux444, aux220, 0)
ineq(aux445, aux226, 0)
ineq(aux446, aux228, 0)
ineq(aux447, aux222, 0)
ineq(aux448, aux224, 0)
reifyimply(gaceq(states_00004_00001,states_00005_00001), aux449)
ineq(aux450, aux259, 0)
ineq(aux451, aux257, 0)
ineq(aux452, aux256, 0)
ineq(aux453, aux253, 0)
ineq(aux454, aux252, 0)
ineq(aux455, aux249, 0)
ineq(aux456, aux248, 0)
ineq(aux457, aux260, 0)
ineq(aux458, aux263, 0)
ineq(aux459, aux265, 0)
ineq(aux460, aux266, 0)
ineq(aux461, aux269, 0)
ineq(aux462, aux270, 0)
reifyimply(gaceq(states_00005_00001,states_00006_00001), aux463)
ineq(aux464, aux160, 0)
ineq(aux465, aux159, 0)
ineq(aux466, aux163, 0)
ineq(aux467, aux162, 0)
ineq(aux468, aux167, 0)
ineq(aux469, aux166, 0)
ineq(aux470, aux171, 0)
ineq(aux471, aux170, 0)
ineq(aux472, aux157, 0)
ineq(aux473, aux151, 0)
ineq(aux474, aux154, 0)
ineq(aux475, aux148, 0)
reifyimply(gaceq(states_00006_00001,states_00007_00001), aux476)
ineq(aux477, aux303, 0)
ineq(aux478, aux310, 0)
ineq(aux479, aux309, 0)
ineq(aux480, aux306, 0)
ineq(aux481, aux305, 0)
ineq(aux482, aux316, 0)
ineq(aux483, aux315, 0)
ineq(aux484, aux312, 0)
ineq(aux485, aux320, 0)
ineq(aux486, aux322, 0)
ineq(aux487, aux323, 0)
reifyimply(gaceq(states_00007_00001,states_00008_00001), aux488)
ineq(aux489, aux336, 0)
ineq(aux490, aux335, 0)
ineq(aux491, aux339, 0)
ineq(aux492, aux338, 0)
ineq(aux493, aux328, 0)
ineq(aux494, aux327, 0)
ineq(aux495, aux332, 0)
ineq(aux496, aux331, 0)
ineq(aux497, aux346, 0)
ineq(aux498, aux342, 0)
reifyimply(gaceq(states_00009_00001,states_00008_00001), aux499)
ineq(aux500, aux209, 0)
ineq(aux501, aux207, 0)
ineq(aux502, aux217, 0)
ineq(aux503, aux215, 0)
ineq(aux504, aux213, 0)
ineq(aux505, aux211, 0)
ineq(aux506, aux203, 0)
ineq(aux507, aux204, 0)
ineq(aux508, aux199, 0)
reifyimply(gaceq(states_00009_00001,states_00010_00001), aux509)
ineq(aux510, aux173, 0)
ineq(aux511, aux175, 0)
ineq(aux512, aux176, 0)
ineq(aux513, aux178, 0)
ineq(aux514, aux180, 0)
ineq(aux515, aux183, 0)
ineq(aux516, aux184, 0)
ineq(aux517, aux186, 0)
reifyimply(gaceq(states_00010_00001,states_00011_00001), aux518)
ineq(aux519, aux121, 0)
ineq(aux520, aux123, 0)
ineq(aux521, aux117, 0)
ineq(aux522, aux120, 0)
ineq(aux523, aux113, 0)
ineq(aux524, aux116, 0)
ineq(aux525, aux110, 0)
reifyimply(gaceq(states_00012_00001,states_00011_00001), aux526)
ineq(aux527, aux133, 0)
ineq(aux528, aux135, 0)
ineq(aux529, aux125, 0)
ineq(aux530, aux127, 0)
ineq(aux531, aux129, 0)
ineq(aux532, aux131, 0)
reifyimply(gaceq(states_00012_00001,states_00013_00001), aux533)
ineq(aux534, aux82, 0)
ineq(aux535, aux84, 0)
ineq(aux536, aux88, 0)
ineq(aux537, aux91, 0)
ineq(aux538, aux85, 0)
reifyimply(gaceq(states_00013_00001,states_00014_00001), aux539)
ineq(aux540, aux198, 0)
ineq(aux541, aux191, 0)
ineq(aux542, aux194, 0)
ineq(aux543, aux195, 0)
reifyimply(gaceq(states_00014_00001,states_00015_00001), aux544)
ineq(aux545, aux145, 0)
ineq(aux546, aux147, 0)
ineq(aux547, aux142, 0)
reifyimply(gaceq(states_00015_00001,states_00016_00001), aux548)
ineq(aux549, aux347, 0)
ineq(aux550, aux348, 0)
reifyimply(gaceq(states_00017_00001,states_00016_00001), aux551)
ineq(aux552, aux138, 0)
reifyimply(gaceq(states_00017_00001,states_00018_00001), aux553)
watchelement([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015], aux99, aux17)
watchelement([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016], aux101, aux16)
watchelement([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015, states_00004_00016], aux100, aux20)
watchelement([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014, states_00005_00015], aux96, aux22)
watchelement([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013, states_00006_00014], aux95, aux25)
watchelement([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012, states_00007_00013], aux98, aux26)
watchelement([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011, states_00008_00012], aux97, aux29)
watchelement([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010, states_00009_00011], aux94, aux30)
watchelement([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009, states_00010_00010], aux93, aux32)
watchelement([states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008, states_00011_00009], aux109, aux34)
watchelement([states_00012_00001, states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007, states_00012_00008], aux108, aux36)
watchelement([states_00013_00001, states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006, states_00013_00007], aux105, aux38)
watchelement([states_00014_00001, states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005, states_00014_00006], aux104, aux41)
watchelement([states_00015_00001, states_00015_00002, states_00015_00003, states_00015_00004, states_00015_00005], aux107, aux43)
watchelement([states_00016_00001, states_00016_00002, states_00016_00003, states_00016_00004], aux106, aux45)
watchelement([states_00017_00001, states_00017_00002, states_00017_00003], aux103, aux46)
watchelement([states_00018_00001, states_00019_00001], aux102, aux48)
watched-or({div(aux23, 13, aux352),modulo(aux23,13,aux353)})
watched-or({div(aux19, 13, aux354),modulo(aux19,13,aux355)})
watched-or({div(aux18, 13, aux356),modulo(aux18,13,aux357)})
watched-or({div(aux22, 13, aux358),modulo(aux22,13,aux359)})
watched-or({modulo(aux24,13,aux360),div(aux25, 13, aux361)})
watched-or({div(aux26, 13, aux362),modulo(aux26,13,aux363)})
watched-or({div(aux28, 13, aux364),modulo(aux28,13,aux365)})
watched-or({modulo(aux31,13,aux366),div(aux31, 13, aux367)})
watched-or({div(aux32, 13, aux368),modulo(aux33,13,aux369)})
watched-or({modulo(aux35,13,aux370),div(aux34, 13, aux371)})
watched-or({div(aux36, 13, aux372),modulo(aux36,13,aux373)})
watched-or({div(aux38, 13, aux374),modulo(aux38,13,aux375)})
watched-or({div(aux41, 13, aux376),modulo(aux41,13,aux377)})
watched-or({div(aux42, 13, aux378),modulo(aux43,13,aux379)})
watched-or({div(aux44, 13, aux380),modulo(aux44,13,aux381)})
watched-or({div(aux47, 13, aux382),modulo(aux46,13,aux383)})
watched-or({div(aux49, 13, aux384),modulo(aux49,13,aux385)})
watched-or({div(states_00019_00001, 13, aux386),modulo(states_00018_00001,13,aux387)})
watched-or({w-literal(aux50,1),w-literal(aux53,1)})
watched-or({w-literal(aux51,1),w-literal(aux54,1)})
watched-or({w-literal(aux52,1),w-literal(aux56,1)})
watched-or({w-literal(aux55,1),w-literal(aux59,1)})
watched-or({w-literal(aux57,1),w-literal(aux61,1)})
watched-or({w-literal(aux58,1),w-literal(aux62,1)})
watched-or({w-literal(aux60,1),w-literal(aux64,1)})
watched-or({w-literal(aux63,1),w-literal(aux66,1)})
watched-or({w-literal(aux65,1),w-literal(aux67,1)})
watched-or({w-literal(aux69,1),w-literal(aux72,1)})
watched-or({w-literal(aux68,1),w-literal(aux71,1)})
watched-or({w-literal(aux73,1),w-literal(aux77,1)})
watched-or({w-literal(aux70,1),w-literal(aux74,1)})
watched-or({w-literal(aux76,1),w-literal(aux79,1)})
watched-or({w-literal(aux75,1),w-literal(aux78,1)})
watched-or({w-literal(aux80,1),w-literal(aux81,1)})
reifyimply(w-literal(moves_00001,1), aux50)
reifyimply(w-literal(moves_00002,1), aux51)
reifyimply(w-literal(moves_00003,1), aux52)
reifyimply(w-literal(moves_00004,1), aux55)
reifyimply(w-literal(moves_00005,1), aux57)
reifyimply(w-literal(moves_00006,1), aux58)
reifyimply(w-literal(moves_00007,1), aux60)
reifyimply(w-literal(moves_00008,1), aux63)
reifyimply(w-literal(moves_00009,1), aux65)
reifyimply(w-literal(moves_00010,1), aux69)
reifyimply(w-literal(moves_00011,1), aux68)
reifyimply(w-literal(moves_00012,1), aux73)
reifyimply(w-literal(moves_00013,1), aux70)
reifyimply(w-literal(moves_00014,1), aux76)
reifyimply(w-literal(moves_00015,1), aux75)
reifyimply(w-literal(moves_00016,1), aux80)
reifyimply(w-literal(moves_00001,3), aux53)
reifyimply(w-literal(moves_00002,3), aux54)
reifyimply(w-literal(moves_00003,3), aux56)
reifyimply(w-literal(moves_00004,3), aux59)
reifyimply(w-literal(moves_00005,3), aux61)
reifyimply(w-literal(moves_00006,3), aux62)
reifyimply(w-literal(moves_00007,3), aux64)
reifyimply(w-literal(moves_00008,3), aux66)
reifyimply(w-literal(moves_00009,3), aux67)
reifyimply(w-literal(moves_00010,3), aux72)
reifyimply(w-literal(moves_00011,3), aux71)
reifyimply(w-literal(moves_00012,3), aux77)
reifyimply(w-literal(moves_00013,3), aux74)
reifyimply(w-literal(moves_00014,3), aux79)
reifyimply(w-literal(moves_00015,3), aux78)
reifyimply(w-literal(moves_00016,3), aux81)
ineq(movesTo_00001, movesFrom_00001, -1)
ineq(movesTo_00002, movesFrom_00002, -1)
ineq(movesTo_00003, movesFrom_00003, -1)
ineq(movesTo_00004, movesFrom_00004, -1)
ineq(movesTo_00005, movesFrom_00005, -1)
ineq(movesTo_00006, movesFrom_00006, -1)
ineq(movesTo_00007, movesFrom_00007, -1)
ineq(movesTo_00008, movesFrom_00008, -1)
ineq(movesTo_00009, movesFrom_00009, -1)
ineq(movesTo_00010, movesFrom_00010, -1)
ineq(movesTo_00011, movesFrom_00011, -1)
ineq(movesTo_00012, movesFrom_00012, -1)
ineq(movesTo_00013, movesFrom_00013, -1)
ineq(movesTo_00014, movesFrom_00014, -1)
ineq(movesTo_00015, movesFrom_00015, -1)
ineq(movesTo_00016, movesFrom_00016, -1)
ineq(movesTo_00017, movesFrom_00017, -1)
sumleq([-2,movesFrom_00002],aux388)
sumgeq([-2,movesFrom_00002],aux388)
sumleq([-2,movesFrom_00001],aux389)
sumgeq([-2,movesFrom_00001],aux389)
sumleq([-2,movesFrom_00003],aux390)
sumgeq([-2,movesFrom_00003],aux390)
sumleq([-2,movesFrom_00004],aux391)
sumgeq([-2,movesFrom_00004],aux391)
sumleq([-2,movesFrom_00005],aux392)
sumgeq([-2,movesFrom_00005],aux392)
sumleq([-2,movesFrom_00006],aux393)
sumgeq([-2,movesFrom_00006],aux393)
sumleq([-2,movesFrom_00007],aux394)
sumgeq([-2,movesFrom_00007],aux394)
sumleq([-2,movesFrom_00008],aux395)
sumgeq([-2,movesFrom_00008],aux395)
sumleq([-2,movesFrom_00009],aux396)
sumgeq([-2,movesFrom_00009],aux396)
sumleq([-2,movesFrom_00010],aux397)
sumgeq([-2,movesFrom_00010],aux397)
sumleq([-2,movesFrom_00011],aux398)
sumgeq([-2,movesFrom_00011],aux398)
sumleq([-2,movesFrom_00012],aux399)
sumgeq([-2,movesFrom_00012],aux399)
sumleq([-2,movesFrom_00013],aux400)
sumgeq([-2,movesFrom_00013],aux400)
sumleq([-2,movesFrom_00014],aux401)
sumgeq([-2,movesFrom_00014],aux401)
sumleq([-2,movesFrom_00015],aux402)
sumgeq([-2,movesFrom_00015],aux402)
sumleq([-2,movesFrom_00016],aux403)
sumgeq([-2,movesFrom_00016],aux403)
sumleq([-2,movesFrom_00017],aux404)
sumgeq([-2,movesFrom_00017],aux404)
sumleq([-1,movesTo_00009],aux93)
sumgeq([-1,movesTo_00009],aux93)
sumleq([-1,movesTo_00008],aux94)
sumgeq([-1,movesTo_00008],aux94)
sumleq([-1,movesTo_00005],aux95)
sumgeq([-1,movesTo_00005],aux95)
sumleq([-1,movesTo_00004],aux96)
sumgeq([-1,movesTo_00004],aux96)
sumleq([-1,movesTo_00007],aux97)
sumgeq([-1,movesTo_00007],aux97)
sumleq([-1,movesTo_00006],aux98)
sumgeq([-1,movesTo_00006],aux98)
sumleq([-1,movesTo_00001],aux99)
sumgeq([-1,movesTo_00001],aux99)
sumleq([-1,movesTo_00003],aux100)
sumgeq([-1,movesTo_00003],aux100)
sumleq([-1,movesTo_00002],aux101)
sumgeq([-1,movesTo_00002],aux101)
sumleq([-1,movesTo_00017],aux102)
sumgeq([-1,movesTo_00017],aux102)
sumleq([-1,movesTo_00016],aux103)
sumgeq([-1,movesTo_00016],aux103)
sumleq([-1,movesTo_00013],aux104)
sumgeq([-1,movesTo_00013],aux104)
sumleq([-1,movesTo_00012],aux105)
sumgeq([-1,movesTo_00012],aux105)
sumleq([-1,movesTo_00015],aux106)
sumgeq([-1,movesTo_00015],aux106)
sumleq([-1,movesTo_00014],aux107)
sumgeq([-1,movesTo_00014],aux107)
sumleq([-1,movesTo_00011],aux108)
sumgeq([-1,movesTo_00011],aux108)
sumleq([-1,movesTo_00010],aux109)
sumgeq([-1,movesTo_00010],aux109)
sumleq([1,movesTo_00017],movesFrom_00017)
sumgeq([1,movesTo_00017],movesFrom_00017)
**EOF**
