MINION 3
# CSETopLevel_number = 1
# CSETopLevel_eliminated_expressions = 2
# CSETopLevel_total_size = 5
# CSE_active_number = 201
# CSE_active_eliminated_expressions = 415
# CSE_active_total_size = 926
**VARIABLES**
DISCRETE moves_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00001, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00002 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00002, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00003 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00003, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00004 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00004, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00005 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00005, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00006 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00006, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00007 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00007, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00008 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00008, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00009 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00009, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00010 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00010, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00011 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00011, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00012 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00012, [1,1,3,3])
**VARIABLES**
DISCRETE movesFrom_00001 #
{3..13}
DISCRETE movesFrom_00002 #
{3..13}
DISCRETE movesFrom_00003 #
{2..13}
DISCRETE movesFrom_00004 #
{2..12}
DISCRETE movesFrom_00005 #
{2..11}
DISCRETE movesFrom_00006 #
{2..10}
DISCRETE movesFrom_00007 #
{2..9}
DISCRETE movesFrom_00008 #
{2..8}
DISCRETE movesFrom_00009 #
{2..7}
DISCRETE movesFrom_00010 #
{2..6}
DISCRETE movesFrom_00011 #
{2..5}
DISCRETE movesFrom_00012 #
{2..4}
DISCRETE movesFrom_00013 #
{2..3}
DISCRETE movesTo_00001 #
{2..10}
DISCRETE movesTo_00002 #
{1..12}
DISCRETE movesTo_00003 #
{1..12}
DISCRETE movesTo_00004 #
{1..11}
DISCRETE movesTo_00005 #
{1..10}
DISCRETE movesTo_00006 #
{1..9}
DISCRETE movesTo_00007 #
{1..8}
DISCRETE movesTo_00008 #
{1..7}
DISCRETE movesTo_00009 #
{1..6}
DISCRETE movesTo_00010 #
{1..5}
DISCRETE movesTo_00011 #
{1..4}
DISCRETE movesTo_00012 #
{1..3}
DISCRETE movesTo_00013 #
{1..2}
DISCRETE states_00002_00002 #
{27..29}
**CONSTRAINTS**
w-inintervalset(states_00002_00002, [27,27,29,29])
**VARIABLES**
DISCRETE states_00002_00003 #
{4..37}
**CONSTRAINTS**
w-inintervalset(states_00002_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,37])
**VARIABLES**
DISCRETE states_00002_00004 #
{4..37}
**CONSTRAINTS**
w-inintervalset(states_00002_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,37])
**VARIABLES**
DISCRETE states_00002_00005 #
{4..37}
**CONSTRAINTS**
w-inintervalset(states_00002_00005, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,37])
**VARIABLES**
DISCRETE states_00002_00006 #
{4..37}
**CONSTRAINTS**
w-inintervalset(states_00002_00006, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,37])
**VARIABLES**
DISCRETE states_00002_00007 #
{4..45}
**CONSTRAINTS**
w-inintervalset(states_00002_00007, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45])
**VARIABLES**
DISCRETE states_00002_00008 #
{8..45}
**CONSTRAINTS**
w-inintervalset(states_00002_00008, [8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45])
**VARIABLES**
DISCRETE states_00002_00009 #
{4..37}
**CONSTRAINTS**
w-inintervalset(states_00002_00009, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,37])
**VARIABLES**
DISCRETE states_00002_00010 #
{4..38}
**CONSTRAINTS**
w-inintervalset(states_00002_00010, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38])
**VARIABLES**
DISCRETE states_00002_00011 #
{38..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00011, [38,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00002_00012 #
{37..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00012, [37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00001 #
{4..12}
**CONSTRAINTS**
w-inintervalset(states_00003_00001, [4,4,8,8,11,12])
**VARIABLES**
DISCRETE states_00003_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00005, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00006, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00007 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00007, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00008 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00008, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00009 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00009, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00010 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00010, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00011 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00011, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00003_00012 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00012, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(states_00004_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38])
**VARIABLES**
DISCRETE states_00004_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00005, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00006, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00007 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00007, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00008 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00008, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00009 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00009, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00010 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00010, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00011 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00011, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00004_00012 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00012, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00005_00001 #
{4..47}
**CONSTRAINTS**
w-inintervalset(states_00005_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47])
**VARIABLES**
DISCRETE states_00005_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00005_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00005_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00005_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00005, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00005_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00006, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00005_00007 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00007, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00005_00008 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00008, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00005_00009 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00009, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00005_00010 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00010, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00005_00011 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00011, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00006_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00006_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00006_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00006_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00006_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00005, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00006_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00006, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00006_00007 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00007, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00006_00008 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00008, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00006_00009 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00009, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00006_00010 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00010, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00007_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00007_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00007_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00007_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00007_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00005, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00007_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00006, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00007_00007 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00007, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00007_00008 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00008, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00007_00009 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00009, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00008_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00008_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00008_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00008_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00008_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00005, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00008_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00006, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00008_00007 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00007, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00008_00008 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00008, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00009_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00009_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00009_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00009_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00009_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00005, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00009_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00006, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00009_00007 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00007, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00010_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00010_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00010_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00010_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00010_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00005, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00010_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00006, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00011_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00011_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00011_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00011_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00011_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00005, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00012_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00012_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00012_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00012_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00004, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00013_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00013_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00002, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00013_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00003, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00014_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE states_00015_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00001, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012], (-1 + movesTo_00003))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux16, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: Element([12, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012], (-1 + movesTo_00002))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux17, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux18 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, 14], (-2 + movesFrom_00003))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux18, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011], (-1 + movesTo_00004))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux19, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux20 #Active-CSE: 3 occurrences of this expression or equivalent: Element([27, 15, 23, 30, 4, 45, 8, 11, 38, 49, 37], (-3 + movesFrom_00001))
{4..45}
**CONSTRAINTS**
w-inintervalset(aux20, [4,4,8,8,11,11,15,15,23,23,27,27,30,30,37,38,45,45])
**VARIABLES**
DISCRETE aux21 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012], (-2 + movesFrom_00004))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux21, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux22 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, 47], (-3 + movesFrom_00002))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux22, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux23 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011], (-2 + movesFrom_00005))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux23, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010], (-1 + movesTo_00005))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux24, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009], (-1 + movesTo_00006))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux25, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux26 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010], (-2 + movesFrom_00006))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux26, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: Element([29, 27, 15, 23, 30, 4, 45, 8, 11], (-2 + movesTo_00001))
{4..45}
**CONSTRAINTS**
w-inintervalset(aux27, [4,4,8,8,11,11,15,15,23,23,27,27,29,30,45,45])
**VARIABLES**
DISCRETE aux28 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009], (-2 + movesFrom_00007))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux28, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008], (-1 + movesTo_00007))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux29, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux30 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008], (-2 + movesFrom_00008))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux30, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007], (-1 + movesTo_00008))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux31, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux32 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007], (-2 + movesFrom_00009))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux32, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006], (-1 + movesTo_00009))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux33, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005], (-1 + movesTo_00010))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux34, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006], (-2 + movesFrom_00010))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux35, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005], (-2 + movesFrom_00011))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux36, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004], (-1 + movesTo_00011))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux37, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux38 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00012_00002, states_00012_00003, states_00012_00004], (-2 + movesFrom_00012))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux38, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00012_00001, states_00012_00002, states_00012_00003], (-1 + movesTo_00012))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux39, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00013_00001, states_00013_00002], (-1 + movesTo_00013))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux40, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
DISCRETE aux41 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00013_00002, states_00013_00003], (-2 + movesFrom_00013))
{4..49}
**CONSTRAINTS**
w-inintervalset(aux41, [4,4,8,8,11,12,14,15,23,23,27,27,29,30,37,38,45,45,47,47,49,49])
**VARIABLES**
BOOL aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00001=(1 + movesTo_00001))
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00002=(1 + movesTo_00002))
BOOL aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00003=(1 + movesTo_00003))
BOOL aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00001=(3 + movesTo_00001))
BOOL aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00002=(3 + movesTo_00002))
BOOL aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00004=(1 + movesTo_00004))
BOOL aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00003=(3 + movesTo_00003))
BOOL aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00005=(1 + movesTo_00005))
BOOL aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00006=(1 + movesTo_00006))
BOOL aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00004=(3 + movesTo_00004))
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00007=(1 + movesTo_00007))
BOOL aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00005=(3 + movesTo_00005))
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00006=(3 + movesTo_00006))
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00008=(1 + movesTo_00008))
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00007=(3 + movesTo_00007))
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00009=(1 + movesTo_00009))
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00008=(3 + movesTo_00008))
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00009=(3 + movesTo_00009))
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00011=(1 + movesTo_00011))
BOOL aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00010=(1 + movesTo_00010))
BOOL aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00011=(3 + movesTo_00011))
BOOL aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00010=(3 + movesTo_00010))
BOOL aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00012=(1 + movesTo_00012))
BOOL aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00012=(3 + movesTo_00012))
BOOL aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00013_00002)
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00013_00002)
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00004=states_00013_00003)
DISCRETE aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (-2 + movesTo_00001)
{0..8}
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00009)
{0..5}
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00008)
{0..6}
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00005)
{0..9}
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00004)
{0..10}
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00007)
{0..7}
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00006)
{0..8}
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00003)
{0..11}
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00002)
{0..11}
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00013)
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00012)
{0..2}
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00011)
{0..3}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00010)
{0..4}
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00006=states_00011_00005)
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00004=states_00011_00004)
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00004=states_00011_00003)
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00005=states_00011_00004)
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00002=states_00011_00002)
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00003=states_00011_00002)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00003=states_00011_00003)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00004=states_00011_00005)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00011_00002)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00011_00003)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00011_00003)
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00011_00004)
BOOL aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00011=states_00006_00010)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00010=states_00006_00009)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00003=states_00006_00002)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00003=states_00006_00003)
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00002=states_00006_00002)
BOOL aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00005=states_00006_00004)
BOOL aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00005=states_00006_00005)
BOOL aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00004=states_00006_00004)
BOOL aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00004=states_00006_00003)
BOOL aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00007=states_00006_00006)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00007=states_00006_00007)
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00006=states_00006_00006)
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00006=states_00006_00005)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00009=states_00006_00008)
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00009=states_00006_00009)
BOOL aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00008=states_00006_00008)
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00008=states_00006_00007)
BOOL aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00010_00002)
BOOL aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00010_00002)
BOOL aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00010_00003)
BOOL aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00010_00004)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00010_00003)
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00010_00005)
BOOL aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00010_00004)
BOOL aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00010_00005)
BOOL aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00007=states_00010_00006)
BOOL aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00008_00004)
BOOL aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00008_00003)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00008_00003)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00008_00002)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00007=states_00008_00008)
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00008_00007)
BOOL aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00008_00006)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00008_00006)
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00008_00005)
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00008_00005)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00008_00004)
BOOL aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00003_00010)
BOOL aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00003_00011)
BOOL aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00003_00011)
BOOL aux134 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00003_00012)
BOOL aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00003_00002)
BOOL aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00003_00003)
BOOL aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00003_00004)
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00003_00005)
BOOL aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00003_00003)
BOOL aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00003_00004)
BOOL aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00003_00007)
BOOL aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00003_00006)
BOOL aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00003_00005)
BOOL aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00003_00006)
BOOL aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00003_00009)
BOOL aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00003_00008)
BOOL aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00003_00008)
BOOL aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00003_00007)
BOOL aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00003_00010)
BOOL aux150 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00003_00009)
BOOL aux151 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00005_00007)
BOOL aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00005_00008)
BOOL aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00005_00007)
BOOL aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00005_00006)
BOOL aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00005_00005)
BOOL aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00005_00006)
BOOL aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00005_00005)
BOOL aux158 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00005_00004)
BOOL aux159 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00005_00003)
BOOL aux160 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00005_00004)
BOOL aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00005_00003)
BOOL aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00005_00002)
BOOL aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00005_00002)
BOOL aux164 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00005_00009)
BOOL aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00005_00008)
BOOL aux166 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00005_00009)
BOOL aux167 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00005_00010)
BOOL aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00005_00010)
BOOL aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00012=states_00005_00011)
BOOL aux170 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00010=states_00003_00010)
BOOL aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00011=states_00003_00010)
BOOL aux172 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00011=states_00003_00011)
BOOL aux173 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00012=states_00003_00011)
BOOL aux174 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00010=states_00003_00009)
BOOL aux175 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00006=states_00003_00005)
BOOL aux176 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00006=states_00003_00006)
BOOL aux177 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00005=states_00003_00005)
BOOL aux178 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00005=states_00003_00004)
BOOL aux179 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00004=states_00003_00003)
BOOL aux180 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00004=states_00003_00004)
BOOL aux181 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00003=states_00003_00003)
BOOL aux182 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00009=states_00003_00009)
BOOL aux183 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00009=states_00003_00008)
BOOL aux184 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00008=states_00003_00007)
BOOL aux185 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00008=states_00003_00008)
BOOL aux186 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00007=states_00003_00007)
BOOL aux187 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00007=states_00003_00006)
BOOL aux188 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00002=states_00003_00002)
BOOL aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00002=states_00007_00002)
BOOL aux190 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00006=states_00007_00005)
BOOL aux191 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00006=states_00007_00006)
BOOL aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00005=states_00007_00005)
BOOL aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00005=states_00007_00004)
BOOL aux194 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00004=states_00007_00003)
BOOL aux195 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00004=states_00007_00004)
BOOL aux196 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00003=states_00007_00003)
BOOL aux197 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00003=states_00007_00002)
BOOL aux198 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00009=states_00007_00008)
BOOL aux199 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00008=states_00007_00007)
BOOL aux200 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00008=states_00007_00008)
BOOL aux201 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00007=states_00007_00007)
BOOL aux202 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00007=states_00007_00006)
BOOL aux203 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00010=states_00007_00009)
BOOL aux204 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00007=states_00008_00006)
BOOL aux205 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00007=states_00008_00007)
BOOL aux206 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00006=states_00008_00006)
BOOL aux207 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00006=states_00008_00005)
BOOL aux208 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00009=states_00008_00008)
BOOL aux209 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00008=states_00008_00007)
BOOL aux210 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00003=states_00008_00002)
BOOL aux211 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00003=states_00008_00003)
BOOL aux212 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00002=states_00008_00002)
BOOL aux213 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00005=states_00008_00004)
BOOL aux214 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00005=states_00008_00005)
BOOL aux215 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00004=states_00008_00004)
BOOL aux216 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00004=states_00008_00003)
DISCRETE aux217 #
{1..11}
**CONSTRAINTS**
w-inintervalset(aux217, [1,4,6,6,8,8,10,11])
**VARIABLES**
DISCRETE aux218 #
{0..3}
DISCRETE aux219 #
{0..3}
DISCRETE aux220 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux220, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux221 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux221, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux222 #
{0..3}
DISCRETE aux223 #
{0..3}
DISCRETE aux224 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux224, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux225 #
{0..3}
DISCRETE aux226 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux226, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux227 #
{0..3}
DISCRETE aux228 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux228, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux229 #
{0..3}
DISCRETE aux230 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux230, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux231 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux231, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux232 #
{0..3}
DISCRETE aux233 #
{0..3}
DISCRETE aux234 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux234, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux235 #
{0..3}
DISCRETE aux236 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux236, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux237 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux237, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux238 #
{0..3}
DISCRETE aux239 #
{0..3}
DISCRETE aux240 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux240, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux241 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux241, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux242 #
{0..3}
DISCRETE aux243 #
{0..3}
DISCRETE aux244 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux244, [1,4,6,6,8,8,10,12])
**VARIABLES**
DISCRETE aux245 #(-2 + movesFrom_00003)
{0..11}
DISCRETE aux246 #(-3 + movesFrom_00001)
{0..10}
DISCRETE aux247 #(-2 + movesFrom_00004)
{0..10}
DISCRETE aux248 #(-3 + movesFrom_00002)
{0..10}
DISCRETE aux249 #(-2 + movesFrom_00005)
{0..9}
DISCRETE aux250 #(-2 + movesFrom_00006)
{0..8}
DISCRETE aux251 #(-2 + movesFrom_00007)
{0..7}
DISCRETE aux252 #(-2 + movesFrom_00008)
{0..6}
DISCRETE aux253 #(-2 + movesFrom_00009)
{0..5}
DISCRETE aux254 #(-2 + movesFrom_00010)
{0..4}
DISCRETE aux255 #(-2 + movesFrom_00011)
{0..3}
DISCRETE aux256 #(-2 + movesFrom_00012)
{0..2}
BOOL aux257 #(-2 + movesFrom_00013)
BOOL aux258 #(2<movesTo_00001)
BOOL aux259 #(3<movesTo_00001)
BOOL aux260 #(4<movesTo_00001)
BOOL aux261 #(5<movesTo_00001)
BOOL aux262 #(6<movesTo_00001)
BOOL aux263 #(7<movesTo_00001)
BOOL aux264 #(8<movesTo_00001)
BOOL aux265 #(9<movesTo_00001)
BOOL aux266 #(1<movesTo_00002)
BOOL aux267 #(2<movesTo_00002)
BOOL aux268 #(3<movesTo_00002)
BOOL aux269 #(4<movesTo_00002)
BOOL aux270 #(5<movesTo_00002)
BOOL aux271 #(6<movesTo_00002)
BOOL aux272 #(7<movesTo_00002)
BOOL aux273 #(8<movesTo_00002)
BOOL aux274 #(9<movesTo_00002)
BOOL aux275 #(10<movesTo_00002)
BOOL aux276 #(11<movesTo_00002)
BOOL aux277 #(1<movesTo_00003)
BOOL aux278 #(2<movesTo_00003)
BOOL aux279 #(3<movesTo_00003)
BOOL aux280 #(4<movesTo_00003)
BOOL aux281 #(5<movesTo_00003)
BOOL aux282 #(6<movesTo_00003)
BOOL aux283 #(7<movesTo_00003)
BOOL aux284 #(8<movesTo_00003)
BOOL aux285 #(9<movesTo_00003)
BOOL aux286 #(10<movesTo_00003)
BOOL aux287 #(11<movesTo_00003)
BOOL aux288 #(1<movesTo_00004)
BOOL aux289 #(2<movesTo_00004)
BOOL aux290 #(3<movesTo_00004)
BOOL aux291 #(4<movesTo_00004)
BOOL aux292 #(5<movesTo_00004)
BOOL aux293 #(6<movesTo_00004)
BOOL aux294 #(7<movesTo_00004)
BOOL aux295 #(8<movesTo_00004)
BOOL aux296 #(9<movesTo_00004)
BOOL aux297 #(10<movesTo_00004)
BOOL aux298 #(1<movesTo_00005)
BOOL aux299 #(2<movesTo_00005)
BOOL aux300 #(3<movesTo_00005)
BOOL aux301 #(4<movesTo_00005)
BOOL aux302 #(5<movesTo_00005)
BOOL aux303 #(6<movesTo_00005)
BOOL aux304 #(7<movesTo_00005)
BOOL aux305 #(8<movesTo_00005)
BOOL aux306 #(9<movesTo_00005)
BOOL aux307 #(1<movesTo_00006)
BOOL aux308 #(2<movesTo_00006)
BOOL aux309 #(3<movesTo_00006)
BOOL aux310 #(4<movesTo_00006)
BOOL aux311 #(5<movesTo_00006)
BOOL aux312 #(6<movesTo_00006)
BOOL aux313 #(7<movesTo_00006)
BOOL aux314 #(8<movesTo_00006)
BOOL aux315 #(1<movesTo_00007)
BOOL aux316 #(2<movesTo_00007)
BOOL aux317 #(3<movesTo_00007)
BOOL aux318 #(4<movesTo_00007)
BOOL aux319 #(5<movesTo_00007)
BOOL aux320 #(6<movesTo_00007)
BOOL aux321 #(7<movesTo_00007)
BOOL aux322 #(1<movesTo_00008)
BOOL aux323 #(2<movesTo_00008)
BOOL aux324 #(3<movesTo_00008)
BOOL aux325 #(4<movesTo_00008)
BOOL aux326 #(5<movesTo_00008)
BOOL aux327 #(6<movesTo_00008)
BOOL aux328 #(1<movesTo_00009)
BOOL aux329 #(2<movesTo_00009)
BOOL aux330 #(3<movesTo_00009)
BOOL aux331 #(4<movesTo_00009)
BOOL aux332 #(5<movesTo_00009)
BOOL aux333 #(1<movesTo_00010)
BOOL aux334 #(2<movesTo_00010)
BOOL aux335 #(3<movesTo_00010)
BOOL aux336 #(4<movesTo_00010)
BOOL aux337 #(1<movesTo_00011)
BOOL aux338 #(2<movesTo_00011)
BOOL aux339 #(3<movesTo_00011)
BOOL aux340 #(1<movesTo_00012)
BOOL aux341 #(2<movesTo_00012)
BOOL aux342 #(1<movesTo_00013)
**VARIABLES**
ALIAS cards[15]=[12, 29, 27, 15, 23, 30, 4, 45, 8, 11, 38, 49, 37, 47, 14]
**SEARCH**
PRINT[[moves_00001],[moves_00002],[moves_00003],[moves_00004],[moves_00005],[moves_00006],[moves_00007],[moves_00008],[moves_00009],[moves_00010],[moves_00011],[moves_00012],[movesFrom_00001],[movesFrom_00002],[movesFrom_00003],[movesFrom_00004],[movesFrom_00005],[movesFrom_00006],[movesFrom_00007],[movesFrom_00008],[movesFrom_00009],[movesFrom_00010],[movesFrom_00011],[movesFrom_00012],[movesFrom_00013],[movesTo_00001],[movesTo_00002],[movesTo_00003],[movesTo_00004],[movesTo_00005],[movesTo_00006],[movesTo_00007],[movesTo_00008],[movesTo_00009],[movesTo_00010],[movesTo_00011],[movesTo_00012],[movesTo_00013],[states_00002_00002],[states_00002_00003],[states_00002_00004],[states_00002_00005],[states_00002_00006],[states_00002_00007],[states_00002_00008],[states_00002_00009],[states_00002_00010],[states_00002_00011],[states_00002_00012],[states_00003_00001],[states_00003_00002],[states_00003_00003],[states_00003_00004],[states_00003_00005],[states_00003_00006],[states_00003_00007],[states_00003_00008],[states_00003_00009],[states_00003_00010],[states_00003_00011],[states_00003_00012],[states_00004_00001],[states_00004_00002],[states_00004_00003],[states_00004_00004],[states_00004_00005],[states_00004_00006],[states_00004_00007],[states_00004_00008],[states_00004_00009],[states_00004_00010],[states_00004_00011],[states_00004_00012],[states_00005_00001],[states_00005_00002],[states_00005_00003],[states_00005_00004],[states_00005_00005],[states_00005_00006],[states_00005_00007],[states_00005_00008],[states_00005_00009],[states_00005_00010],[states_00005_00011],[states_00006_00001],[states_00006_00002],[states_00006_00003],[states_00006_00004],[states_00006_00005],[states_00006_00006],[states_00006_00007],[states_00006_00008],[states_00006_00009],[states_00006_00010],[states_00007_00001],[states_00007_00002],[states_00007_00003],[states_00007_00004],[states_00007_00005],[states_00007_00006],[states_00007_00007],[states_00007_00008],[states_00007_00009],[states_00008_00001],[states_00008_00002],[states_00008_00003],[states_00008_00004],[states_00008_00005],[states_00008_00006],[states_00008_00007],[states_00008_00008],[states_00009_00001],[states_00009_00002],[states_00009_00003],[states_00009_00004],[states_00009_00005],[states_00009_00006],[states_00009_00007],[states_00010_00001],[states_00010_00002],[states_00010_00003],[states_00010_00004],[states_00010_00005],[states_00010_00006],[states_00011_00001],[states_00011_00002],[states_00011_00003],[states_00011_00004],[states_00011_00005],[states_00012_00001],[states_00012_00002],[states_00012_00003],[states_00012_00004],[states_00013_00001],[states_00013_00002],[states_00013_00003],[states_00014_00001],[states_00015_00001]]
VARORDER STATIC [moves_00001, moves_00002, moves_00003, moves_00004, moves_00005, moves_00006, moves_00007, moves_00008, moves_00009, moves_00010, moves_00011, moves_00012, movesFrom_00001, movesFrom_00002, movesFrom_00003, movesFrom_00004, movesFrom_00005, movesFrom_00006, movesFrom_00007, movesFrom_00008, movesFrom_00009, movesFrom_00010, movesFrom_00011, movesFrom_00012, movesFrom_00013, movesTo_00001, movesTo_00002, movesTo_00003, movesTo_00004, movesTo_00005, movesTo_00006, movesTo_00007, movesTo_00008, movesTo_00009, movesTo_00010, movesTo_00011, movesTo_00012, movesTo_00013, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00012_00001, states_00012_00002, states_00012_00003, states_00012_00004, states_00013_00001, states_00013_00002, states_00013_00003, states_00014_00001, states_00015_00001]
**CONSTRAINTS**
reify(ineq(2, movesTo_00001, -1), aux258)
reify(ineq(3, movesTo_00001, -1), aux259)
reify(ineq(4, movesTo_00001, -1), aux260)
reify(ineq(5, movesTo_00001, -1), aux261)
reify(ineq(6, movesTo_00001, -1), aux262)
reify(ineq(7, movesTo_00001, -1), aux263)
reify(ineq(8, movesTo_00001, -1), aux264)
reify(ineq(9, movesTo_00001, -1), aux265)
reify(ineq(1, movesTo_00002, -1), aux266)
reify(ineq(2, movesTo_00002, -1), aux267)
reify(ineq(3, movesTo_00002, -1), aux268)
reify(ineq(4, movesTo_00002, -1), aux269)
reify(ineq(5, movesTo_00002, -1), aux270)
reify(ineq(6, movesTo_00002, -1), aux271)
reify(ineq(7, movesTo_00002, -1), aux272)
reify(ineq(8, movesTo_00002, -1), aux273)
reify(ineq(9, movesTo_00002, -1), aux274)
reify(ineq(10, movesTo_00002, -1), aux275)
reify(ineq(11, movesTo_00002, -1), aux276)
reify(ineq(1, movesTo_00003, -1), aux277)
reify(ineq(2, movesTo_00003, -1), aux278)
reify(ineq(3, movesTo_00003, -1), aux279)
reify(ineq(4, movesTo_00003, -1), aux280)
reify(ineq(5, movesTo_00003, -1), aux281)
reify(ineq(6, movesTo_00003, -1), aux282)
reify(ineq(7, movesTo_00003, -1), aux283)
reify(ineq(8, movesTo_00003, -1), aux284)
reify(ineq(9, movesTo_00003, -1), aux285)
reify(ineq(10, movesTo_00003, -1), aux286)
reify(ineq(11, movesTo_00003, -1), aux287)
reify(ineq(1, movesTo_00004, -1), aux288)
reify(ineq(2, movesTo_00004, -1), aux289)
reify(ineq(3, movesTo_00004, -1), aux290)
reify(ineq(4, movesTo_00004, -1), aux291)
reify(ineq(5, movesTo_00004, -1), aux292)
reify(ineq(6, movesTo_00004, -1), aux293)
reify(ineq(7, movesTo_00004, -1), aux294)
reify(ineq(8, movesTo_00004, -1), aux295)
reify(ineq(9, movesTo_00004, -1), aux296)
reify(ineq(10, movesTo_00004, -1), aux297)
reify(ineq(1, movesTo_00005, -1), aux298)
reify(ineq(2, movesTo_00005, -1), aux299)
reify(ineq(3, movesTo_00005, -1), aux300)
reify(ineq(4, movesTo_00005, -1), aux301)
reify(ineq(5, movesTo_00005, -1), aux302)
reify(ineq(6, movesTo_00005, -1), aux303)
reify(ineq(7, movesTo_00005, -1), aux304)
reify(ineq(8, movesTo_00005, -1), aux305)
reify(ineq(9, movesTo_00005, -1), aux306)
reify(ineq(1, movesTo_00006, -1), aux307)
reify(ineq(2, movesTo_00006, -1), aux308)
reify(ineq(3, movesTo_00006, -1), aux309)
reify(ineq(4, movesTo_00006, -1), aux310)
reify(ineq(5, movesTo_00006, -1), aux311)
reify(ineq(6, movesTo_00006, -1), aux312)
reify(ineq(7, movesTo_00006, -1), aux313)
reify(ineq(8, movesTo_00006, -1), aux314)
reify(ineq(1, movesTo_00007, -1), aux315)
reify(ineq(2, movesTo_00007, -1), aux316)
reify(ineq(3, movesTo_00007, -1), aux317)
reify(ineq(4, movesTo_00007, -1), aux318)
reify(ineq(5, movesTo_00007, -1), aux319)
reify(ineq(6, movesTo_00007, -1), aux320)
reify(ineq(7, movesTo_00007, -1), aux321)
reify(ineq(1, movesTo_00008, -1), aux322)
reify(ineq(2, movesTo_00008, -1), aux323)
reify(ineq(3, movesTo_00008, -1), aux324)
reify(ineq(4, movesTo_00008, -1), aux325)
reify(ineq(5, movesTo_00008, -1), aux326)
reify(ineq(6, movesTo_00008, -1), aux327)
reify(ineq(1, movesTo_00009, -1), aux328)
reify(ineq(2, movesTo_00009, -1), aux329)
reify(ineq(3, movesTo_00009, -1), aux330)
reify(ineq(4, movesTo_00009, -1), aux331)
reify(ineq(5, movesTo_00009, -1), aux332)
reify(ineq(1, movesTo_00010, -1), aux333)
reify(ineq(2, movesTo_00010, -1), aux334)
reify(ineq(3, movesTo_00010, -1), aux335)
reify(ineq(4, movesTo_00010, -1), aux336)
reify(ineq(1, movesTo_00011, -1), aux337)
reify(ineq(2, movesTo_00011, -1), aux338)
reify(ineq(3, movesTo_00011, -1), aux339)
reify(ineq(1, movesTo_00012, -1), aux340)
reify(ineq(2, movesTo_00012, -1), aux341)
reify(ineq(1, movesTo_00013, -1), aux342)
modulo(aux27,13,aux217)
div(aux27, 13, aux218)
div(aux22, 13, aux219)
modulo(aux17,13,aux220)
modulo(aux16,13,aux221)
div(aux18, 13, aux222)
div(aux21, 13, aux223)
modulo(aux21,13,aux224)
div(aux23, 13, aux225)
modulo(aux23,13,aux226)
div(aux26, 13, aux227)
modulo(aux26,13,aux228)
div(aux29, 13, aux229)
modulo(aux29,13,aux230)
modulo(aux30,13,aux231)
div(aux31, 13, aux232)
div(aux33, 13, aux233)
modulo(aux33,13,aux234)
div(aux35, 13, aux235)
modulo(aux35,13,aux236)
modulo(aux36,13,aux237)
div(aux37, 13, aux238)
div(aux38, 13, aux239)
modulo(aux38,13,aux240)
modulo(aux41,13,aux241)
div(aux41, 13, aux242)
div(states_00015_00001, 13, aux243)
modulo(states_00015_00001,13,aux244)
watchelement([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012], aux76, aux16)
watchelement([12, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012], aux77, aux17)
watchelement([states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, 14], aux245, aux18)
watchelement([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011], aux73, aux19)
watchelement([27, 15, 23, 30, 4, 45, 8, 11, 38, 49, 37], aux246, aux20)
watchelement([states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012], aux247, aux21)
watchelement([states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, 47], aux248, aux22)
watchelement([states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011], aux249, aux23)
watchelement([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010], aux72, aux24)
watchelement([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009], aux75, aux25)
watchelement([states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010], aux250, aux26)
watchelement([29, 27, 15, 23, 30, 4, 45, 8, 11], aux69, aux27)
watchelement([states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009], aux251, aux28)
watchelement([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008], aux74, aux29)
watchelement([states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008], aux252, aux30)
watchelement([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007], aux71, aux31)
watchelement([states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007], aux253, aux32)
watchelement([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006], aux70, aux33)
watchelement([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005], aux81, aux34)
watchelement([states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006], aux254, aux35)
watchelement([states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005], aux255, aux36)
watchelement([states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004], aux80, aux37)
watchelement([states_00012_00002, states_00012_00003, states_00012_00004], aux256, aux38)
watchelement([states_00012_00001, states_00012_00002, states_00012_00003], aux79, aux39)
watchelement([states_00013_00001, states_00013_00002], aux78, aux40)
watchelement([states_00013_00002, states_00013_00003], aux257, aux41)
reify(watched-and({sumleq([1,movesTo_00001],movesFrom_00001),sumgeq([1,movesTo_00001],movesFrom_00001)}), aux42)
reify(watched-and({sumleq([1,movesTo_00002],movesFrom_00002),sumgeq([1,movesTo_00002],movesFrom_00002)}), aux43)
reify(watched-and({sumleq([1,movesTo_00003],movesFrom_00003),sumgeq([1,movesTo_00003],movesFrom_00003)}), aux44)
reify(watched-and({sumleq([3,movesTo_00001],movesFrom_00001),sumgeq([3,movesTo_00001],movesFrom_00001)}), aux45)
reify(watched-and({sumleq([3,movesTo_00002],movesFrom_00002),sumgeq([3,movesTo_00002],movesFrom_00002)}), aux46)
reify(watched-and({sumleq([1,movesTo_00004],movesFrom_00004),sumgeq([1,movesTo_00004],movesFrom_00004)}), aux47)
reify(watched-and({sumleq([3,movesTo_00003],movesFrom_00003),sumgeq([3,movesTo_00003],movesFrom_00003)}), aux48)
reify(watched-and({sumleq([1,movesTo_00005],movesFrom_00005),sumgeq([1,movesTo_00005],movesFrom_00005)}), aux49)
reify(watched-and({sumleq([1,movesTo_00006],movesFrom_00006),sumgeq([1,movesTo_00006],movesFrom_00006)}), aux50)
reify(watched-and({sumleq([3,movesTo_00004],movesFrom_00004),sumgeq([3,movesTo_00004],movesFrom_00004)}), aux51)
reify(watched-and({sumleq([1,movesTo_00007],movesFrom_00007),sumgeq([1,movesTo_00007],movesFrom_00007)}), aux52)
reify(watched-and({sumleq([3,movesTo_00005],movesFrom_00005),sumgeq([3,movesTo_00005],movesFrom_00005)}), aux53)
reify(watched-and({sumleq([3,movesTo_00006],movesFrom_00006),sumgeq([3,movesTo_00006],movesFrom_00006)}), aux54)
reify(watched-and({sumleq([1,movesTo_00008],movesFrom_00008),sumgeq([1,movesTo_00008],movesFrom_00008)}), aux55)
reify(watched-and({sumleq([3,movesTo_00007],movesFrom_00007),sumgeq([3,movesTo_00007],movesFrom_00007)}), aux56)
reify(watched-and({sumleq([1,movesTo_00009],movesFrom_00009),sumgeq([1,movesTo_00009],movesFrom_00009)}), aux57)
reify(watched-and({sumleq([3,movesTo_00008],movesFrom_00008),sumgeq([3,movesTo_00008],movesFrom_00008)}), aux58)
reify(watched-and({sumleq([3,movesTo_00009],movesFrom_00009),sumgeq([3,movesTo_00009],movesFrom_00009)}), aux59)
reify(watched-and({sumleq([1,movesTo_00011],movesFrom_00011),sumgeq([1,movesTo_00011],movesFrom_00011)}), aux60)
reify(watched-and({sumleq([1,movesTo_00010],movesFrom_00010),sumgeq([1,movesTo_00010],movesFrom_00010)}), aux61)
reify(watched-and({sumleq([3,movesTo_00011],movesFrom_00011),sumgeq([3,movesTo_00011],movesFrom_00011)}), aux62)
reify(watched-and({sumleq([3,movesTo_00010],movesFrom_00010),sumgeq([3,movesTo_00010],movesFrom_00010)}), aux63)
reify(watched-and({sumleq([1,movesTo_00012],movesFrom_00012),sumgeq([1,movesTo_00012],movesFrom_00012)}), aux64)
reify(sumleq([3,movesTo_00012],movesFrom_00012), aux65)
reify(gaceq(states_00012_00002,states_00013_00002), aux66)
reify(gaceq(states_00012_00003,states_00013_00002), aux67)
reify(gaceq(states_00012_00004,states_00013_00003), aux68)
reify(gaceq(states_00010_00006,states_00011_00005), aux82)
reify(gaceq(states_00010_00004,states_00011_00004), aux83)
reify(gaceq(states_00010_00004,states_00011_00003), aux84)
reify(gaceq(states_00010_00005,states_00011_00004), aux85)
reify(gaceq(states_00010_00002,states_00011_00002), aux86)
reify(gaceq(states_00010_00003,states_00011_00002), aux87)
reify(gaceq(states_00010_00003,states_00011_00003), aux88)
reify(gaceq(states_00012_00004,states_00011_00005), aux89)
reify(gaceq(states_00012_00002,states_00011_00002), aux90)
reify(gaceq(states_00012_00002,states_00011_00003), aux91)
reify(gaceq(states_00012_00003,states_00011_00003), aux92)
reify(gaceq(states_00012_00003,states_00011_00004), aux93)
reify(gaceq(states_00005_00011,states_00006_00010), aux94)
reify(gaceq(states_00005_00010,states_00006_00009), aux95)
reify(gaceq(states_00005_00003,states_00006_00002), aux96)
reify(gaceq(states_00005_00003,states_00006_00003), aux97)
reify(gaceq(states_00005_00002,states_00006_00002), aux98)
reify(gaceq(states_00005_00005,states_00006_00004), aux99)
reify(gaceq(states_00005_00005,states_00006_00005), aux100)
reify(gaceq(states_00005_00004,states_00006_00004), aux101)
reify(gaceq(states_00005_00004,states_00006_00003), aux102)
reify(gaceq(states_00005_00007,states_00006_00006), aux103)
reify(gaceq(states_00005_00007,states_00006_00007), aux104)
reify(gaceq(states_00005_00006,states_00006_00006), aux105)
reify(gaceq(states_00005_00006,states_00006_00005), aux106)
reify(gaceq(states_00005_00009,states_00006_00008), aux107)
reify(gaceq(states_00005_00009,states_00006_00009), aux108)
reify(gaceq(states_00005_00008,states_00006_00008), aux109)
reify(gaceq(states_00005_00008,states_00006_00007), aux110)
reify(gaceq(states_00009_00002,states_00010_00002), aux111)
reify(gaceq(states_00009_00003,states_00010_00002), aux112)
reify(gaceq(states_00009_00003,states_00010_00003), aux113)
reify(gaceq(states_00009_00004,states_00010_00004), aux114)
reify(gaceq(states_00009_00004,states_00010_00003), aux115)
reify(gaceq(states_00009_00005,states_00010_00005), aux116)
reify(gaceq(states_00009_00005,states_00010_00004), aux117)
reify(gaceq(states_00009_00006,states_00010_00005), aux118)
reify(gaceq(states_00009_00007,states_00010_00006), aux119)
reify(gaceq(states_00009_00003,states_00008_00004), aux120)
reify(gaceq(states_00009_00003,states_00008_00003), aux121)
reify(gaceq(states_00009_00002,states_00008_00003), aux122)
reify(gaceq(states_00009_00002,states_00008_00002), aux123)
reify(gaceq(states_00009_00007,states_00008_00008), aux124)
reify(gaceq(states_00009_00006,states_00008_00007), aux125)
reify(gaceq(states_00009_00006,states_00008_00006), aux126)
reify(gaceq(states_00009_00005,states_00008_00006), aux127)
reify(gaceq(states_00009_00005,states_00008_00005), aux128)
reify(gaceq(states_00009_00004,states_00008_00005), aux129)
reify(gaceq(states_00009_00004,states_00008_00004), aux130)
reify(gaceq(states_00004_00010,states_00003_00010), aux131)
reify(gaceq(states_00004_00010,states_00003_00011), aux132)
reify(gaceq(states_00004_00011,states_00003_00011), aux133)
reify(gaceq(states_00004_00011,states_00003_00012), aux134)
reify(gaceq(states_00004_00002,states_00003_00002), aux135)
reify(gaceq(states_00004_00002,states_00003_00003), aux136)
reify(gaceq(states_00004_00004,states_00003_00004), aux137)
reify(gaceq(states_00004_00004,states_00003_00005), aux138)
reify(gaceq(states_00004_00003,states_00003_00003), aux139)
reify(gaceq(states_00004_00003,states_00003_00004), aux140)
reify(gaceq(states_00004_00006,states_00003_00007), aux141)
reify(gaceq(states_00004_00006,states_00003_00006), aux142)
reify(gaceq(states_00004_00005,states_00003_00005), aux143)
reify(gaceq(states_00004_00005,states_00003_00006), aux144)
reify(gaceq(states_00004_00008,states_00003_00009), aux145)
reify(gaceq(states_00004_00008,states_00003_00008), aux146)
reify(gaceq(states_00004_00007,states_00003_00008), aux147)
reify(gaceq(states_00004_00007,states_00003_00007), aux148)
reify(gaceq(states_00004_00009,states_00003_00010), aux149)
reify(gaceq(states_00004_00009,states_00003_00009), aux150)
reify(gaceq(states_00004_00008,states_00005_00007), aux151)
reify(gaceq(states_00004_00008,states_00005_00008), aux152)
reify(gaceq(states_00004_00007,states_00005_00007), aux153)
reify(gaceq(states_00004_00007,states_00005_00006), aux154)
reify(gaceq(states_00004_00006,states_00005_00005), aux155)
reify(gaceq(states_00004_00006,states_00005_00006), aux156)
reify(gaceq(states_00004_00005,states_00005_00005), aux157)
reify(gaceq(states_00004_00005,states_00005_00004), aux158)
reify(gaceq(states_00004_00004,states_00005_00003), aux159)
reify(gaceq(states_00004_00004,states_00005_00004), aux160)
reify(gaceq(states_00004_00003,states_00005_00003), aux161)
reify(gaceq(states_00004_00003,states_00005_00002), aux162)
reify(gaceq(states_00004_00002,states_00005_00002), aux163)
reify(gaceq(states_00004_00009,states_00005_00009), aux164)
reify(gaceq(states_00004_00009,states_00005_00008), aux165)
reify(gaceq(states_00004_00010,states_00005_00009), aux166)
reify(gaceq(states_00004_00010,states_00005_00010), aux167)
reify(gaceq(states_00004_00011,states_00005_00010), aux168)
reify(gaceq(states_00004_00012,states_00005_00011), aux169)
reify(gaceq(states_00002_00010,states_00003_00010), aux170)
reify(gaceq(states_00002_00011,states_00003_00010), aux171)
reify(gaceq(states_00002_00011,states_00003_00011), aux172)
reify(gaceq(states_00002_00012,states_00003_00011), aux173)
reify(gaceq(states_00002_00010,states_00003_00009), aux174)
reify(gaceq(states_00002_00006,states_00003_00005), aux175)
reify(gaceq(states_00002_00006,states_00003_00006), aux176)
reify(gaceq(states_00002_00005,states_00003_00005), aux177)
reify(gaceq(states_00002_00005,states_00003_00004), aux178)
reify(gaceq(states_00002_00004,states_00003_00003), aux179)
reify(gaceq(states_00002_00004,states_00003_00004), aux180)
reify(gaceq(states_00002_00003,states_00003_00003), aux181)
reify(gaceq(states_00002_00009,states_00003_00009), aux182)
reify(gaceq(states_00002_00009,states_00003_00008), aux183)
reify(gaceq(states_00002_00008,states_00003_00007), aux184)
reify(gaceq(states_00002_00008,states_00003_00008), aux185)
reify(gaceq(states_00002_00007,states_00003_00007), aux186)
reify(gaceq(states_00002_00007,states_00003_00006), aux187)
reify(gaceq(states_00002_00002,states_00003_00002), aux188)
reify(gaceq(states_00006_00002,states_00007_00002), aux189)
reify(gaceq(states_00006_00006,states_00007_00005), aux190)
reify(gaceq(states_00006_00006,states_00007_00006), aux191)
reify(gaceq(states_00006_00005,states_00007_00005), aux192)
reify(gaceq(states_00006_00005,states_00007_00004), aux193)
reify(gaceq(states_00006_00004,states_00007_00003), aux194)
reify(gaceq(states_00006_00004,states_00007_00004), aux195)
reify(gaceq(states_00006_00003,states_00007_00003), aux196)
reify(gaceq(states_00006_00003,states_00007_00002), aux197)
reify(gaceq(states_00006_00009,states_00007_00008), aux198)
reify(gaceq(states_00006_00008,states_00007_00007), aux199)
reify(gaceq(states_00006_00008,states_00007_00008), aux200)
reify(gaceq(states_00006_00007,states_00007_00007), aux201)
reify(gaceq(states_00006_00007,states_00007_00006), aux202)
reify(gaceq(states_00006_00010,states_00007_00009), aux203)
reify(gaceq(states_00007_00007,states_00008_00006), aux204)
reify(gaceq(states_00007_00007,states_00008_00007), aux205)
reify(gaceq(states_00007_00006,states_00008_00006), aux206)
reify(gaceq(states_00007_00006,states_00008_00005), aux207)
reify(gaceq(states_00007_00009,states_00008_00008), aux208)
reify(gaceq(states_00007_00008,states_00008_00007), aux209)
reify(gaceq(states_00007_00003,states_00008_00002), aux210)
reify(gaceq(states_00007_00003,states_00008_00003), aux211)
reify(gaceq(states_00007_00002,states_00008_00002), aux212)
reify(gaceq(states_00007_00005,states_00008_00004), aux213)
reify(gaceq(states_00007_00005,states_00008_00005), aux214)
reify(gaceq(states_00007_00004,states_00008_00004), aux215)
reify(gaceq(states_00007_00004,states_00008_00003), aux216)
watched-or({diseq(1,moves_00001),w-literal(states_00002_00003,15),ineq(3, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00004,23),ineq(4, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00005,30),ineq(5, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00006,4),ineq(6, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00007,45),ineq(7, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00008,8),ineq(8, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00009,11),ineq(9, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00010,38),ineq(10, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00011,49)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00012,37)})
watched-or({diseq(1,moves_00002),gaceq(states_00002_00003,states_00003_00002),ineq(2, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux179,1),ineq(3, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux178,1),ineq(4, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux175,1),ineq(5, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux187,1),ineq(6, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux184,1),ineq(7, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux183,1),ineq(8, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux174,1),ineq(9, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux171,1),ineq(10, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux173,1),ineq(11, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(states_00003_00012,47),ineq(12, movesTo_00002, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux136,1),ineq(2, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux140,1),ineq(3, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux138,1),ineq(4, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux144,1),ineq(5, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux141,1),ineq(6, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux147,1),ineq(7, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux145,1),ineq(8, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux149,1),ineq(9, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux132,1),ineq(10, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux134,1),ineq(11, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(states_00004_00012,14),ineq(12, movesTo_00003, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux162,1),ineq(2, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux159,1),ineq(3, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux158,1),ineq(4, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux155,1),ineq(5, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux154,1),ineq(6, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux151,1),ineq(7, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux165,1),ineq(8, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux166,1),ineq(9, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux168,1),ineq(10, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux169,1),ineq(11, movesTo_00004, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux96,1),ineq(2, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux102,1),ineq(3, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux99,1),ineq(4, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux106,1),ineq(5, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux103,1),ineq(6, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux110,1),ineq(7, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux107,1),ineq(8, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux95,1),ineq(9, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux94,1),ineq(10, movesTo_00005, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux197,1),ineq(2, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux194,1),ineq(3, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux193,1),ineq(4, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux190,1),ineq(5, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux202,1),ineq(6, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux199,1),ineq(7, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux198,1),ineq(8, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux203,1),ineq(9, movesTo_00006, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux210,1),ineq(2, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux216,1),ineq(3, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux213,1),ineq(4, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux207,1),ineq(5, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux204,1),ineq(6, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux209,1),ineq(7, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux208,1),ineq(8, movesTo_00007, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux122,1),ineq(2, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux120,1),ineq(3, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux129,1),ineq(4, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux127,1),ineq(5, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux125,1),ineq(6, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux124,1),ineq(7, movesTo_00008, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux112,1),ineq(2, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux115,1),ineq(3, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux117,1),ineq(4, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux118,1),ineq(5, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux119,1),ineq(6, movesTo_00009, 0)})
watched-or({diseq(1,moves_00010),ineq(2, movesTo_00010, 0),w-literal(aux87,1)})
watched-or({diseq(1,moves_00010),ineq(3, movesTo_00010, 0),w-literal(aux84,1)})
watched-or({diseq(1,moves_00010),ineq(4, movesTo_00010, 0),w-literal(aux85,1)})
watched-or({diseq(1,moves_00010),ineq(5, movesTo_00010, 0),w-literal(aux82,1)})
watched-or({diseq(1,moves_00011),w-literal(aux91,1),ineq(2, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux93,1),ineq(3, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux89,1),ineq(4, movesTo_00011, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux67,1),ineq(2, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux68,1),ineq(3, movesTo_00012, 0)})
watched-or({gaceq(states_00013_00003,states_00015_00001),ineq(2, movesTo_00013, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00003,27),ineq(movesFrom_00001, 3, 0),ineq(3, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00004,15),ineq(movesFrom_00001, 4, 0),ineq(4, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00005,23),ineq(movesFrom_00001, 5, 0),ineq(5, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00006,30),ineq(movesFrom_00001, 6, 0),ineq(6, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00007,4),ineq(movesFrom_00001, 7, 0),ineq(7, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00008,45),ineq(movesFrom_00001, 8, 0),ineq(8, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00009,8),ineq(movesFrom_00001, 9, 0),ineq(9, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00010,11),ineq(movesFrom_00001, 10, 0),ineq(10, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00011,38),ineq(movesFrom_00001, 11, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00012,49),ineq(movesFrom_00001, 12, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux188,1),ineq(2, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux181,1),ineq(movesFrom_00002, 3, 0),ineq(3, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux180,1),ineq(movesFrom_00002, 4, 0),ineq(4, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux177,1),ineq(movesFrom_00002, 5, 0),ineq(5, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux176,1),ineq(movesFrom_00002, 6, 0),ineq(6, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux186,1),ineq(movesFrom_00002, 7, 0),ineq(7, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux185,1),ineq(movesFrom_00002, 8, 0),ineq(8, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux182,1),ineq(movesFrom_00002, 9, 0),ineq(9, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux170,1),ineq(movesFrom_00002, 10, 0),ineq(10, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux172,1),ineq(movesFrom_00002, 11, 0),ineq(11, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),gaceq(states_00002_00012,states_00003_00012),ineq(movesFrom_00002, 12, 0),ineq(12, movesTo_00002, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux135,1),ineq(movesFrom_00003, 2, 0),ineq(2, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux139,1),ineq(movesFrom_00003, 3, 0),ineq(3, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux137,1),ineq(movesFrom_00003, 4, 0),ineq(4, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux143,1),ineq(movesFrom_00003, 5, 0),ineq(5, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux142,1),ineq(movesFrom_00003, 6, 0),ineq(6, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux148,1),ineq(movesFrom_00003, 7, 0),ineq(7, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux146,1),ineq(movesFrom_00003, 8, 0),ineq(8, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux150,1),ineq(movesFrom_00003, 9, 0),ineq(9, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux131,1),ineq(movesFrom_00003, 10, 0),ineq(10, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux133,1),ineq(movesFrom_00003, 11, 0),ineq(11, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),gaceq(states_00004_00012,states_00003_00012),ineq(movesFrom_00003, 12, 0),ineq(12, movesTo_00003, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux163,1),ineq(movesFrom_00004, 2, 0),ineq(2, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux161,1),ineq(movesFrom_00004, 3, 0),ineq(3, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux160,1),ineq(movesFrom_00004, 4, 0),ineq(4, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux157,1),ineq(movesFrom_00004, 5, 0),ineq(5, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux156,1),ineq(movesFrom_00004, 6, 0),ineq(6, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux153,1),ineq(movesFrom_00004, 7, 0),ineq(7, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux152,1),ineq(movesFrom_00004, 8, 0),ineq(8, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux164,1),ineq(movesFrom_00004, 9, 0),ineq(9, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux167,1),ineq(movesFrom_00004, 10, 0),ineq(10, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),gaceq(states_00004_00011,states_00005_00011),ineq(movesFrom_00004, 11, 0),ineq(11, movesTo_00004, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux98,1),ineq(movesFrom_00005, 2, 0),ineq(2, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux97,1),ineq(movesFrom_00005, 3, 0),ineq(3, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux101,1),ineq(movesFrom_00005, 4, 0),ineq(4, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux100,1),ineq(movesFrom_00005, 5, 0),ineq(5, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux105,1),ineq(movesFrom_00005, 6, 0),ineq(6, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux104,1),ineq(movesFrom_00005, 7, 0),ineq(7, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux109,1),ineq(movesFrom_00005, 8, 0),ineq(8, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux108,1),ineq(movesFrom_00005, 9, 0),ineq(9, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),gaceq(states_00005_00010,states_00006_00010),ineq(movesFrom_00005, 10, 0),ineq(10, movesTo_00005, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 2, 0),w-literal(aux189,1),ineq(2, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 3, 0),w-literal(aux196,1),ineq(3, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 4, 0),w-literal(aux195,1),ineq(4, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 5, 0),w-literal(aux192,1),ineq(5, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 6, 0),w-literal(aux191,1),ineq(6, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 7, 0),w-literal(aux201,1),ineq(7, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 8, 0),w-literal(aux200,1),ineq(8, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 9, 0),gaceq(states_00006_00009,states_00007_00009),ineq(9, movesTo_00006, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux212,1),ineq(movesFrom_00007, 2, 0),ineq(2, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux211,1),ineq(movesFrom_00007, 3, 0),ineq(3, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux215,1),ineq(movesFrom_00007, 4, 0),ineq(4, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux214,1),ineq(movesFrom_00007, 5, 0),ineq(5, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux206,1),ineq(movesFrom_00007, 6, 0),ineq(6, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux205,1),ineq(movesFrom_00007, 7, 0),ineq(7, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),gaceq(states_00007_00008,states_00008_00008),ineq(movesFrom_00007, 8, 0),ineq(8, movesTo_00007, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux123,1),ineq(movesFrom_00008, 2, 0),ineq(2, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux121,1),ineq(movesFrom_00008, 3, 0),ineq(3, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux130,1),ineq(movesFrom_00008, 4, 0),ineq(4, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux128,1),ineq(movesFrom_00008, 5, 0),ineq(5, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux126,1),ineq(movesFrom_00008, 6, 0),ineq(6, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),gaceq(states_00009_00007,states_00008_00007),ineq(movesFrom_00008, 7, 0),ineq(7, movesTo_00008, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 2, 0),w-literal(aux111,1),ineq(2, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 3, 0),w-literal(aux113,1),ineq(3, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 4, 0),w-literal(aux114,1),ineq(4, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 5, 0),w-literal(aux116,1),ineq(5, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 6, 0),gaceq(states_00009_00006,states_00010_00006),ineq(6, movesTo_00009, 0)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 2, 0),ineq(2, movesTo_00010, 0),w-literal(aux86,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 3, 0),ineq(3, movesTo_00010, 0),w-literal(aux88,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 4, 0),ineq(4, movesTo_00010, 0),w-literal(aux83,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 5, 0),ineq(5, movesTo_00010, 0),gaceq(states_00010_00005,states_00011_00005)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 2, 0),w-literal(aux90,1),ineq(2, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 3, 0),w-literal(aux92,1),ineq(3, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 4, 0),gaceq(states_00012_00004,states_00011_00004),ineq(4, movesTo_00011, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux66,1),ineq(movesFrom_00012, 2, 0),ineq(2, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),gaceq(states_00012_00003,states_00013_00003),ineq(movesFrom_00012, 3, 0),ineq(3, movesTo_00012, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00003,15),ineq(4, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00004,23),ineq(5, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00005,30),ineq(6, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00006,4),ineq(7, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00007,45),ineq(8, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00008,8),ineq(9, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00009,11),ineq(10, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00010,38),ineq(11, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00011,49),ineq(12, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00012,37),ineq(13, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux179,1),ineq(4, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux178,1),ineq(5, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux175,1),ineq(6, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux187,1),ineq(7, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux184,1),ineq(8, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux183,1),ineq(9, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux174,1),ineq(10, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux171,1),ineq(11, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux173,1),ineq(12, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(states_00003_00012,47),ineq(13, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux136,1),ineq(3, movesFrom_00003, 0),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux140,1),ineq(4, movesFrom_00003, 0),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux138,1),ineq(5, movesFrom_00003, 0),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux144,1),ineq(6, movesFrom_00003, 0),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux141,1),ineq(7, movesFrom_00003, 0),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux147,1),ineq(8, movesFrom_00003, 0),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux145,1),ineq(9, movesFrom_00003, 0),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux149,1),ineq(10, movesFrom_00003, 0),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux132,1),ineq(11, movesFrom_00003, 0),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux134,1),ineq(12, movesFrom_00003, 0),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(states_00004_00012,14),ineq(13, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux162,1),ineq(3, movesFrom_00004, 0),ineq(12, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux159,1),ineq(4, movesFrom_00004, 0),ineq(12, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux158,1),ineq(5, movesFrom_00004, 0),ineq(12, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux155,1),ineq(6, movesFrom_00004, 0),ineq(12, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux154,1),ineq(7, movesFrom_00004, 0),ineq(12, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux151,1),ineq(8, movesFrom_00004, 0),ineq(12, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux165,1),ineq(9, movesFrom_00004, 0),ineq(12, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux166,1),ineq(10, movesFrom_00004, 0),ineq(12, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux168,1),ineq(11, movesFrom_00004, 0),ineq(12, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux169,1),ineq(12, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux96,1),ineq(3, movesFrom_00005, 0),ineq(11, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux102,1),ineq(4, movesFrom_00005, 0),ineq(11, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux99,1),ineq(5, movesFrom_00005, 0),ineq(11, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux106,1),ineq(6, movesFrom_00005, 0),ineq(11, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux103,1),ineq(7, movesFrom_00005, 0),ineq(11, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux110,1),ineq(8, movesFrom_00005, 0),ineq(11, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux107,1),ineq(9, movesFrom_00005, 0),ineq(11, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux95,1),ineq(10, movesFrom_00005, 0),ineq(11, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux94,1),ineq(11, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux197,1),ineq(3, movesFrom_00006, 0),ineq(10, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux194,1),ineq(4, movesFrom_00006, 0),ineq(10, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux193,1),ineq(5, movesFrom_00006, 0),ineq(10, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux190,1),ineq(6, movesFrom_00006, 0),ineq(10, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux202,1),ineq(7, movesFrom_00006, 0),ineq(10, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux199,1),ineq(8, movesFrom_00006, 0),ineq(10, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux198,1),ineq(9, movesFrom_00006, 0),ineq(10, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux203,1),ineq(10, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux210,1),ineq(3, movesFrom_00007, 0),ineq(9, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux216,1),ineq(4, movesFrom_00007, 0),ineq(9, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux213,1),ineq(5, movesFrom_00007, 0),ineq(9, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux207,1),ineq(6, movesFrom_00007, 0),ineq(9, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux204,1),ineq(7, movesFrom_00007, 0),ineq(9, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux209,1),ineq(8, movesFrom_00007, 0),ineq(9, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux208,1),ineq(9, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux122,1),ineq(3, movesFrom_00008, 0),ineq(8, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux120,1),ineq(4, movesFrom_00008, 0),ineq(8, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux129,1),ineq(5, movesFrom_00008, 0),ineq(8, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux127,1),ineq(6, movesFrom_00008, 0),ineq(8, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux125,1),ineq(7, movesFrom_00008, 0),ineq(8, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux124,1),ineq(8, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux112,1),ineq(3, movesFrom_00009, 0),ineq(7, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux115,1),ineq(4, movesFrom_00009, 0),ineq(7, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux117,1),ineq(5, movesFrom_00009, 0),ineq(7, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux118,1),ineq(6, movesFrom_00009, 0),ineq(7, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux119,1),ineq(7, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00010),ineq(3, movesFrom_00010, 0),ineq(6, movesFrom_00010, 0),w-literal(aux87,1)})
watched-or({diseq(3,moves_00010),ineq(4, movesFrom_00010, 0),ineq(6, movesFrom_00010, 0),w-literal(aux84,1)})
watched-or({diseq(3,moves_00010),ineq(5, movesFrom_00010, 0),ineq(6, movesFrom_00010, 0),w-literal(aux85,1)})
watched-or({diseq(3,moves_00010),ineq(6, movesFrom_00010, 0),w-literal(aux82,1)})
watched-or({diseq(3,moves_00011),w-literal(aux91,1),ineq(3, movesFrom_00011, 0),ineq(5, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux93,1),ineq(4, movesFrom_00011, 0),ineq(5, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux89,1),ineq(5, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux67,1),ineq(3, movesFrom_00012, 0),ineq(4, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux68,1),ineq(4, movesFrom_00012, 0)})
reifyimply(w-literal(states_00002_00002,29), aux258)
reifyimply(w-literal(states_00002_00003,27), aux259)
reifyimply(w-literal(states_00002_00004,15), aux260)
reifyimply(w-literal(states_00002_00005,23), aux261)
reifyimply(w-literal(states_00002_00006,30), aux262)
reifyimply(w-literal(states_00002_00007,4), aux263)
reifyimply(w-literal(states_00002_00008,45), aux264)
reifyimply(w-literal(states_00002_00009,8), aux265)
reifyimply(w-literal(states_00003_00001,12), aux266)
ineq(aux267, aux188, 0)
ineq(aux268, aux181, 0)
ineq(aux269, aux180, 0)
ineq(aux270, aux177, 0)
ineq(aux271, aux176, 0)
ineq(aux272, aux186, 0)
ineq(aux273, aux185, 0)
ineq(aux274, aux182, 0)
ineq(aux275, aux170, 0)
ineq(aux276, aux172, 0)
reifyimply(gaceq(states_00004_00001,states_00003_00001), aux277)
ineq(aux278, aux135, 0)
ineq(aux279, aux139, 0)
ineq(aux280, aux137, 0)
ineq(aux281, aux143, 0)
ineq(aux282, aux142, 0)
ineq(aux283, aux148, 0)
ineq(aux284, aux146, 0)
ineq(aux285, aux150, 0)
ineq(aux286, aux131, 0)
ineq(aux287, aux133, 0)
reifyimply(gaceq(states_00004_00001,states_00005_00001), aux288)
ineq(aux289, aux163, 0)
ineq(aux290, aux161, 0)
ineq(aux291, aux160, 0)
ineq(aux292, aux157, 0)
ineq(aux293, aux156, 0)
ineq(aux294, aux153, 0)
ineq(aux295, aux152, 0)
ineq(aux296, aux164, 0)
ineq(aux297, aux167, 0)
reifyimply(gaceq(states_00005_00001,states_00006_00001), aux298)
ineq(aux299, aux98, 0)
ineq(aux300, aux97, 0)
ineq(aux301, aux101, 0)
ineq(aux302, aux100, 0)
ineq(aux303, aux105, 0)
ineq(aux304, aux104, 0)
ineq(aux305, aux109, 0)
ineq(aux306, aux108, 0)
reifyimply(gaceq(states_00006_00001,states_00007_00001), aux307)
ineq(aux308, aux189, 0)
ineq(aux309, aux196, 0)
ineq(aux310, aux195, 0)
ineq(aux311, aux192, 0)
ineq(aux312, aux191, 0)
ineq(aux313, aux201, 0)
ineq(aux314, aux200, 0)
reifyimply(gaceq(states_00007_00001,states_00008_00001), aux315)
ineq(aux316, aux212, 0)
ineq(aux317, aux211, 0)
ineq(aux318, aux215, 0)
ineq(aux319, aux214, 0)
ineq(aux320, aux206, 0)
ineq(aux321, aux205, 0)
reifyimply(gaceq(states_00009_00001,states_00008_00001), aux322)
ineq(aux323, aux123, 0)
ineq(aux324, aux121, 0)
ineq(aux325, aux130, 0)
ineq(aux326, aux128, 0)
ineq(aux327, aux126, 0)
reifyimply(gaceq(states_00009_00001,states_00010_00001), aux328)
ineq(aux329, aux111, 0)
ineq(aux330, aux113, 0)
ineq(aux331, aux114, 0)
ineq(aux332, aux116, 0)
reifyimply(gaceq(states_00010_00001,states_00011_00001), aux333)
ineq(aux334, aux86, 0)
ineq(aux335, aux88, 0)
ineq(aux336, aux83, 0)
reifyimply(gaceq(states_00012_00001,states_00011_00001), aux337)
ineq(aux338, aux90, 0)
ineq(aux339, aux92, 0)
reifyimply(gaceq(states_00012_00001,states_00013_00001), aux340)
ineq(aux341, aux66, 0)
reifyimply(gaceq(states_00013_00001,states_00014_00001), aux342)
watchelement([states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010], aux69, aux20)
watchelement([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012], aux77, aux22)
watchelement([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012], aux76, aux18)
watchelement([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011], aux73, aux21)
watchelement([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010], aux72, aux23)
watchelement([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009], aux75, aux26)
watchelement([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008], aux74, aux28)
watchelement([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007], aux71, aux30)
watchelement([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006], aux70, aux32)
watchelement([states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005], aux81, aux35)
watchelement([states_00012_00001, states_00012_00002, states_00012_00003, states_00012_00004], aux80, aux36)
watchelement([states_00013_00001, states_00013_00002, states_00013_00003], aux79, aux38)
watchelement([states_00014_00001, states_00015_00001], aux78, aux41)
watched-or({modulo(aux20,13,aux217),div(aux20, 13, aux218)})
watched-or({div(aux17, 13, aux219),modulo(aux22,13,aux220)})
watched-or({modulo(aux18,13,aux221),div(aux16, 13, aux222)})
watched-or({div(aux19, 13, aux223),modulo(aux19,13,aux224)})
watched-or({div(aux24, 13, aux225),modulo(aux24,13,aux226)})
watched-or({div(aux25, 13, aux227),modulo(aux25,13,aux228)})
watched-or({div(aux28, 13, aux229),modulo(aux28,13,aux230)})
watched-or({modulo(aux31,13,aux231),div(aux30, 13, aux232)})
watched-or({div(aux32, 13, aux233),modulo(aux32,13,aux234)})
watched-or({div(aux34, 13, aux235),modulo(aux34,13,aux236)})
watched-or({modulo(aux37,13,aux237),div(aux36, 13, aux238)})
watched-or({div(aux39, 13, aux239),modulo(aux39,13,aux240)})
watched-or({modulo(aux40,13,aux241),div(aux40, 13, aux242)})
watched-or({div(states_00014_00001, 13, aux243),modulo(states_00014_00001,13,aux244)})
watched-or({w-literal(aux42,1),w-literal(aux45,1)})
watched-or({w-literal(aux43,1),w-literal(aux46,1)})
watched-or({w-literal(aux44,1),w-literal(aux48,1)})
watched-or({w-literal(aux47,1),w-literal(aux51,1)})
watched-or({w-literal(aux49,1),w-literal(aux53,1)})
watched-or({w-literal(aux50,1),w-literal(aux54,1)})
watched-or({w-literal(aux52,1),w-literal(aux56,1)})
watched-or({w-literal(aux55,1),w-literal(aux58,1)})
watched-or({w-literal(aux57,1),w-literal(aux59,1)})
watched-or({w-literal(aux61,1),w-literal(aux63,1)})
watched-or({w-literal(aux60,1),w-literal(aux62,1)})
watched-or({w-literal(aux64,1),w-literal(aux65,1)})
reifyimply(w-literal(moves_00001,1), aux42)
reifyimply(w-literal(moves_00002,1), aux43)
reifyimply(w-literal(moves_00003,1), aux44)
reifyimply(w-literal(moves_00004,1), aux47)
reifyimply(w-literal(moves_00005,1), aux49)
reifyimply(w-literal(moves_00006,1), aux50)
reifyimply(w-literal(moves_00007,1), aux52)
reifyimply(w-literal(moves_00008,1), aux55)
reifyimply(w-literal(moves_00009,1), aux57)
reifyimply(w-literal(moves_00010,1), aux61)
reifyimply(w-literal(moves_00011,1), aux60)
reifyimply(w-literal(moves_00012,1), aux64)
reifyimply(w-literal(moves_00001,3), aux45)
reifyimply(w-literal(moves_00002,3), aux46)
reifyimply(w-literal(moves_00003,3), aux48)
reifyimply(w-literal(moves_00004,3), aux51)
reifyimply(w-literal(moves_00005,3), aux53)
reifyimply(w-literal(moves_00006,3), aux54)
reifyimply(w-literal(moves_00007,3), aux56)
reifyimply(w-literal(moves_00008,3), aux58)
reifyimply(w-literal(moves_00009,3), aux59)
reifyimply(w-literal(moves_00010,3), aux63)
reifyimply(w-literal(moves_00011,3), aux62)
reifyimply(w-literal(moves_00012,3), aux65)
ineq(movesTo_00001, movesFrom_00001, -1)
ineq(movesTo_00002, movesFrom_00002, -1)
ineq(movesTo_00003, movesFrom_00003, -1)
ineq(movesTo_00004, movesFrom_00004, -1)
ineq(movesTo_00005, movesFrom_00005, -1)
ineq(movesTo_00006, movesFrom_00006, -1)
ineq(movesTo_00007, movesFrom_00007, -1)
ineq(movesTo_00008, movesFrom_00008, -1)
ineq(movesTo_00009, movesFrom_00009, -1)
ineq(movesTo_00010, movesFrom_00010, -1)
ineq(movesTo_00011, movesFrom_00011, -1)
ineq(movesTo_00012, movesFrom_00012, -1)
ineq(movesTo_00013, movesFrom_00013, -1)
sumleq([-2,movesFrom_00003],aux245)
sumgeq([-2,movesFrom_00003],aux245)
sumleq([-3,movesFrom_00001],aux246)
sumgeq([-3,movesFrom_00001],aux246)
sumleq([-2,movesFrom_00004],aux247)
sumgeq([-2,movesFrom_00004],aux247)
sumleq([-3,movesFrom_00002],aux248)
sumgeq([-3,movesFrom_00002],aux248)
sumleq([-2,movesFrom_00005],aux249)
sumgeq([-2,movesFrom_00005],aux249)
sumleq([-2,movesFrom_00006],aux250)
sumgeq([-2,movesFrom_00006],aux250)
sumleq([-2,movesFrom_00007],aux251)
sumgeq([-2,movesFrom_00007],aux251)
sumleq([-2,movesFrom_00008],aux252)
sumgeq([-2,movesFrom_00008],aux252)
sumleq([-2,movesFrom_00009],aux253)
sumgeq([-2,movesFrom_00009],aux253)
sumleq([-2,movesFrom_00010],aux254)
sumgeq([-2,movesFrom_00010],aux254)
sumleq([-2,movesFrom_00011],aux255)
sumgeq([-2,movesFrom_00011],aux255)
sumleq([-2,movesFrom_00012],aux256)
sumgeq([-2,movesFrom_00012],aux256)
sumleq([-2,movesFrom_00013],aux257)
sumgeq([-2,movesFrom_00013],aux257)
sumleq([-2,movesTo_00001],aux69)
sumgeq([-2,movesTo_00001],aux69)
sumleq([-1,movesTo_00009],aux70)
sumgeq([-1,movesTo_00009],aux70)
sumleq([-1,movesTo_00008],aux71)
sumgeq([-1,movesTo_00008],aux71)
sumleq([-1,movesTo_00005],aux72)
sumgeq([-1,movesTo_00005],aux72)
sumleq([-1,movesTo_00004],aux73)
sumgeq([-1,movesTo_00004],aux73)
sumleq([-1,movesTo_00007],aux74)
sumgeq([-1,movesTo_00007],aux74)
sumleq([-1,movesTo_00006],aux75)
sumgeq([-1,movesTo_00006],aux75)
sumleq([-1,movesTo_00003],aux76)
sumgeq([-1,movesTo_00003],aux76)
sumleq([-1,movesTo_00002],aux77)
sumgeq([-1,movesTo_00002],aux77)
sumleq([-1,movesTo_00013],aux78)
sumgeq([-1,movesTo_00013],aux78)
sumleq([-1,movesTo_00012],aux79)
sumgeq([-1,movesTo_00012],aux79)
sumleq([-1,movesTo_00011],aux80)
sumgeq([-1,movesTo_00011],aux80)
sumleq([-1,movesTo_00010],aux81)
sumgeq([-1,movesTo_00010],aux81)
sumleq([1,movesTo_00013],movesFrom_00013)
sumgeq([1,movesTo_00013],movesFrom_00013)
**EOF**
