MINION 3
# CSETopLevel_number = 1
# CSETopLevel_eliminated_expressions = 2
# CSETopLevel_total_size = 5
# CSE_active_number = 375
# CSE_active_eliminated_expressions = 768
# CSE_active_total_size = 1677
**VARIABLES**
DISCRETE moves_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00001, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00002 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00002, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00003 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00003, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00004 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00004, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00005 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00005, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00006 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00006, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00007 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00007, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00008 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00008, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00009 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00009, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00010 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00010, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00011 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00011, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00012 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00012, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00013 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00013, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00014 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00014, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00015 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00015, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00016 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00016, [1,1,3,3])
**VARIABLES**
DISCRETE moves_00017 #
{1..3}
**CONSTRAINTS**
w-inintervalset(moves_00017, [1,1,3,3])
**VARIABLES**
DISCRETE movesFrom_00001 #
{3..20}
DISCRETE movesFrom_00002 #
{3..19}
DISCRETE movesFrom_00003 #
{2..18}
DISCRETE movesFrom_00004 #
{2..17}
DISCRETE movesFrom_00005 #
{2..16}
DISCRETE movesFrom_00006 #
{2..15}
DISCRETE movesFrom_00007 #
{2..14}
DISCRETE movesFrom_00008 #
{2..13}
DISCRETE movesFrom_00009 #
{2..12}
DISCRETE movesFrom_00010 #
{2..11}
DISCRETE movesFrom_00011 #
{2..10}
DISCRETE movesFrom_00012 #
{2..9}
DISCRETE movesFrom_00013 #
{2..8}
DISCRETE movesFrom_00014 #
{2..7}
DISCRETE movesFrom_00015 #
{2..6}
DISCRETE movesFrom_00016 #
{2..5}
DISCRETE movesFrom_00017 #
{2..4}
DISCRETE movesFrom_00018 #
{2..3}
DISCRETE movesTo_00001 #
{1..19}
DISCRETE movesTo_00002 #
{1..18}
DISCRETE movesTo_00003 #
{1..17}
DISCRETE movesTo_00004 #
{1..16}
DISCRETE movesTo_00005 #
{1..15}
DISCRETE movesTo_00006 #
{1..14}
DISCRETE movesTo_00007 #
{1..13}
DISCRETE movesTo_00008 #
{1..12}
DISCRETE movesTo_00009 #
{1..11}
DISCRETE movesTo_00010 #
{1..10}
DISCRETE movesTo_00011 #
{1..9}
DISCRETE movesTo_00012 #
{1..8}
DISCRETE movesTo_00013 #
{1..7}
DISCRETE movesTo_00014 #
{1..6}
DISCRETE movesTo_00015 #
{1..5}
DISCRETE movesTo_00016 #
{1..4}
DISCRETE movesTo_00017 #
{1..3}
DISCRETE movesTo_00018 #
{1..2}
DISCRETE states_00002_00001 #
{43..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00001, [43,44,49,49])
**VARIABLES**
DISCRETE states_00002_00002 #
{18..19}
DISCRETE states_00002_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00004 #
{5..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00004, [5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00010 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00010, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00011 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00011, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00012 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00012, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00013 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00013, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00014 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00014, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00015 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00015, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00016 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00016, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00017 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00017, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00018 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00018, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00002_00019 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00002_00019, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00001 #
{43..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00001, [43,44,49,49])
**VARIABLES**
DISCRETE states_00003_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00010 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00010, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00011 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00011, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00012 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00012, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00013 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00013, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00014 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00014, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00015 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00015, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00016 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00016, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00017 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00017, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00003_00018 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00003_00018, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00001 #
{5..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00001, [5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00010 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00010, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00011 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00011, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00012 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00012, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00013 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00013, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00014 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00014, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00015 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00015, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00016 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00016, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00004_00017 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00004_00017, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00010 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00010, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00011 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00011, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00012 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00012, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00013 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00013, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00014 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00014, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00015 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00015, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00005_00016 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00005_00016, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00010 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00010, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00011 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00011, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00012 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00012, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00013 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00013, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00014 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00014, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00006_00015 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00006_00015, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00010 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00010, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00011 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00011, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00012 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00012, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00013 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00013, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00007_00014 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00007_00014, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00010 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00010, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00011 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00011, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00012 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00012, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00008_00013 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00008_00013, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00010 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00010, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00011 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00011, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00009_00012 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00009_00012, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00010 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00010, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00010_00011 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00010_00011, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00011_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00011_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00011_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00011_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00011_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00011_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00011_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00011_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00011_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00011_00010 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00011_00010, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00012_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00012_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00012_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00012_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00012_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00012_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00012_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00012_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00012_00009 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00012_00009, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00013_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00013_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00013_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00013_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00013_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00013_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00013_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00013_00008 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00013_00008, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00014_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00014_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00014_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00014_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00014_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00014_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00014_00007 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00014_00007, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00015_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00015_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00015_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00015_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00015_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00015_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00015_00006, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00016_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00016_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00016_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00016_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00016_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00016_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00016_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00016_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00016_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00016_00005, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00017_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00017_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00017_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00017_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00017_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00017_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00017_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00017_00004, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00018_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00018_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00018_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00018_00002, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00018_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00018_00003, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00019_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00019_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE states_00020_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(states_00020_00001, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: Element([43, 19, 18, 49, 5, 28, 25, 41, 2, 24, 20, 15, 44, 31, 27, 42, 33, 11, 6], (-1 + movesTo_00001))
{2..44}
**CONSTRAINTS**
w-inintervalset(aux16, [2,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44])
**VARIABLES**
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016, states_00002_00017, states_00002_00018], (-1 + movesTo_00002))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux17, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux18 #Active-CSE: 3 occurrences of this expression or equivalent: Element([18, 49, 5, 28, 25, 41, 2, 24, 20, 15, 44, 31, 27, 42, 33, 11, 6, 1], (-3 + movesFrom_00001))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux18, [1,2,5,6,11,11,15,15,18,18,20,20,24,25,27,28,31,31,33,33,41,42,44,44,49,49])
**VARIABLES**
DISCRETE aux19 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016, states_00003_00017, states_00003_00018], (-2 + movesFrom_00003))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux19, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016, states_00003_00017], (-1 + movesTo_00003))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux20, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux21 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016, states_00002_00017, states_00002_00018, states_00002_00019], (-3 + movesFrom_00002))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux21, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015, states_00004_00016], (-1 + movesTo_00004))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux22, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux23 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015, states_00004_00016, states_00004_00017], (-2 + movesFrom_00004))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux23, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014, states_00005_00015], (-1 + movesTo_00005))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux24, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux25 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014, states_00005_00015, states_00005_00016], (-2 + movesFrom_00005))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux25, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013, states_00006_00014], (-1 + movesTo_00006))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux26, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux27 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013, states_00006_00014, states_00006_00015], (-2 + movesFrom_00006))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux27, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012, states_00007_00013], (-1 + movesTo_00007))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux28, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux29 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012, states_00007_00013, states_00007_00014], (-2 + movesFrom_00007))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux29, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011, states_00008_00012], (-1 + movesTo_00008))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux30, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux31 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011, states_00008_00012, states_00008_00013], (-2 + movesFrom_00008))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux31, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux32 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010, states_00009_00011, states_00009_00012], (-2 + movesFrom_00009))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux32, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010, states_00009_00011], (-1 + movesTo_00009))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux33, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009, states_00010_00010, states_00010_00011], (-2 + movesFrom_00010))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux34, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009, states_00010_00010], (-1 + movesTo_00010))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux35, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008, states_00011_00009, states_00011_00010], (-2 + movesFrom_00011))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux36, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008, states_00011_00009], (-1 + movesTo_00011))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux37, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux38 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007, states_00012_00008, states_00012_00009], (-2 + movesFrom_00012))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux38, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00012_00001, states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007, states_00012_00008], (-1 + movesTo_00012))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux39, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux40 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006, states_00013_00007, states_00013_00008], (-2 + movesFrom_00013))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux40, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00013_00001, states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006, states_00013_00007], (-1 + movesTo_00013))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux41, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux42 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005, states_00014_00006, states_00014_00007], (-2 + movesFrom_00014))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux42, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00014_00001, states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005, states_00014_00006], (-1 + movesTo_00014))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux43, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux44 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00015_00002, states_00015_00003, states_00015_00004, states_00015_00005, states_00015_00006], (-2 + movesFrom_00015))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux44, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00015_00001, states_00015_00002, states_00015_00003, states_00015_00004, states_00015_00005], (-1 + movesTo_00015))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux45, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00016_00002, states_00016_00003, states_00016_00004, states_00016_00005], (-2 + movesFrom_00016))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux46, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00016_00001, states_00016_00002, states_00016_00003, states_00016_00004], (-1 + movesTo_00016))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux47, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00017_00001, states_00017_00002, states_00017_00003], (-1 + movesTo_00017))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux48, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux49 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00017_00002, states_00017_00003, states_00017_00004], (-2 + movesFrom_00017))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux49, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux50 #Active-CSE: 3 occurrences of this expression or equivalent: Element([states_00018_00002, states_00018_00003], (-2 + movesFrom_00018))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux50, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00018_00001, states_00018_00002], (-1 + movesTo_00018))
{1..49}
**CONSTRAINTS**
w-inintervalset(aux51, [1,2,5,6,11,11,15,15,18,20,24,25,27,28,31,31,33,33,41,44,49,49])
**VARIABLES**
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00001=(1 + movesTo_00001))
BOOL aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00002=(1 + movesTo_00002))
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00003=(1 + movesTo_00003))
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00001=(3 + movesTo_00001))
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00002=(3 + movesTo_00002))
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00004=(1 + movesTo_00004))
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00003=(3 + movesTo_00003))
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00005=(1 + movesTo_00005))
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00006=(1 + movesTo_00006))
BOOL aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00004=(3 + movesTo_00004))
BOOL aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00007=(1 + movesTo_00007))
BOOL aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00005=(3 + movesTo_00005))
BOOL aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00006=(3 + movesTo_00006))
BOOL aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00008=(1 + movesTo_00008))
BOOL aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00007=(3 + movesTo_00007))
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00009=(1 + movesTo_00009))
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00008=(3 + movesTo_00008))
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00009=(3 + movesTo_00009))
BOOL aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00011=(1 + movesTo_00011))
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00010=(1 + movesTo_00010))
BOOL aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00013=(1 + movesTo_00013))
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00011=(3 + movesTo_00011))
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00010=(3 + movesTo_00010))
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00012=(1 + movesTo_00012))
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00013=(3 + movesTo_00013))
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00015=(1 + movesTo_00015))
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00014=(1 + movesTo_00014))
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00012=(3 + movesTo_00012))
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00017=(1 + movesTo_00017))
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00015=(3 + movesTo_00015))
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00014=(3 + movesTo_00014))
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00016=(1 + movesTo_00016))
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00017=(3 + movesTo_00017))
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (movesFrom_00016=(3 + movesTo_00016))
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00013_00002)
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00013_00002)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00013_00003)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00006=states_00013_00006)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00006=states_00013_00005)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00007=states_00013_00006)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00007=states_00013_00007)
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00004=states_00013_00004)
BOOL aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00004=states_00013_00003)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00005=states_00013_00004)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00005=states_00013_00005)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00008=states_00013_00007)
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00009=states_00013_00008)
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00009)
{0..10}
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00008)
{0..11}
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00005)
{0..14}
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00004)
{0..15}
DISCRETE aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00007)
{0..12}
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00006)
{0..13}
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00001)
{0..18}
**CONSTRAINTS**
w-inintervalset(aux105, [0,2,4,18])
**VARIABLES**
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00003)
{0..16}
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00002)
{0..17}
DISCRETE aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00017)
{0..2}
DISCRETE aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00016)
{0..3}
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00018)
DISCRETE aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00013)
{0..6}
DISCRETE aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00012)
{0..7}
DISCRETE aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00015)
{0..4}
DISCRETE aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00014)
{0..5}
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00011)
{0..8}
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (-1 + movesTo_00010)
{0..9}
BOOL aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00008=states_00011_00008)
BOOL aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00008=states_00011_00007)
BOOL aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00009=states_00011_00008)
BOOL aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00009=states_00011_00009)
BOOL aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00006=states_00011_00006)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00006=states_00011_00005)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00007=states_00011_00006)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00007=states_00011_00007)
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00004=states_00011_00004)
BOOL aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00004=states_00011_00003)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00005=states_00011_00004)
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00005=states_00011_00005)
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00002=states_00011_00002)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00003=states_00011_00002)
BOOL aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00003=states_00011_00003)
BOOL aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00011=states_00011_00010)
BOOL aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00010_00010=states_00011_00009)
BOOL aux134 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00004=states_00011_00004)
BOOL aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00004=states_00011_00005)
BOOL aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00005=states_00011_00005)
BOOL aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00005=states_00011_00006)
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00006=states_00011_00006)
BOOL aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00006=states_00011_00007)
BOOL aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00007=states_00011_00007)
BOOL aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00007=states_00011_00008)
BOOL aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00011_00002)
BOOL aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00002=states_00011_00003)
BOOL aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00011_00003)
BOOL aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00003=states_00011_00004)
BOOL aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00008=states_00011_00008)
BOOL aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00008=states_00011_00009)
BOOL aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00012_00009=states_00011_00010)
BOOL aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00002=states_00016_00002)
BOOL aux150 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00002=states_00016_00003)
BOOL aux151 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00003=states_00016_00003)
BOOL aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00003=states_00016_00004)
BOOL aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00004=states_00016_00005)
BOOL aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00006=states_00015_00005)
BOOL aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00007=states_00015_00006)
BOOL aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00004=states_00015_00004)
BOOL aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00004=states_00015_00003)
BOOL aux158 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00005=states_00015_00004)
BOOL aux159 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00005=states_00015_00005)
BOOL aux160 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00002=states_00015_00002)
BOOL aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00003=states_00015_00002)
BOOL aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00014_00003=states_00015_00003)
BOOL aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00003=states_00018_00002)
BOOL aux164 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00004=states_00018_00003)
BOOL aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00017_00002=states_00018_00002)
BOOL aux166 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00013=states_00006_00013)
BOOL aux167 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00013=states_00006_00012)
BOOL aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00014=states_00006_00013)
BOOL aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00014=states_00006_00014)
BOOL aux170 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00011=states_00006_00011)
BOOL aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00011=states_00006_00010)
BOOL aux172 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00012=states_00006_00011)
BOOL aux173 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00012=states_00006_00012)
BOOL aux174 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00015=states_00006_00014)
BOOL aux175 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00016=states_00006_00015)
BOOL aux176 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00010=states_00006_00009)
BOOL aux177 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00010=states_00006_00010)
BOOL aux178 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00003=states_00006_00002)
BOOL aux179 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00003=states_00006_00003)
BOOL aux180 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00002=states_00006_00002)
BOOL aux181 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00005=states_00006_00004)
BOOL aux182 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00005=states_00006_00005)
BOOL aux183 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00004=states_00006_00004)
BOOL aux184 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00004=states_00006_00003)
BOOL aux185 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00007=states_00006_00006)
BOOL aux186 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00007=states_00006_00007)
BOOL aux187 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00006=states_00006_00006)
BOOL aux188 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00006=states_00006_00005)
BOOL aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00009=states_00006_00008)
BOOL aux190 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00009=states_00006_00009)
BOOL aux191 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00008=states_00006_00008)
BOOL aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00005_00008=states_00006_00007)
BOOL aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00010_00002)
BOOL aux194 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00010_00002)
BOOL aux195 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00010_00003)
BOOL aux196 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00010_00004)
BOOL aux197 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00010_00003)
BOOL aux198 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00010_00005)
BOOL aux199 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00010_00004)
BOOL aux200 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00010_00006)
BOOL aux201 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00010_00005)
BOOL aux202 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00007=states_00010_00006)
BOOL aux203 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00007=states_00010_00007)
BOOL aux204 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00008=states_00010_00008)
BOOL aux205 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00008=states_00010_00007)
BOOL aux206 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00009=states_00010_00009)
BOOL aux207 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00009=states_00010_00008)
BOOL aux208 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00010=states_00010_00009)
BOOL aux209 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00010=states_00010_00010)
BOOL aux210 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00012=states_00010_00011)
BOOL aux211 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00011=states_00010_00010)
BOOL aux212 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00007=states_00014_00006)
BOOL aux213 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00008=states_00014_00007)
BOOL aux214 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00003=states_00014_00003)
BOOL aux215 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00003=states_00014_00002)
BOOL aux216 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00004=states_00014_00003)
BOOL aux217 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00004=states_00014_00004)
BOOL aux218 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00005=states_00014_00005)
BOOL aux219 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00005=states_00014_00004)
BOOL aux220 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00006=states_00014_00005)
BOOL aux221 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00006=states_00014_00006)
BOOL aux222 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00013_00002=states_00014_00002)
BOOL aux223 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00010=states_00008_00010)
BOOL aux224 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00010=states_00008_00011)
BOOL aux225 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00011=states_00008_00011)
BOOL aux226 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00011=states_00008_00012)
BOOL aux227 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00012=states_00008_00013)
BOOL aux228 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00008=states_00008_00009)
BOOL aux229 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00008=states_00008_00008)
BOOL aux230 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00009=states_00008_00009)
BOOL aux231 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00009=states_00008_00010)
BOOL aux232 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00008_00004)
BOOL aux233 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00003=states_00008_00003)
BOOL aux234 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00008_00003)
BOOL aux235 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00002=states_00008_00002)
BOOL aux236 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00007=states_00008_00008)
BOOL aux237 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00007=states_00008_00007)
BOOL aux238 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00008_00007)
BOOL aux239 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00006=states_00008_00006)
BOOL aux240 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00008_00006)
BOOL aux241 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00005=states_00008_00005)
BOOL aux242 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00008_00005)
BOOL aux243 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00009_00004=states_00008_00004)
BOOL aux244 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00003_00010)
BOOL aux245 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00003_00011)
BOOL aux246 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00003_00011)
BOOL aux247 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00003_00012)
BOOL aux248 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00014=states_00003_00014)
BOOL aux249 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00014=states_00003_00015)
BOOL aux250 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00015=states_00003_00015)
BOOL aux251 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00015=states_00003_00016)
BOOL aux252 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00012=states_00003_00012)
BOOL aux253 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00012=states_00003_00013)
BOOL aux254 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00013=states_00003_00013)
BOOL aux255 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00013=states_00003_00014)
BOOL aux256 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00016=states_00003_00016)
BOOL aux257 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00016=states_00003_00017)
BOOL aux258 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00017=states_00003_00018)
BOOL aux259 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00003_00002)
BOOL aux260 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00003_00003)
BOOL aux261 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00003_00004)
BOOL aux262 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00003_00005)
BOOL aux263 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00003_00003)
BOOL aux264 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00003_00004)
BOOL aux265 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00003_00007)
BOOL aux266 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00003_00006)
BOOL aux267 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00003_00005)
BOOL aux268 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00003_00006)
BOOL aux269 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00003_00009)
BOOL aux270 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00003_00008)
BOOL aux271 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00003_00008)
BOOL aux272 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00003_00007)
BOOL aux273 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00003_00010)
BOOL aux274 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00003_00009)
BOOL aux275 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00005_00007)
BOOL aux276 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00008=states_00005_00008)
BOOL aux277 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00005_00007)
BOOL aux278 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00007=states_00005_00006)
BOOL aux279 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00005_00005)
BOOL aux280 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00006=states_00005_00006)
BOOL aux281 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00005_00005)
BOOL aux282 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00005=states_00005_00004)
BOOL aux283 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00005_00003)
BOOL aux284 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00004=states_00005_00004)
BOOL aux285 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00005_00003)
BOOL aux286 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00003=states_00005_00002)
BOOL aux287 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00002=states_00005_00002)
BOOL aux288 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00005_00009)
BOOL aux289 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00009=states_00005_00008)
BOOL aux290 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00005_00009)
BOOL aux291 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00010=states_00005_00010)
BOOL aux292 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00005_00010)
BOOL aux293 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00011=states_00005_00011)
BOOL aux294 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00012=states_00005_00012)
BOOL aux295 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00012=states_00005_00011)
BOOL aux296 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00013=states_00005_00012)
BOOL aux297 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00013=states_00005_00013)
BOOL aux298 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00014=states_00005_00014)
BOOL aux299 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00014=states_00005_00013)
BOOL aux300 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00015=states_00005_00014)
BOOL aux301 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00015=states_00005_00015)
BOOL aux302 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00016=states_00005_00015)
BOOL aux303 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00004_00017=states_00005_00016)
BOOL aux304 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00018=states_00003_00017)
BOOL aux305 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00019=states_00003_00018)
BOOL aux306 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00014=states_00003_00014)
BOOL aux307 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00014=states_00003_00013)
BOOL aux308 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00015=states_00003_00014)
BOOL aux309 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00015=states_00003_00015)
BOOL aux310 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00016=states_00003_00016)
BOOL aux311 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00016=states_00003_00015)
BOOL aux312 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00017=states_00003_00016)
BOOL aux313 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00017=states_00003_00017)
BOOL aux314 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00010=states_00003_00010)
BOOL aux315 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00011=states_00003_00010)
BOOL aux316 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00011=states_00003_00011)
BOOL aux317 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00012=states_00003_00012)
BOOL aux318 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00012=states_00003_00011)
BOOL aux319 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00013=states_00003_00012)
BOOL aux320 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00013=states_00003_00013)
BOOL aux321 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00010=states_00003_00009)
BOOL aux322 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00006=states_00003_00005)
BOOL aux323 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00006=states_00003_00006)
BOOL aux324 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00005=states_00003_00005)
BOOL aux325 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00005=states_00003_00004)
BOOL aux326 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00004=states_00003_00003)
BOOL aux327 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00004=states_00003_00004)
BOOL aux328 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00003=states_00003_00003)
BOOL aux329 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00009=states_00003_00009)
BOOL aux330 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00009=states_00003_00008)
BOOL aux331 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00008=states_00003_00007)
BOOL aux332 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00008=states_00003_00008)
BOOL aux333 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00007=states_00003_00007)
BOOL aux334 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00007=states_00003_00006)
BOOL aux335 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00002_00002=states_00003_00002)
BOOL aux336 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00002=states_00007_00002)
BOOL aux337 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00006=states_00007_00005)
BOOL aux338 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00006=states_00007_00006)
BOOL aux339 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00005=states_00007_00005)
BOOL aux340 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00005=states_00007_00004)
BOOL aux341 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00004=states_00007_00003)
BOOL aux342 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00004=states_00007_00004)
BOOL aux343 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00003=states_00007_00003)
BOOL aux344 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00003=states_00007_00002)
BOOL aux345 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00009=states_00007_00009)
BOOL aux346 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00009=states_00007_00008)
BOOL aux347 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00008=states_00007_00007)
BOOL aux348 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00008=states_00007_00008)
BOOL aux349 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00007=states_00007_00007)
BOOL aux350 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00007=states_00007_00006)
BOOL aux351 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00010=states_00007_00009)
BOOL aux352 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00014=states_00007_00013)
BOOL aux353 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00015=states_00007_00014)
BOOL aux354 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00010=states_00007_00010)
BOOL aux355 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00011=states_00007_00010)
BOOL aux356 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00011=states_00007_00011)
BOOL aux357 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00012=states_00007_00012)
BOOL aux358 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00012=states_00007_00011)
BOOL aux359 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00013=states_00007_00012)
BOOL aux360 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00006_00013=states_00007_00013)
BOOL aux361 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00007=states_00008_00006)
BOOL aux362 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00007=states_00008_00007)
BOOL aux363 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00006=states_00008_00006)
BOOL aux364 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00006=states_00008_00005)
BOOL aux365 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00009=states_00008_00008)
BOOL aux366 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00009=states_00008_00009)
BOOL aux367 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00008=states_00008_00008)
BOOL aux368 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00008=states_00008_00007)
BOOL aux369 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00003=states_00008_00002)
BOOL aux370 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00003=states_00008_00003)
BOOL aux371 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00002=states_00008_00002)
BOOL aux372 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00005=states_00008_00004)
BOOL aux373 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00005=states_00008_00005)
BOOL aux374 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00004=states_00008_00004)
BOOL aux375 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00004=states_00008_00003)
BOOL aux376 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00013=states_00008_00012)
BOOL aux377 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00014=states_00008_00013)
BOOL aux378 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00011=states_00008_00011)
BOOL aux379 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00011=states_00008_00010)
BOOL aux380 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00012=states_00008_00011)
BOOL aux381 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00012=states_00008_00012)
BOOL aux382 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00010=states_00008_00009)
BOOL aux383 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00007_00010=states_00008_00010)
BOOL aux384 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00002=states_00016_00002)
BOOL aux385 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00003=states_00016_00003)
BOOL aux386 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00003=states_00016_00002)
BOOL aux387 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00004=states_00016_00003)
BOOL aux388 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00004=states_00016_00004)
BOOL aux389 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00005=states_00016_00004)
BOOL aux390 #Active-CSE: 2 occurrences of this expression or equivalent: (states_00015_00006=states_00016_00005)
DISCRETE aux391 #
{0..3}
DISCRETE aux392 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux392, [1,3,5,7,10,12])
**VARIABLES**
DISCRETE aux393 #
{0..3}
DISCRETE aux394 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux394, [1,7,10,12])
**VARIABLES**
DISCRETE aux395 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux395, [1,7,10,12])
**VARIABLES**
DISCRETE aux396 #
{0..3}
DISCRETE aux397 #
{0..3}
DISCRETE aux398 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux398, [1,7,10,12])
**VARIABLES**
DISCRETE aux399 #
{0..3}
DISCRETE aux400 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux400, [1,7,10,12])
**VARIABLES**
DISCRETE aux401 #
{0..3}
DISCRETE aux402 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux402, [1,7,10,12])
**VARIABLES**
DISCRETE aux403 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux403, [1,7,10,12])
**VARIABLES**
DISCRETE aux404 #
{0..3}
DISCRETE aux405 #
{0..3}
DISCRETE aux406 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux406, [1,7,10,12])
**VARIABLES**
DISCRETE aux407 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux407, [1,7,10,12])
**VARIABLES**
DISCRETE aux408 #
{0..3}
DISCRETE aux409 #
{0..3}
DISCRETE aux410 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux410, [1,7,10,12])
**VARIABLES**
DISCRETE aux411 #
{0..3}
DISCRETE aux412 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux412, [1,7,10,12])
**VARIABLES**
DISCRETE aux413 #
{0..3}
DISCRETE aux414 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux414, [1,7,10,12])
**VARIABLES**
DISCRETE aux415 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux415, [1,7,10,12])
**VARIABLES**
DISCRETE aux416 #
{0..3}
DISCRETE aux417 #
{0..3}
DISCRETE aux418 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux418, [1,7,10,12])
**VARIABLES**
DISCRETE aux419 #
{0..3}
DISCRETE aux420 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux420, [1,7,10,12])
**VARIABLES**
DISCRETE aux421 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux421, [1,7,10,12])
**VARIABLES**
DISCRETE aux422 #
{0..3}
DISCRETE aux423 #
{0..3}
DISCRETE aux424 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux424, [1,7,10,12])
**VARIABLES**
DISCRETE aux425 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux425, [1,7,10,12])
**VARIABLES**
DISCRETE aux426 #
{0..3}
DISCRETE aux427 #
{0..3}
DISCRETE aux428 #
{1..12}
**CONSTRAINTS**
w-inintervalset(aux428, [1,7,10,12])
**VARIABLES**
DISCRETE aux429 #(-3 + movesFrom_00001)
{0..17}
DISCRETE aux430 #(-2 + movesFrom_00003)
{0..16}
DISCRETE aux431 #(-3 + movesFrom_00002)
{0..16}
DISCRETE aux432 #(-2 + movesFrom_00004)
{0..15}
DISCRETE aux433 #(-2 + movesFrom_00005)
{0..14}
DISCRETE aux434 #(-2 + movesFrom_00006)
{0..13}
DISCRETE aux435 #(-2 + movesFrom_00007)
{0..12}
DISCRETE aux436 #(-2 + movesFrom_00008)
{0..11}
DISCRETE aux437 #(-2 + movesFrom_00009)
{0..10}
DISCRETE aux438 #(-2 + movesFrom_00010)
{0..9}
DISCRETE aux439 #(-2 + movesFrom_00011)
{0..8}
DISCRETE aux440 #(-2 + movesFrom_00012)
{0..7}
DISCRETE aux441 #(-2 + movesFrom_00013)
{0..6}
DISCRETE aux442 #(-2 + movesFrom_00014)
{0..5}
DISCRETE aux443 #(-2 + movesFrom_00015)
{0..4}
DISCRETE aux444 #(-2 + movesFrom_00016)
{0..3}
DISCRETE aux445 #(-2 + movesFrom_00017)
{0..2}
BOOL aux446 #(-2 + movesFrom_00018)
BOOL aux447 #(1<movesTo_00001)
BOOL aux448 #(2<movesTo_00001)
BOOL aux449 #(3<movesTo_00001)
BOOL aux450 #(4<movesTo_00001)
BOOL aux451 #(5<movesTo_00001)
BOOL aux452 #(6<movesTo_00001)
BOOL aux453 #(7<movesTo_00001)
BOOL aux454 #(8<movesTo_00001)
BOOL aux455 #(9<movesTo_00001)
BOOL aux456 #(10<movesTo_00001)
BOOL aux457 #(11<movesTo_00001)
BOOL aux458 #(12<movesTo_00001)
BOOL aux459 #(13<movesTo_00001)
BOOL aux460 #(14<movesTo_00001)
BOOL aux461 #(15<movesTo_00001)
BOOL aux462 #(16<movesTo_00001)
BOOL aux463 #(17<movesTo_00001)
BOOL aux464 #(18<movesTo_00001)
BOOL aux465 #(1<movesTo_00002)
BOOL aux466 #(2<movesTo_00002)
BOOL aux467 #(3<movesTo_00002)
BOOL aux468 #(4<movesTo_00002)
BOOL aux469 #(5<movesTo_00002)
BOOL aux470 #(6<movesTo_00002)
BOOL aux471 #(7<movesTo_00002)
BOOL aux472 #(8<movesTo_00002)
BOOL aux473 #(9<movesTo_00002)
BOOL aux474 #(10<movesTo_00002)
BOOL aux475 #(11<movesTo_00002)
BOOL aux476 #(12<movesTo_00002)
BOOL aux477 #(13<movesTo_00002)
BOOL aux478 #(14<movesTo_00002)
BOOL aux479 #(15<movesTo_00002)
BOOL aux480 #(16<movesTo_00002)
BOOL aux481 #(17<movesTo_00002)
BOOL aux482 #(1<movesTo_00003)
BOOL aux483 #(2<movesTo_00003)
BOOL aux484 #(3<movesTo_00003)
BOOL aux485 #(4<movesTo_00003)
BOOL aux486 #(5<movesTo_00003)
BOOL aux487 #(6<movesTo_00003)
BOOL aux488 #(7<movesTo_00003)
BOOL aux489 #(8<movesTo_00003)
BOOL aux490 #(9<movesTo_00003)
BOOL aux491 #(10<movesTo_00003)
BOOL aux492 #(11<movesTo_00003)
BOOL aux493 #(12<movesTo_00003)
BOOL aux494 #(13<movesTo_00003)
BOOL aux495 #(14<movesTo_00003)
BOOL aux496 #(15<movesTo_00003)
BOOL aux497 #(16<movesTo_00003)
BOOL aux498 #(1<movesTo_00004)
BOOL aux499 #(2<movesTo_00004)
BOOL aux500 #(3<movesTo_00004)
BOOL aux501 #(4<movesTo_00004)
BOOL aux502 #(5<movesTo_00004)
BOOL aux503 #(6<movesTo_00004)
BOOL aux504 #(7<movesTo_00004)
BOOL aux505 #(8<movesTo_00004)
BOOL aux506 #(9<movesTo_00004)
BOOL aux507 #(10<movesTo_00004)
BOOL aux508 #(11<movesTo_00004)
BOOL aux509 #(12<movesTo_00004)
BOOL aux510 #(13<movesTo_00004)
BOOL aux511 #(14<movesTo_00004)
BOOL aux512 #(15<movesTo_00004)
BOOL aux513 #(1<movesTo_00005)
BOOL aux514 #(2<movesTo_00005)
BOOL aux515 #(3<movesTo_00005)
BOOL aux516 #(4<movesTo_00005)
BOOL aux517 #(5<movesTo_00005)
BOOL aux518 #(6<movesTo_00005)
BOOL aux519 #(7<movesTo_00005)
BOOL aux520 #(8<movesTo_00005)
BOOL aux521 #(9<movesTo_00005)
BOOL aux522 #(10<movesTo_00005)
BOOL aux523 #(11<movesTo_00005)
BOOL aux524 #(12<movesTo_00005)
BOOL aux525 #(13<movesTo_00005)
BOOL aux526 #(14<movesTo_00005)
BOOL aux527 #(1<movesTo_00006)
BOOL aux528 #(2<movesTo_00006)
BOOL aux529 #(3<movesTo_00006)
BOOL aux530 #(4<movesTo_00006)
BOOL aux531 #(5<movesTo_00006)
BOOL aux532 #(6<movesTo_00006)
BOOL aux533 #(7<movesTo_00006)
BOOL aux534 #(8<movesTo_00006)
BOOL aux535 #(9<movesTo_00006)
BOOL aux536 #(10<movesTo_00006)
BOOL aux537 #(11<movesTo_00006)
BOOL aux538 #(12<movesTo_00006)
BOOL aux539 #(13<movesTo_00006)
BOOL aux540 #(1<movesTo_00007)
BOOL aux541 #(2<movesTo_00007)
BOOL aux542 #(3<movesTo_00007)
BOOL aux543 #(4<movesTo_00007)
BOOL aux544 #(5<movesTo_00007)
BOOL aux545 #(6<movesTo_00007)
BOOL aux546 #(7<movesTo_00007)
BOOL aux547 #(8<movesTo_00007)
BOOL aux548 #(9<movesTo_00007)
BOOL aux549 #(10<movesTo_00007)
BOOL aux550 #(11<movesTo_00007)
BOOL aux551 #(12<movesTo_00007)
BOOL aux552 #(1<movesTo_00008)
BOOL aux553 #(2<movesTo_00008)
BOOL aux554 #(3<movesTo_00008)
BOOL aux555 #(4<movesTo_00008)
BOOL aux556 #(5<movesTo_00008)
BOOL aux557 #(6<movesTo_00008)
BOOL aux558 #(7<movesTo_00008)
BOOL aux559 #(8<movesTo_00008)
BOOL aux560 #(9<movesTo_00008)
BOOL aux561 #(10<movesTo_00008)
BOOL aux562 #(11<movesTo_00008)
BOOL aux563 #(1<movesTo_00009)
BOOL aux564 #(2<movesTo_00009)
BOOL aux565 #(3<movesTo_00009)
BOOL aux566 #(4<movesTo_00009)
BOOL aux567 #(5<movesTo_00009)
BOOL aux568 #(6<movesTo_00009)
BOOL aux569 #(7<movesTo_00009)
BOOL aux570 #(8<movesTo_00009)
BOOL aux571 #(9<movesTo_00009)
BOOL aux572 #(10<movesTo_00009)
BOOL aux573 #(1<movesTo_00010)
BOOL aux574 #(2<movesTo_00010)
BOOL aux575 #(3<movesTo_00010)
BOOL aux576 #(4<movesTo_00010)
BOOL aux577 #(5<movesTo_00010)
BOOL aux578 #(6<movesTo_00010)
BOOL aux579 #(7<movesTo_00010)
BOOL aux580 #(8<movesTo_00010)
BOOL aux581 #(9<movesTo_00010)
BOOL aux582 #(1<movesTo_00011)
BOOL aux583 #(2<movesTo_00011)
BOOL aux584 #(3<movesTo_00011)
BOOL aux585 #(4<movesTo_00011)
BOOL aux586 #(5<movesTo_00011)
BOOL aux587 #(6<movesTo_00011)
BOOL aux588 #(7<movesTo_00011)
BOOL aux589 #(8<movesTo_00011)
BOOL aux590 #(1<movesTo_00012)
BOOL aux591 #(2<movesTo_00012)
BOOL aux592 #(3<movesTo_00012)
BOOL aux593 #(4<movesTo_00012)
BOOL aux594 #(5<movesTo_00012)
BOOL aux595 #(6<movesTo_00012)
BOOL aux596 #(7<movesTo_00012)
BOOL aux597 #(1<movesTo_00013)
BOOL aux598 #(2<movesTo_00013)
BOOL aux599 #(3<movesTo_00013)
BOOL aux600 #(4<movesTo_00013)
BOOL aux601 #(5<movesTo_00013)
BOOL aux602 #(6<movesTo_00013)
BOOL aux603 #(1<movesTo_00014)
BOOL aux604 #(2<movesTo_00014)
BOOL aux605 #(3<movesTo_00014)
BOOL aux606 #(4<movesTo_00014)
BOOL aux607 #(5<movesTo_00014)
BOOL aux608 #(1<movesTo_00015)
BOOL aux609 #(2<movesTo_00015)
BOOL aux610 #(3<movesTo_00015)
BOOL aux611 #(4<movesTo_00015)
BOOL aux612 #(1<movesTo_00016)
BOOL aux613 #(2<movesTo_00016)
BOOL aux614 #(3<movesTo_00016)
BOOL aux615 #(1<movesTo_00017)
BOOL aux616 #(2<movesTo_00017)
BOOL aux617 #(1<movesTo_00018)
**VARIABLES**
ALIAS cards[20]=[43, 19, 18, 49, 5, 28, 25, 41, 2, 24, 20, 15, 44, 31, 27, 42, 33, 11, 6, 1]
**SEARCH**
PRINT[[moves_00001],[moves_00002],[moves_00003],[moves_00004],[moves_00005],[moves_00006],[moves_00007],[moves_00008],[moves_00009],[moves_00010],[moves_00011],[moves_00012],[moves_00013],[moves_00014],[moves_00015],[moves_00016],[moves_00017],[movesFrom_00001],[movesFrom_00002],[movesFrom_00003],[movesFrom_00004],[movesFrom_00005],[movesFrom_00006],[movesFrom_00007],[movesFrom_00008],[movesFrom_00009],[movesFrom_00010],[movesFrom_00011],[movesFrom_00012],[movesFrom_00013],[movesFrom_00014],[movesFrom_00015],[movesFrom_00016],[movesFrom_00017],[movesFrom_00018],[movesTo_00001],[movesTo_00002],[movesTo_00003],[movesTo_00004],[movesTo_00005],[movesTo_00006],[movesTo_00007],[movesTo_00008],[movesTo_00009],[movesTo_00010],[movesTo_00011],[movesTo_00012],[movesTo_00013],[movesTo_00014],[movesTo_00015],[movesTo_00016],[movesTo_00017],[movesTo_00018],[states_00002_00001],[states_00002_00002],[states_00002_00003],[states_00002_00004],[states_00002_00005],[states_00002_00006],[states_00002_00007],[states_00002_00008],[states_00002_00009],[states_00002_00010],[states_00002_00011],[states_00002_00012],[states_00002_00013],[states_00002_00014],[states_00002_00015],[states_00002_00016],[states_00002_00017],[states_00002_00018],[states_00002_00019],[states_00003_00001],[states_00003_00002],[states_00003_00003],[states_00003_00004],[states_00003_00005],[states_00003_00006],[states_00003_00007],[states_00003_00008],[states_00003_00009],[states_00003_00010],[states_00003_00011],[states_00003_00012],[states_00003_00013],[states_00003_00014],[states_00003_00015],[states_00003_00016],[states_00003_00017],[states_00003_00018],[states_00004_00001],[states_00004_00002],[states_00004_00003],[states_00004_00004],[states_00004_00005],[states_00004_00006],[states_00004_00007],[states_00004_00008],[states_00004_00009],[states_00004_00010],[states_00004_00011],[states_00004_00012],[states_00004_00013],[states_00004_00014],[states_00004_00015],[states_00004_00016],[states_00004_00017],[states_00005_00001],[states_00005_00002],[states_00005_00003],[states_00005_00004],[states_00005_00005],[states_00005_00006],[states_00005_00007],[states_00005_00008],[states_00005_00009],[states_00005_00010],[states_00005_00011],[states_00005_00012],[states_00005_00013],[states_00005_00014],[states_00005_00015],[states_00005_00016],[states_00006_00001],[states_00006_00002],[states_00006_00003],[states_00006_00004],[states_00006_00005],[states_00006_00006],[states_00006_00007],[states_00006_00008],[states_00006_00009],[states_00006_00010],[states_00006_00011],[states_00006_00012],[states_00006_00013],[states_00006_00014],[states_00006_00015],[states_00007_00001],[states_00007_00002],[states_00007_00003],[states_00007_00004],[states_00007_00005],[states_00007_00006],[states_00007_00007],[states_00007_00008],[states_00007_00009],[states_00007_00010],[states_00007_00011],[states_00007_00012],[states_00007_00013],[states_00007_00014],[states_00008_00001],[states_00008_00002],[states_00008_00003],[states_00008_00004],[states_00008_00005],[states_00008_00006],[states_00008_00007],[states_00008_00008],[states_00008_00009],[states_00008_00010],[states_00008_00011],[states_00008_00012],[states_00008_00013],[states_00009_00001],[states_00009_00002],[states_00009_00003],[states_00009_00004],[states_00009_00005],[states_00009_00006],[states_00009_00007],[states_00009_00008],[states_00009_00009],[states_00009_00010],[states_00009_00011],[states_00009_00012],[states_00010_00001],[states_00010_00002],[states_00010_00003],[states_00010_00004],[states_00010_00005],[states_00010_00006],[states_00010_00007],[states_00010_00008],[states_00010_00009],[states_00010_00010],[states_00010_00011],[states_00011_00001],[states_00011_00002],[states_00011_00003],[states_00011_00004],[states_00011_00005],[states_00011_00006],[states_00011_00007],[states_00011_00008],[states_00011_00009],[states_00011_00010],[states_00012_00001],[states_00012_00002],[states_00012_00003],[states_00012_00004],[states_00012_00005],[states_00012_00006],[states_00012_00007],[states_00012_00008],[states_00012_00009],[states_00013_00001],[states_00013_00002],[states_00013_00003],[states_00013_00004],[states_00013_00005],[states_00013_00006],[states_00013_00007],[states_00013_00008],[states_00014_00001],[states_00014_00002],[states_00014_00003],[states_00014_00004],[states_00014_00005],[states_00014_00006],[states_00014_00007],[states_00015_00001],[states_00015_00002],[states_00015_00003],[states_00015_00004],[states_00015_00005],[states_00015_00006],[states_00016_00001],[states_00016_00002],[states_00016_00003],[states_00016_00004],[states_00016_00005],[states_00017_00001],[states_00017_00002],[states_00017_00003],[states_00017_00004],[states_00018_00001],[states_00018_00002],[states_00018_00003],[states_00019_00001],[states_00020_00001]]
VARORDER STATIC [moves_00001, moves_00002, moves_00003, moves_00004, moves_00005, moves_00006, moves_00007, moves_00008, moves_00009, moves_00010, moves_00011, moves_00012, moves_00013, moves_00014, moves_00015, moves_00016, moves_00017, movesFrom_00001, movesFrom_00002, movesFrom_00003, movesFrom_00004, movesFrom_00005, movesFrom_00006, movesFrom_00007, movesFrom_00008, movesFrom_00009, movesFrom_00010, movesFrom_00011, movesFrom_00012, movesFrom_00013, movesFrom_00014, movesFrom_00015, movesFrom_00016, movesFrom_00017, movesFrom_00018, movesTo_00001, movesTo_00002, movesTo_00003, movesTo_00004, movesTo_00005, movesTo_00006, movesTo_00007, movesTo_00008, movesTo_00009, movesTo_00010, movesTo_00011, movesTo_00012, movesTo_00013, movesTo_00014, movesTo_00015, movesTo_00016, movesTo_00017, movesTo_00018, states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016, states_00002_00017, states_00002_00018, states_00002_00019, states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016, states_00003_00017, states_00003_00018, states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015, states_00004_00016, states_00004_00017, states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014, states_00005_00015, states_00005_00016, states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013, states_00006_00014, states_00006_00015, states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012, states_00007_00013, states_00007_00014, states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011, states_00008_00012, states_00008_00013, states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010, states_00009_00011, states_00009_00012, states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009, states_00010_00010, states_00010_00011, states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008, states_00011_00009, states_00011_00010, states_00012_00001, states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007, states_00012_00008, states_00012_00009, states_00013_00001, states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006, states_00013_00007, states_00013_00008, states_00014_00001, states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005, states_00014_00006, states_00014_00007, states_00015_00001, states_00015_00002, states_00015_00003, states_00015_00004, states_00015_00005, states_00015_00006, states_00016_00001, states_00016_00002, states_00016_00003, states_00016_00004, states_00016_00005, states_00017_00001, states_00017_00002, states_00017_00003, states_00017_00004, states_00018_00001, states_00018_00002, states_00018_00003, states_00019_00001, states_00020_00001]
**CONSTRAINTS**
reify(ineq(1, movesTo_00001, -1), aux447)
reify(ineq(2, movesTo_00001, -1), aux448)
reify(ineq(3, movesTo_00001, -1), aux449)
reify(ineq(4, movesTo_00001, -1), aux450)
reify(ineq(5, movesTo_00001, -1), aux451)
reify(ineq(6, movesTo_00001, -1), aux452)
reify(ineq(7, movesTo_00001, -1), aux453)
reify(ineq(8, movesTo_00001, -1), aux454)
reify(ineq(9, movesTo_00001, -1), aux455)
reify(ineq(10, movesTo_00001, -1), aux456)
reify(ineq(11, movesTo_00001, -1), aux457)
reify(ineq(12, movesTo_00001, -1), aux458)
reify(ineq(13, movesTo_00001, -1), aux459)
reify(ineq(14, movesTo_00001, -1), aux460)
reify(ineq(15, movesTo_00001, -1), aux461)
reify(ineq(16, movesTo_00001, -1), aux462)
reify(ineq(17, movesTo_00001, -1), aux463)
reify(ineq(18, movesTo_00001, -1), aux464)
reify(ineq(1, movesTo_00002, -1), aux465)
reify(ineq(2, movesTo_00002, -1), aux466)
reify(ineq(3, movesTo_00002, -1), aux467)
reify(ineq(4, movesTo_00002, -1), aux468)
reify(ineq(5, movesTo_00002, -1), aux469)
reify(ineq(6, movesTo_00002, -1), aux470)
reify(ineq(7, movesTo_00002, -1), aux471)
reify(ineq(8, movesTo_00002, -1), aux472)
reify(ineq(9, movesTo_00002, -1), aux473)
reify(ineq(10, movesTo_00002, -1), aux474)
reify(ineq(11, movesTo_00002, -1), aux475)
reify(ineq(12, movesTo_00002, -1), aux476)
reify(ineq(13, movesTo_00002, -1), aux477)
reify(ineq(14, movesTo_00002, -1), aux478)
reify(ineq(15, movesTo_00002, -1), aux479)
reify(ineq(16, movesTo_00002, -1), aux480)
reify(ineq(17, movesTo_00002, -1), aux481)
reify(ineq(1, movesTo_00003, -1), aux482)
reify(ineq(2, movesTo_00003, -1), aux483)
reify(ineq(3, movesTo_00003, -1), aux484)
reify(ineq(4, movesTo_00003, -1), aux485)
reify(ineq(5, movesTo_00003, -1), aux486)
reify(ineq(6, movesTo_00003, -1), aux487)
reify(ineq(7, movesTo_00003, -1), aux488)
reify(ineq(8, movesTo_00003, -1), aux489)
reify(ineq(9, movesTo_00003, -1), aux490)
reify(ineq(10, movesTo_00003, -1), aux491)
reify(ineq(11, movesTo_00003, -1), aux492)
reify(ineq(12, movesTo_00003, -1), aux493)
reify(ineq(13, movesTo_00003, -1), aux494)
reify(ineq(14, movesTo_00003, -1), aux495)
reify(ineq(15, movesTo_00003, -1), aux496)
reify(ineq(16, movesTo_00003, -1), aux497)
reify(ineq(1, movesTo_00004, -1), aux498)
reify(ineq(2, movesTo_00004, -1), aux499)
reify(ineq(3, movesTo_00004, -1), aux500)
reify(ineq(4, movesTo_00004, -1), aux501)
reify(ineq(5, movesTo_00004, -1), aux502)
reify(ineq(6, movesTo_00004, -1), aux503)
reify(ineq(7, movesTo_00004, -1), aux504)
reify(ineq(8, movesTo_00004, -1), aux505)
reify(ineq(9, movesTo_00004, -1), aux506)
reify(ineq(10, movesTo_00004, -1), aux507)
reify(ineq(11, movesTo_00004, -1), aux508)
reify(ineq(12, movesTo_00004, -1), aux509)
reify(ineq(13, movesTo_00004, -1), aux510)
reify(ineq(14, movesTo_00004, -1), aux511)
reify(ineq(15, movesTo_00004, -1), aux512)
reify(ineq(1, movesTo_00005, -1), aux513)
reify(ineq(2, movesTo_00005, -1), aux514)
reify(ineq(3, movesTo_00005, -1), aux515)
reify(ineq(4, movesTo_00005, -1), aux516)
reify(ineq(5, movesTo_00005, -1), aux517)
reify(ineq(6, movesTo_00005, -1), aux518)
reify(ineq(7, movesTo_00005, -1), aux519)
reify(ineq(8, movesTo_00005, -1), aux520)
reify(ineq(9, movesTo_00005, -1), aux521)
reify(ineq(10, movesTo_00005, -1), aux522)
reify(ineq(11, movesTo_00005, -1), aux523)
reify(ineq(12, movesTo_00005, -1), aux524)
reify(ineq(13, movesTo_00005, -1), aux525)
reify(ineq(14, movesTo_00005, -1), aux526)
reify(ineq(1, movesTo_00006, -1), aux527)
reify(ineq(2, movesTo_00006, -1), aux528)
reify(ineq(3, movesTo_00006, -1), aux529)
reify(ineq(4, movesTo_00006, -1), aux530)
reify(ineq(5, movesTo_00006, -1), aux531)
reify(ineq(6, movesTo_00006, -1), aux532)
reify(ineq(7, movesTo_00006, -1), aux533)
reify(ineq(8, movesTo_00006, -1), aux534)
reify(ineq(9, movesTo_00006, -1), aux535)
reify(ineq(10, movesTo_00006, -1), aux536)
reify(ineq(11, movesTo_00006, -1), aux537)
reify(ineq(12, movesTo_00006, -1), aux538)
reify(ineq(13, movesTo_00006, -1), aux539)
reify(ineq(1, movesTo_00007, -1), aux540)
reify(ineq(2, movesTo_00007, -1), aux541)
reify(ineq(3, movesTo_00007, -1), aux542)
reify(ineq(4, movesTo_00007, -1), aux543)
reify(ineq(5, movesTo_00007, -1), aux544)
reify(ineq(6, movesTo_00007, -1), aux545)
reify(ineq(7, movesTo_00007, -1), aux546)
reify(ineq(8, movesTo_00007, -1), aux547)
reify(ineq(9, movesTo_00007, -1), aux548)
reify(ineq(10, movesTo_00007, -1), aux549)
reify(ineq(11, movesTo_00007, -1), aux550)
reify(ineq(12, movesTo_00007, -1), aux551)
reify(ineq(1, movesTo_00008, -1), aux552)
reify(ineq(2, movesTo_00008, -1), aux553)
reify(ineq(3, movesTo_00008, -1), aux554)
reify(ineq(4, movesTo_00008, -1), aux555)
reify(ineq(5, movesTo_00008, -1), aux556)
reify(ineq(6, movesTo_00008, -1), aux557)
reify(ineq(7, movesTo_00008, -1), aux558)
reify(ineq(8, movesTo_00008, -1), aux559)
reify(ineq(9, movesTo_00008, -1), aux560)
reify(ineq(10, movesTo_00008, -1), aux561)
reify(ineq(11, movesTo_00008, -1), aux562)
reify(ineq(1, movesTo_00009, -1), aux563)
reify(ineq(2, movesTo_00009, -1), aux564)
reify(ineq(3, movesTo_00009, -1), aux565)
reify(ineq(4, movesTo_00009, -1), aux566)
reify(ineq(5, movesTo_00009, -1), aux567)
reify(ineq(6, movesTo_00009, -1), aux568)
reify(ineq(7, movesTo_00009, -1), aux569)
reify(ineq(8, movesTo_00009, -1), aux570)
reify(ineq(9, movesTo_00009, -1), aux571)
reify(ineq(10, movesTo_00009, -1), aux572)
reify(ineq(1, movesTo_00010, -1), aux573)
reify(ineq(2, movesTo_00010, -1), aux574)
reify(ineq(3, movesTo_00010, -1), aux575)
reify(ineq(4, movesTo_00010, -1), aux576)
reify(ineq(5, movesTo_00010, -1), aux577)
reify(ineq(6, movesTo_00010, -1), aux578)
reify(ineq(7, movesTo_00010, -1), aux579)
reify(ineq(8, movesTo_00010, -1), aux580)
reify(ineq(9, movesTo_00010, -1), aux581)
reify(ineq(1, movesTo_00011, -1), aux582)
reify(ineq(2, movesTo_00011, -1), aux583)
reify(ineq(3, movesTo_00011, -1), aux584)
reify(ineq(4, movesTo_00011, -1), aux585)
reify(ineq(5, movesTo_00011, -1), aux586)
reify(ineq(6, movesTo_00011, -1), aux587)
reify(ineq(7, movesTo_00011, -1), aux588)
reify(ineq(8, movesTo_00011, -1), aux589)
reify(ineq(1, movesTo_00012, -1), aux590)
reify(ineq(2, movesTo_00012, -1), aux591)
reify(ineq(3, movesTo_00012, -1), aux592)
reify(ineq(4, movesTo_00012, -1), aux593)
reify(ineq(5, movesTo_00012, -1), aux594)
reify(ineq(6, movesTo_00012, -1), aux595)
reify(ineq(7, movesTo_00012, -1), aux596)
reify(ineq(1, movesTo_00013, -1), aux597)
reify(ineq(2, movesTo_00013, -1), aux598)
reify(ineq(3, movesTo_00013, -1), aux599)
reify(ineq(4, movesTo_00013, -1), aux600)
reify(ineq(5, movesTo_00013, -1), aux601)
reify(ineq(6, movesTo_00013, -1), aux602)
reify(ineq(1, movesTo_00014, -1), aux603)
reify(ineq(2, movesTo_00014, -1), aux604)
reify(ineq(3, movesTo_00014, -1), aux605)
reify(ineq(4, movesTo_00014, -1), aux606)
reify(ineq(5, movesTo_00014, -1), aux607)
reify(ineq(1, movesTo_00015, -1), aux608)
reify(ineq(2, movesTo_00015, -1), aux609)
reify(ineq(3, movesTo_00015, -1), aux610)
reify(ineq(4, movesTo_00015, -1), aux611)
reify(ineq(1, movesTo_00016, -1), aux612)
reify(ineq(2, movesTo_00016, -1), aux613)
reify(ineq(3, movesTo_00016, -1), aux614)
reify(ineq(1, movesTo_00017, -1), aux615)
reify(ineq(2, movesTo_00017, -1), aux616)
reify(ineq(1, movesTo_00018, -1), aux617)
div(aux18, 13, aux391)
modulo(aux18,13,aux392)
div(aux21, 13, aux393)
modulo(aux21,13,aux394)
modulo(aux20,13,aux395)
div(aux20, 13, aux396)
div(aux23, 13, aux397)
modulo(aux23,13,aux398)
div(aux25, 13, aux399)
modulo(aux24,13,aux400)
div(aux26, 13, aux401)
modulo(aux26,13,aux402)
modulo(aux29,13,aux403)
div(aux28, 13, aux404)
div(aux31, 13, aux405)
modulo(aux31,13,aux406)
modulo(aux33,13,aux407)
div(aux32, 13, aux408)
div(aux35, 13, aux409)
modulo(aux34,13,aux410)
div(aux36, 13, aux411)
modulo(aux36,13,aux412)
div(aux39, 13, aux413)
modulo(aux39,13,aux414)
modulo(aux40,13,aux415)
div(aux41, 13, aux416)
div(aux43, 13, aux417)
modulo(aux43,13,aux418)
div(aux45, 13, aux419)
modulo(aux45,13,aux420)
modulo(aux47,13,aux421)
div(aux46, 13, aux422)
div(aux49, 13, aux423)
modulo(aux48,13,aux424)
modulo(aux50,13,aux425)
div(aux51, 13, aux426)
div(states_00019_00001, 13, aux427)
modulo(states_00019_00001,13,aux428)
watchelement([43, 19, 18, 49, 5, 28, 25, 41, 2, 24, 20, 15, 44, 31, 27, 42, 33, 11, 6], aux105, aux16)
watchelement([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016, states_00002_00017, states_00002_00018], aux107, aux17)
watchelement([18, 49, 5, 28, 25, 41, 2, 24, 20, 15, 44, 31, 27, 42, 33, 11, 6, 1], aux429, aux18)
watchelement([states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016, states_00003_00017, states_00003_00018], aux430, aux19)
watchelement([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016, states_00003_00017], aux106, aux20)
watchelement([states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016, states_00002_00017, states_00002_00018, states_00002_00019], aux431, aux21)
watchelement([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015, states_00004_00016], aux102, aux22)
watchelement([states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015, states_00004_00016, states_00004_00017], aux432, aux23)
watchelement([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014, states_00005_00015], aux101, aux24)
watchelement([states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014, states_00005_00015, states_00005_00016], aux433, aux25)
watchelement([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013, states_00006_00014], aux104, aux26)
watchelement([states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013, states_00006_00014, states_00006_00015], aux434, aux27)
watchelement([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012, states_00007_00013], aux103, aux28)
watchelement([states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012, states_00007_00013, states_00007_00014], aux435, aux29)
watchelement([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011, states_00008_00012], aux100, aux30)
watchelement([states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011, states_00008_00012, states_00008_00013], aux436, aux31)
watchelement([states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010, states_00009_00011, states_00009_00012], aux437, aux32)
watchelement([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010, states_00009_00011], aux99, aux33)
watchelement([states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009, states_00010_00010, states_00010_00011], aux438, aux34)
watchelement([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009, states_00010_00010], aux116, aux35)
watchelement([states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008, states_00011_00009, states_00011_00010], aux439, aux36)
watchelement([states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008, states_00011_00009], aux115, aux37)
watchelement([states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007, states_00012_00008, states_00012_00009], aux440, aux38)
watchelement([states_00012_00001, states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007, states_00012_00008], aux112, aux39)
watchelement([states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006, states_00013_00007, states_00013_00008], aux441, aux40)
watchelement([states_00013_00001, states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006, states_00013_00007], aux111, aux41)
watchelement([states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005, states_00014_00006, states_00014_00007], aux442, aux42)
watchelement([states_00014_00001, states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005, states_00014_00006], aux114, aux43)
watchelement([states_00015_00002, states_00015_00003, states_00015_00004, states_00015_00005, states_00015_00006], aux443, aux44)
watchelement([states_00015_00001, states_00015_00002, states_00015_00003, states_00015_00004, states_00015_00005], aux113, aux45)
watchelement([states_00016_00002, states_00016_00003, states_00016_00004, states_00016_00005], aux444, aux46)
watchelement([states_00016_00001, states_00016_00002, states_00016_00003, states_00016_00004], aux109, aux47)
watchelement([states_00017_00001, states_00017_00002, states_00017_00003], aux108, aux48)
watchelement([states_00017_00002, states_00017_00003, states_00017_00004], aux445, aux49)
watchelement([states_00018_00002, states_00018_00003], aux446, aux50)
watchelement([states_00018_00001, states_00018_00002], aux110, aux51)
reify(watched-and({sumleq([1,movesTo_00001],movesFrom_00001),sumgeq([1,movesTo_00001],movesFrom_00001)}), aux52)
reify(watched-and({sumleq([1,movesTo_00002],movesFrom_00002),sumgeq([1,movesTo_00002],movesFrom_00002)}), aux53)
reify(watched-and({sumleq([1,movesTo_00003],movesFrom_00003),sumgeq([1,movesTo_00003],movesFrom_00003)}), aux54)
reify(watched-and({sumleq([3,movesTo_00001],movesFrom_00001),sumgeq([3,movesTo_00001],movesFrom_00001)}), aux55)
reify(watched-and({sumleq([3,movesTo_00002],movesFrom_00002),sumgeq([3,movesTo_00002],movesFrom_00002)}), aux56)
reify(watched-and({sumleq([1,movesTo_00004],movesFrom_00004),sumgeq([1,movesTo_00004],movesFrom_00004)}), aux57)
reify(watched-and({sumleq([3,movesTo_00003],movesFrom_00003),sumgeq([3,movesTo_00003],movesFrom_00003)}), aux58)
reify(watched-and({sumleq([1,movesTo_00005],movesFrom_00005),sumgeq([1,movesTo_00005],movesFrom_00005)}), aux59)
reify(watched-and({sumleq([1,movesTo_00006],movesFrom_00006),sumgeq([1,movesTo_00006],movesFrom_00006)}), aux60)
reify(watched-and({sumleq([3,movesTo_00004],movesFrom_00004),sumgeq([3,movesTo_00004],movesFrom_00004)}), aux61)
reify(watched-and({sumleq([1,movesTo_00007],movesFrom_00007),sumgeq([1,movesTo_00007],movesFrom_00007)}), aux62)
reify(watched-and({sumleq([3,movesTo_00005],movesFrom_00005),sumgeq([3,movesTo_00005],movesFrom_00005)}), aux63)
reify(watched-and({sumleq([3,movesTo_00006],movesFrom_00006),sumgeq([3,movesTo_00006],movesFrom_00006)}), aux64)
reify(watched-and({sumleq([1,movesTo_00008],movesFrom_00008),sumgeq([1,movesTo_00008],movesFrom_00008)}), aux65)
reify(watched-and({sumleq([3,movesTo_00007],movesFrom_00007),sumgeq([3,movesTo_00007],movesFrom_00007)}), aux66)
reify(watched-and({sumleq([1,movesTo_00009],movesFrom_00009),sumgeq([1,movesTo_00009],movesFrom_00009)}), aux67)
reify(watched-and({sumleq([3,movesTo_00008],movesFrom_00008),sumgeq([3,movesTo_00008],movesFrom_00008)}), aux68)
reify(watched-and({sumleq([3,movesTo_00009],movesFrom_00009),sumgeq([3,movesTo_00009],movesFrom_00009)}), aux69)
reify(watched-and({sumleq([1,movesTo_00011],movesFrom_00011),sumgeq([1,movesTo_00011],movesFrom_00011)}), aux70)
reify(watched-and({sumleq([1,movesTo_00010],movesFrom_00010),sumgeq([1,movesTo_00010],movesFrom_00010)}), aux71)
reify(watched-and({sumleq([1,movesTo_00013],movesFrom_00013),sumgeq([1,movesTo_00013],movesFrom_00013)}), aux72)
reify(watched-and({sumleq([3,movesTo_00011],movesFrom_00011),sumgeq([3,movesTo_00011],movesFrom_00011)}), aux73)
reify(watched-and({sumleq([3,movesTo_00010],movesFrom_00010),sumgeq([3,movesTo_00010],movesFrom_00010)}), aux74)
reify(watched-and({sumleq([1,movesTo_00012],movesFrom_00012),sumgeq([1,movesTo_00012],movesFrom_00012)}), aux75)
reify(watched-and({sumleq([3,movesTo_00013],movesFrom_00013),sumgeq([3,movesTo_00013],movesFrom_00013)}), aux76)
reify(watched-and({sumleq([1,movesTo_00015],movesFrom_00015),sumgeq([1,movesTo_00015],movesFrom_00015)}), aux77)
reify(watched-and({sumleq([1,movesTo_00014],movesFrom_00014),sumgeq([1,movesTo_00014],movesFrom_00014)}), aux78)
reify(watched-and({sumleq([3,movesTo_00012],movesFrom_00012),sumgeq([3,movesTo_00012],movesFrom_00012)}), aux79)
reify(watched-and({sumleq([1,movesTo_00017],movesFrom_00017),sumgeq([1,movesTo_00017],movesFrom_00017)}), aux80)
reify(watched-and({sumleq([3,movesTo_00015],movesFrom_00015),sumgeq([3,movesTo_00015],movesFrom_00015)}), aux81)
reify(watched-and({sumleq([3,movesTo_00014],movesFrom_00014),sumgeq([3,movesTo_00014],movesFrom_00014)}), aux82)
reify(watched-and({sumleq([1,movesTo_00016],movesFrom_00016),sumgeq([1,movesTo_00016],movesFrom_00016)}), aux83)
reify(sumleq([3,movesTo_00017],movesFrom_00017), aux84)
reify(watched-and({sumleq([3,movesTo_00016],movesFrom_00016),sumgeq([3,movesTo_00016],movesFrom_00016)}), aux85)
reify(gaceq(states_00012_00002,states_00013_00002), aux86)
reify(gaceq(states_00012_00003,states_00013_00002), aux87)
reify(gaceq(states_00012_00003,states_00013_00003), aux88)
reify(gaceq(states_00012_00006,states_00013_00006), aux89)
reify(gaceq(states_00012_00006,states_00013_00005), aux90)
reify(gaceq(states_00012_00007,states_00013_00006), aux91)
reify(gaceq(states_00012_00007,states_00013_00007), aux92)
reify(gaceq(states_00012_00004,states_00013_00004), aux93)
reify(gaceq(states_00012_00004,states_00013_00003), aux94)
reify(gaceq(states_00012_00005,states_00013_00004), aux95)
reify(gaceq(states_00012_00005,states_00013_00005), aux96)
reify(gaceq(states_00012_00008,states_00013_00007), aux97)
reify(gaceq(states_00012_00009,states_00013_00008), aux98)
reify(gaceq(states_00010_00008,states_00011_00008), aux117)
reify(gaceq(states_00010_00008,states_00011_00007), aux118)
reify(gaceq(states_00010_00009,states_00011_00008), aux119)
reify(gaceq(states_00010_00009,states_00011_00009), aux120)
reify(gaceq(states_00010_00006,states_00011_00006), aux121)
reify(gaceq(states_00010_00006,states_00011_00005), aux122)
reify(gaceq(states_00010_00007,states_00011_00006), aux123)
reify(gaceq(states_00010_00007,states_00011_00007), aux124)
reify(gaceq(states_00010_00004,states_00011_00004), aux125)
reify(gaceq(states_00010_00004,states_00011_00003), aux126)
reify(gaceq(states_00010_00005,states_00011_00004), aux127)
reify(gaceq(states_00010_00005,states_00011_00005), aux128)
reify(gaceq(states_00010_00002,states_00011_00002), aux129)
reify(gaceq(states_00010_00003,states_00011_00002), aux130)
reify(gaceq(states_00010_00003,states_00011_00003), aux131)
reify(gaceq(states_00010_00011,states_00011_00010), aux132)
reify(gaceq(states_00010_00010,states_00011_00009), aux133)
reify(gaceq(states_00012_00004,states_00011_00004), aux134)
reify(gaceq(states_00012_00004,states_00011_00005), aux135)
reify(gaceq(states_00012_00005,states_00011_00005), aux136)
reify(gaceq(states_00012_00005,states_00011_00006), aux137)
reify(gaceq(states_00012_00006,states_00011_00006), aux138)
reify(gaceq(states_00012_00006,states_00011_00007), aux139)
reify(gaceq(states_00012_00007,states_00011_00007), aux140)
reify(gaceq(states_00012_00007,states_00011_00008), aux141)
reify(gaceq(states_00012_00002,states_00011_00002), aux142)
reify(gaceq(states_00012_00002,states_00011_00003), aux143)
reify(gaceq(states_00012_00003,states_00011_00003), aux144)
reify(gaceq(states_00012_00003,states_00011_00004), aux145)
reify(gaceq(states_00012_00008,states_00011_00008), aux146)
reify(gaceq(states_00012_00008,states_00011_00009), aux147)
reify(gaceq(states_00012_00009,states_00011_00010), aux148)
reify(gaceq(states_00017_00002,states_00016_00002), aux149)
reify(gaceq(states_00017_00002,states_00016_00003), aux150)
reify(gaceq(states_00017_00003,states_00016_00003), aux151)
reify(gaceq(states_00017_00003,states_00016_00004), aux152)
reify(gaceq(states_00017_00004,states_00016_00005), aux153)
reify(gaceq(states_00014_00006,states_00015_00005), aux154)
reify(gaceq(states_00014_00007,states_00015_00006), aux155)
reify(gaceq(states_00014_00004,states_00015_00004), aux156)
reify(gaceq(states_00014_00004,states_00015_00003), aux157)
reify(gaceq(states_00014_00005,states_00015_00004), aux158)
reify(gaceq(states_00014_00005,states_00015_00005), aux159)
reify(gaceq(states_00014_00002,states_00015_00002), aux160)
reify(gaceq(states_00014_00003,states_00015_00002), aux161)
reify(gaceq(states_00014_00003,states_00015_00003), aux162)
reify(gaceq(states_00017_00003,states_00018_00002), aux163)
reify(gaceq(states_00017_00004,states_00018_00003), aux164)
reify(gaceq(states_00017_00002,states_00018_00002), aux165)
reify(gaceq(states_00005_00013,states_00006_00013), aux166)
reify(gaceq(states_00005_00013,states_00006_00012), aux167)
reify(gaceq(states_00005_00014,states_00006_00013), aux168)
reify(gaceq(states_00005_00014,states_00006_00014), aux169)
reify(gaceq(states_00005_00011,states_00006_00011), aux170)
reify(gaceq(states_00005_00011,states_00006_00010), aux171)
reify(gaceq(states_00005_00012,states_00006_00011), aux172)
reify(gaceq(states_00005_00012,states_00006_00012), aux173)
reify(gaceq(states_00005_00015,states_00006_00014), aux174)
reify(gaceq(states_00005_00016,states_00006_00015), aux175)
reify(gaceq(states_00005_00010,states_00006_00009), aux176)
reify(gaceq(states_00005_00010,states_00006_00010), aux177)
reify(gaceq(states_00005_00003,states_00006_00002), aux178)
reify(gaceq(states_00005_00003,states_00006_00003), aux179)
reify(gaceq(states_00005_00002,states_00006_00002), aux180)
reify(gaceq(states_00005_00005,states_00006_00004), aux181)
reify(gaceq(states_00005_00005,states_00006_00005), aux182)
reify(gaceq(states_00005_00004,states_00006_00004), aux183)
reify(gaceq(states_00005_00004,states_00006_00003), aux184)
reify(gaceq(states_00005_00007,states_00006_00006), aux185)
reify(gaceq(states_00005_00007,states_00006_00007), aux186)
reify(gaceq(states_00005_00006,states_00006_00006), aux187)
reify(gaceq(states_00005_00006,states_00006_00005), aux188)
reify(gaceq(states_00005_00009,states_00006_00008), aux189)
reify(gaceq(states_00005_00009,states_00006_00009), aux190)
reify(gaceq(states_00005_00008,states_00006_00008), aux191)
reify(gaceq(states_00005_00008,states_00006_00007), aux192)
reify(gaceq(states_00009_00002,states_00010_00002), aux193)
reify(gaceq(states_00009_00003,states_00010_00002), aux194)
reify(gaceq(states_00009_00003,states_00010_00003), aux195)
reify(gaceq(states_00009_00004,states_00010_00004), aux196)
reify(gaceq(states_00009_00004,states_00010_00003), aux197)
reify(gaceq(states_00009_00005,states_00010_00005), aux198)
reify(gaceq(states_00009_00005,states_00010_00004), aux199)
reify(gaceq(states_00009_00006,states_00010_00006), aux200)
reify(gaceq(states_00009_00006,states_00010_00005), aux201)
reify(gaceq(states_00009_00007,states_00010_00006), aux202)
reify(gaceq(states_00009_00007,states_00010_00007), aux203)
reify(gaceq(states_00009_00008,states_00010_00008), aux204)
reify(gaceq(states_00009_00008,states_00010_00007), aux205)
reify(gaceq(states_00009_00009,states_00010_00009), aux206)
reify(gaceq(states_00009_00009,states_00010_00008), aux207)
reify(gaceq(states_00009_00010,states_00010_00009), aux208)
reify(gaceq(states_00009_00010,states_00010_00010), aux209)
reify(gaceq(states_00009_00012,states_00010_00011), aux210)
reify(gaceq(states_00009_00011,states_00010_00010), aux211)
reify(gaceq(states_00013_00007,states_00014_00006), aux212)
reify(gaceq(states_00013_00008,states_00014_00007), aux213)
reify(gaceq(states_00013_00003,states_00014_00003), aux214)
reify(gaceq(states_00013_00003,states_00014_00002), aux215)
reify(gaceq(states_00013_00004,states_00014_00003), aux216)
reify(gaceq(states_00013_00004,states_00014_00004), aux217)
reify(gaceq(states_00013_00005,states_00014_00005), aux218)
reify(gaceq(states_00013_00005,states_00014_00004), aux219)
reify(gaceq(states_00013_00006,states_00014_00005), aux220)
reify(gaceq(states_00013_00006,states_00014_00006), aux221)
reify(gaceq(states_00013_00002,states_00014_00002), aux222)
reify(gaceq(states_00009_00010,states_00008_00010), aux223)
reify(gaceq(states_00009_00010,states_00008_00011), aux224)
reify(gaceq(states_00009_00011,states_00008_00011), aux225)
reify(gaceq(states_00009_00011,states_00008_00012), aux226)
reify(gaceq(states_00009_00012,states_00008_00013), aux227)
reify(gaceq(states_00009_00008,states_00008_00009), aux228)
reify(gaceq(states_00009_00008,states_00008_00008), aux229)
reify(gaceq(states_00009_00009,states_00008_00009), aux230)
reify(gaceq(states_00009_00009,states_00008_00010), aux231)
reify(gaceq(states_00009_00003,states_00008_00004), aux232)
reify(gaceq(states_00009_00003,states_00008_00003), aux233)
reify(gaceq(states_00009_00002,states_00008_00003), aux234)
reify(gaceq(states_00009_00002,states_00008_00002), aux235)
reify(gaceq(states_00009_00007,states_00008_00008), aux236)
reify(gaceq(states_00009_00007,states_00008_00007), aux237)
reify(gaceq(states_00009_00006,states_00008_00007), aux238)
reify(gaceq(states_00009_00006,states_00008_00006), aux239)
reify(gaceq(states_00009_00005,states_00008_00006), aux240)
reify(gaceq(states_00009_00005,states_00008_00005), aux241)
reify(gaceq(states_00009_00004,states_00008_00005), aux242)
reify(gaceq(states_00009_00004,states_00008_00004), aux243)
reify(gaceq(states_00004_00010,states_00003_00010), aux244)
reify(gaceq(states_00004_00010,states_00003_00011), aux245)
reify(gaceq(states_00004_00011,states_00003_00011), aux246)
reify(gaceq(states_00004_00011,states_00003_00012), aux247)
reify(gaceq(states_00004_00014,states_00003_00014), aux248)
reify(gaceq(states_00004_00014,states_00003_00015), aux249)
reify(gaceq(states_00004_00015,states_00003_00015), aux250)
reify(gaceq(states_00004_00015,states_00003_00016), aux251)
reify(gaceq(states_00004_00012,states_00003_00012), aux252)
reify(gaceq(states_00004_00012,states_00003_00013), aux253)
reify(gaceq(states_00004_00013,states_00003_00013), aux254)
reify(gaceq(states_00004_00013,states_00003_00014), aux255)
reify(gaceq(states_00004_00016,states_00003_00016), aux256)
reify(gaceq(states_00004_00016,states_00003_00017), aux257)
reify(gaceq(states_00004_00017,states_00003_00018), aux258)
reify(gaceq(states_00004_00002,states_00003_00002), aux259)
reify(gaceq(states_00004_00002,states_00003_00003), aux260)
reify(gaceq(states_00004_00004,states_00003_00004), aux261)
reify(gaceq(states_00004_00004,states_00003_00005), aux262)
reify(gaceq(states_00004_00003,states_00003_00003), aux263)
reify(gaceq(states_00004_00003,states_00003_00004), aux264)
reify(gaceq(states_00004_00006,states_00003_00007), aux265)
reify(gaceq(states_00004_00006,states_00003_00006), aux266)
reify(gaceq(states_00004_00005,states_00003_00005), aux267)
reify(gaceq(states_00004_00005,states_00003_00006), aux268)
reify(gaceq(states_00004_00008,states_00003_00009), aux269)
reify(gaceq(states_00004_00008,states_00003_00008), aux270)
reify(gaceq(states_00004_00007,states_00003_00008), aux271)
reify(gaceq(states_00004_00007,states_00003_00007), aux272)
reify(gaceq(states_00004_00009,states_00003_00010), aux273)
reify(gaceq(states_00004_00009,states_00003_00009), aux274)
reify(gaceq(states_00004_00008,states_00005_00007), aux275)
reify(gaceq(states_00004_00008,states_00005_00008), aux276)
reify(gaceq(states_00004_00007,states_00005_00007), aux277)
reify(gaceq(states_00004_00007,states_00005_00006), aux278)
reify(gaceq(states_00004_00006,states_00005_00005), aux279)
reify(gaceq(states_00004_00006,states_00005_00006), aux280)
reify(gaceq(states_00004_00005,states_00005_00005), aux281)
reify(gaceq(states_00004_00005,states_00005_00004), aux282)
reify(gaceq(states_00004_00004,states_00005_00003), aux283)
reify(gaceq(states_00004_00004,states_00005_00004), aux284)
reify(gaceq(states_00004_00003,states_00005_00003), aux285)
reify(gaceq(states_00004_00003,states_00005_00002), aux286)
reify(gaceq(states_00004_00002,states_00005_00002), aux287)
reify(gaceq(states_00004_00009,states_00005_00009), aux288)
reify(gaceq(states_00004_00009,states_00005_00008), aux289)
reify(gaceq(states_00004_00010,states_00005_00009), aux290)
reify(gaceq(states_00004_00010,states_00005_00010), aux291)
reify(gaceq(states_00004_00011,states_00005_00010), aux292)
reify(gaceq(states_00004_00011,states_00005_00011), aux293)
reify(gaceq(states_00004_00012,states_00005_00012), aux294)
reify(gaceq(states_00004_00012,states_00005_00011), aux295)
reify(gaceq(states_00004_00013,states_00005_00012), aux296)
reify(gaceq(states_00004_00013,states_00005_00013), aux297)
reify(gaceq(states_00004_00014,states_00005_00014), aux298)
reify(gaceq(states_00004_00014,states_00005_00013), aux299)
reify(gaceq(states_00004_00015,states_00005_00014), aux300)
reify(gaceq(states_00004_00015,states_00005_00015), aux301)
reify(gaceq(states_00004_00016,states_00005_00015), aux302)
reify(gaceq(states_00004_00017,states_00005_00016), aux303)
reify(gaceq(states_00002_00018,states_00003_00017), aux304)
reify(gaceq(states_00002_00019,states_00003_00018), aux305)
reify(gaceq(states_00002_00014,states_00003_00014), aux306)
reify(gaceq(states_00002_00014,states_00003_00013), aux307)
reify(gaceq(states_00002_00015,states_00003_00014), aux308)
reify(gaceq(states_00002_00015,states_00003_00015), aux309)
reify(gaceq(states_00002_00016,states_00003_00016), aux310)
reify(gaceq(states_00002_00016,states_00003_00015), aux311)
reify(gaceq(states_00002_00017,states_00003_00016), aux312)
reify(gaceq(states_00002_00017,states_00003_00017), aux313)
reify(gaceq(states_00002_00010,states_00003_00010), aux314)
reify(gaceq(states_00002_00011,states_00003_00010), aux315)
reify(gaceq(states_00002_00011,states_00003_00011), aux316)
reify(gaceq(states_00002_00012,states_00003_00012), aux317)
reify(gaceq(states_00002_00012,states_00003_00011), aux318)
reify(gaceq(states_00002_00013,states_00003_00012), aux319)
reify(gaceq(states_00002_00013,states_00003_00013), aux320)
reify(gaceq(states_00002_00010,states_00003_00009), aux321)
reify(gaceq(states_00002_00006,states_00003_00005), aux322)
reify(gaceq(states_00002_00006,states_00003_00006), aux323)
reify(gaceq(states_00002_00005,states_00003_00005), aux324)
reify(gaceq(states_00002_00005,states_00003_00004), aux325)
reify(gaceq(states_00002_00004,states_00003_00003), aux326)
reify(gaceq(states_00002_00004,states_00003_00004), aux327)
reify(gaceq(states_00002_00003,states_00003_00003), aux328)
reify(gaceq(states_00002_00009,states_00003_00009), aux329)
reify(gaceq(states_00002_00009,states_00003_00008), aux330)
reify(gaceq(states_00002_00008,states_00003_00007), aux331)
reify(gaceq(states_00002_00008,states_00003_00008), aux332)
reify(gaceq(states_00002_00007,states_00003_00007), aux333)
reify(gaceq(states_00002_00007,states_00003_00006), aux334)
reify(gaceq(states_00002_00002,states_00003_00002), aux335)
reify(gaceq(states_00006_00002,states_00007_00002), aux336)
reify(gaceq(states_00006_00006,states_00007_00005), aux337)
reify(gaceq(states_00006_00006,states_00007_00006), aux338)
reify(gaceq(states_00006_00005,states_00007_00005), aux339)
reify(gaceq(states_00006_00005,states_00007_00004), aux340)
reify(gaceq(states_00006_00004,states_00007_00003), aux341)
reify(gaceq(states_00006_00004,states_00007_00004), aux342)
reify(gaceq(states_00006_00003,states_00007_00003), aux343)
reify(gaceq(states_00006_00003,states_00007_00002), aux344)
reify(gaceq(states_00006_00009,states_00007_00009), aux345)
reify(gaceq(states_00006_00009,states_00007_00008), aux346)
reify(gaceq(states_00006_00008,states_00007_00007), aux347)
reify(gaceq(states_00006_00008,states_00007_00008), aux348)
reify(gaceq(states_00006_00007,states_00007_00007), aux349)
reify(gaceq(states_00006_00007,states_00007_00006), aux350)
reify(gaceq(states_00006_00010,states_00007_00009), aux351)
reify(gaceq(states_00006_00014,states_00007_00013), aux352)
reify(gaceq(states_00006_00015,states_00007_00014), aux353)
reify(gaceq(states_00006_00010,states_00007_00010), aux354)
reify(gaceq(states_00006_00011,states_00007_00010), aux355)
reify(gaceq(states_00006_00011,states_00007_00011), aux356)
reify(gaceq(states_00006_00012,states_00007_00012), aux357)
reify(gaceq(states_00006_00012,states_00007_00011), aux358)
reify(gaceq(states_00006_00013,states_00007_00012), aux359)
reify(gaceq(states_00006_00013,states_00007_00013), aux360)
reify(gaceq(states_00007_00007,states_00008_00006), aux361)
reify(gaceq(states_00007_00007,states_00008_00007), aux362)
reify(gaceq(states_00007_00006,states_00008_00006), aux363)
reify(gaceq(states_00007_00006,states_00008_00005), aux364)
reify(gaceq(states_00007_00009,states_00008_00008), aux365)
reify(gaceq(states_00007_00009,states_00008_00009), aux366)
reify(gaceq(states_00007_00008,states_00008_00008), aux367)
reify(gaceq(states_00007_00008,states_00008_00007), aux368)
reify(gaceq(states_00007_00003,states_00008_00002), aux369)
reify(gaceq(states_00007_00003,states_00008_00003), aux370)
reify(gaceq(states_00007_00002,states_00008_00002), aux371)
reify(gaceq(states_00007_00005,states_00008_00004), aux372)
reify(gaceq(states_00007_00005,states_00008_00005), aux373)
reify(gaceq(states_00007_00004,states_00008_00004), aux374)
reify(gaceq(states_00007_00004,states_00008_00003), aux375)
reify(gaceq(states_00007_00013,states_00008_00012), aux376)
reify(gaceq(states_00007_00014,states_00008_00013), aux377)
reify(gaceq(states_00007_00011,states_00008_00011), aux378)
reify(gaceq(states_00007_00011,states_00008_00010), aux379)
reify(gaceq(states_00007_00012,states_00008_00011), aux380)
reify(gaceq(states_00007_00012,states_00008_00012), aux381)
reify(gaceq(states_00007_00010,states_00008_00009), aux382)
reify(gaceq(states_00007_00010,states_00008_00010), aux383)
reify(gaceq(states_00015_00002,states_00016_00002), aux384)
reify(gaceq(states_00015_00003,states_00016_00003), aux385)
reify(gaceq(states_00015_00003,states_00016_00002), aux386)
reify(gaceq(states_00015_00004,states_00016_00003), aux387)
reify(gaceq(states_00015_00004,states_00016_00004), aux388)
reify(gaceq(states_00015_00005,states_00016_00004), aux389)
reify(gaceq(states_00015_00006,states_00016_00005), aux390)
watched-or({diseq(1,moves_00001),w-literal(states_00002_00002,18),ineq(2, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00003,49),ineq(3, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00004,5),ineq(4, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00005,28),ineq(5, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00006,25),ineq(6, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00007,41),ineq(7, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00008,2),ineq(8, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00009,24),ineq(9, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00010,20),ineq(10, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00011,15),ineq(11, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00012,44),ineq(12, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00013,31),ineq(13, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00014,27),ineq(14, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00015,42),ineq(15, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00016,33),ineq(16, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00017,11),ineq(17, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00018,6),ineq(18, movesTo_00001, 0)})
watched-or({diseq(1,moves_00001),w-literal(states_00002_00019,1),ineq(19, movesTo_00001, 0)})
watched-or({diseq(1,moves_00002),gaceq(states_00002_00003,states_00003_00002),ineq(2, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux326,1),ineq(3, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux325,1),ineq(4, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux322,1),ineq(5, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux334,1),ineq(6, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux331,1),ineq(7, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux330,1),ineq(8, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux321,1),ineq(9, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux315,1),ineq(10, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux318,1),ineq(11, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux319,1),ineq(12, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux307,1),ineq(13, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux308,1),ineq(14, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux311,1),ineq(15, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux312,1),ineq(16, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux304,1),ineq(17, movesTo_00002, 0)})
watched-or({diseq(1,moves_00002),w-literal(aux305,1),ineq(18, movesTo_00002, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux260,1),ineq(2, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux264,1),ineq(3, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux262,1),ineq(4, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux268,1),ineq(5, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux265,1),ineq(6, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux271,1),ineq(7, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux269,1),ineq(8, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux273,1),ineq(9, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux245,1),ineq(10, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux247,1),ineq(11, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux253,1),ineq(12, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux255,1),ineq(13, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux249,1),ineq(14, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux251,1),ineq(15, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux257,1),ineq(16, movesTo_00003, 0)})
watched-or({diseq(1,moves_00003),w-literal(aux258,1),ineq(17, movesTo_00003, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux286,1),ineq(2, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux283,1),ineq(3, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux282,1),ineq(4, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux279,1),ineq(5, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux278,1),ineq(6, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux275,1),ineq(7, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux289,1),ineq(8, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux290,1),ineq(9, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux292,1),ineq(10, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux295,1),ineq(11, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux296,1),ineq(12, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux299,1),ineq(13, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux300,1),ineq(14, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux302,1),ineq(15, movesTo_00004, 0)})
watched-or({diseq(1,moves_00004),w-literal(aux303,1),ineq(16, movesTo_00004, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux178,1),ineq(2, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux184,1),ineq(3, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux181,1),ineq(4, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux188,1),ineq(5, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux185,1),ineq(6, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux192,1),ineq(7, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux189,1),ineq(8, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux176,1),ineq(9, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux171,1),ineq(10, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux172,1),ineq(11, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux167,1),ineq(12, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux168,1),ineq(13, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux174,1),ineq(14, movesTo_00005, 0)})
watched-or({diseq(1,moves_00005),w-literal(aux175,1),ineq(15, movesTo_00005, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux344,1),ineq(2, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux341,1),ineq(3, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux340,1),ineq(4, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux337,1),ineq(5, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux350,1),ineq(6, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux347,1),ineq(7, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux346,1),ineq(8, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux351,1),ineq(9, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux355,1),ineq(10, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux358,1),ineq(11, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux359,1),ineq(12, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux352,1),ineq(13, movesTo_00006, 0)})
watched-or({diseq(1,moves_00006),w-literal(aux353,1),ineq(14, movesTo_00006, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux369,1),ineq(2, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux375,1),ineq(3, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux372,1),ineq(4, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux364,1),ineq(5, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux361,1),ineq(6, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux368,1),ineq(7, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux365,1),ineq(8, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux382,1),ineq(9, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux379,1),ineq(10, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux380,1),ineq(11, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux376,1),ineq(12, movesTo_00007, 0)})
watched-or({diseq(1,moves_00007),w-literal(aux377,1),ineq(13, movesTo_00007, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux234,1),ineq(2, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux232,1),ineq(3, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux242,1),ineq(4, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux240,1),ineq(5, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux238,1),ineq(6, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux236,1),ineq(7, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux228,1),ineq(8, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux231,1),ineq(9, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux224,1),ineq(10, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux226,1),ineq(11, movesTo_00008, 0)})
watched-or({diseq(1,moves_00008),w-literal(aux227,1),ineq(12, movesTo_00008, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux194,1),ineq(2, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux197,1),ineq(3, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux199,1),ineq(4, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux201,1),ineq(5, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux202,1),ineq(6, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux205,1),ineq(7, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux207,1),ineq(8, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux208,1),ineq(9, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux211,1),ineq(10, movesTo_00009, 0)})
watched-or({diseq(1,moves_00009),w-literal(aux210,1),ineq(11, movesTo_00009, 0)})
watched-or({diseq(1,moves_00010),ineq(2, movesTo_00010, 0),w-literal(aux130,1)})
watched-or({diseq(1,moves_00010),ineq(3, movesTo_00010, 0),w-literal(aux126,1)})
watched-or({diseq(1,moves_00010),ineq(4, movesTo_00010, 0),w-literal(aux127,1)})
watched-or({diseq(1,moves_00010),ineq(5, movesTo_00010, 0),w-literal(aux122,1)})
watched-or({diseq(1,moves_00010),ineq(6, movesTo_00010, 0),w-literal(aux123,1)})
watched-or({diseq(1,moves_00010),ineq(7, movesTo_00010, 0),w-literal(aux118,1)})
watched-or({diseq(1,moves_00010),ineq(8, movesTo_00010, 0),w-literal(aux119,1)})
watched-or({diseq(1,moves_00010),ineq(9, movesTo_00010, 0),w-literal(aux133,1)})
watched-or({diseq(1,moves_00010),ineq(10, movesTo_00010, 0),w-literal(aux132,1)})
watched-or({diseq(1,moves_00011),w-literal(aux143,1),ineq(2, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux145,1),ineq(3, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux135,1),ineq(4, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux137,1),ineq(5, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux139,1),ineq(6, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux141,1),ineq(7, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux147,1),ineq(8, movesTo_00011, 0)})
watched-or({diseq(1,moves_00011),w-literal(aux148,1),ineq(9, movesTo_00011, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux87,1),ineq(2, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux94,1),ineq(3, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux95,1),ineq(4, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux90,1),ineq(5, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux91,1),ineq(6, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux97,1),ineq(7, movesTo_00012, 0)})
watched-or({diseq(1,moves_00012),w-literal(aux98,1),ineq(8, movesTo_00012, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux215,1),ineq(2, movesTo_00013, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux216,1),ineq(3, movesTo_00013, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux219,1),ineq(4, movesTo_00013, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux220,1),ineq(5, movesTo_00013, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux212,1),ineq(6, movesTo_00013, 0)})
watched-or({diseq(1,moves_00013),w-literal(aux213,1),ineq(7, movesTo_00013, 0)})
watched-or({diseq(1,moves_00014),w-literal(aux161,1),ineq(2, movesTo_00014, 0)})
watched-or({diseq(1,moves_00014),w-literal(aux157,1),ineq(3, movesTo_00014, 0)})
watched-or({diseq(1,moves_00014),w-literal(aux158,1),ineq(4, movesTo_00014, 0)})
watched-or({diseq(1,moves_00014),w-literal(aux154,1),ineq(5, movesTo_00014, 0)})
watched-or({diseq(1,moves_00014),w-literal(aux155,1),ineq(6, movesTo_00014, 0)})
watched-or({diseq(1,moves_00015),w-literal(aux386,1),ineq(2, movesTo_00015, 0)})
watched-or({diseq(1,moves_00015),w-literal(aux387,1),ineq(3, movesTo_00015, 0)})
watched-or({diseq(1,moves_00015),w-literal(aux389,1),ineq(4, movesTo_00015, 0)})
watched-or({diseq(1,moves_00015),w-literal(aux390,1),ineq(5, movesTo_00015, 0)})
watched-or({diseq(1,moves_00016),w-literal(aux150,1),ineq(2, movesTo_00016, 0)})
watched-or({diseq(1,moves_00016),w-literal(aux152,1),ineq(3, movesTo_00016, 0)})
watched-or({diseq(1,moves_00016),w-literal(aux153,1),ineq(4, movesTo_00016, 0)})
watched-or({diseq(1,moves_00017),w-literal(aux163,1),ineq(2, movesTo_00017, 0)})
watched-or({diseq(1,moves_00017),w-literal(aux164,1),ineq(3, movesTo_00017, 0)})
watched-or({ineq(2, movesTo_00018, 0),gaceq(states_00020_00001,states_00018_00003)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00002,19),ineq(2, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00003,18),ineq(movesFrom_00001, 3, 0),ineq(3, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00004,49),ineq(movesFrom_00001, 4, 0),ineq(4, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00005,5),ineq(movesFrom_00001, 5, 0),ineq(5, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00006,28),ineq(movesFrom_00001, 6, 0),ineq(6, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00007,25),ineq(movesFrom_00001, 7, 0),ineq(7, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00008,41),ineq(movesFrom_00001, 8, 0),ineq(8, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00009,2),ineq(movesFrom_00001, 9, 0),ineq(9, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00010,24),ineq(movesFrom_00001, 10, 0),ineq(10, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00011,20),ineq(movesFrom_00001, 11, 0),ineq(11, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00012,15),ineq(movesFrom_00001, 12, 0),ineq(12, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00013,44),ineq(movesFrom_00001, 13, 0),ineq(13, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00014,31),ineq(movesFrom_00001, 14, 0),ineq(14, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00015,27),ineq(movesFrom_00001, 15, 0),ineq(15, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00016,42),ineq(movesFrom_00001, 16, 0),ineq(16, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00017,33),ineq(movesFrom_00001, 17, 0),ineq(17, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00018,11),ineq(movesFrom_00001, 18, 0),ineq(18, movesTo_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00019,6),ineq(movesFrom_00001, 19, 0),ineq(19, movesTo_00001, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux335,1),ineq(2, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux328,1),ineq(movesFrom_00002, 3, 0),ineq(3, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux327,1),ineq(movesFrom_00002, 4, 0),ineq(4, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux324,1),ineq(movesFrom_00002, 5, 0),ineq(5, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux323,1),ineq(movesFrom_00002, 6, 0),ineq(6, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux333,1),ineq(movesFrom_00002, 7, 0),ineq(7, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux332,1),ineq(movesFrom_00002, 8, 0),ineq(8, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux329,1),ineq(movesFrom_00002, 9, 0),ineq(9, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux314,1),ineq(movesFrom_00002, 10, 0),ineq(10, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux316,1),ineq(movesFrom_00002, 11, 0),ineq(11, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux317,1),ineq(movesFrom_00002, 12, 0),ineq(12, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux320,1),ineq(movesFrom_00002, 13, 0),ineq(13, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux306,1),ineq(movesFrom_00002, 14, 0),ineq(14, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux309,1),ineq(movesFrom_00002, 15, 0),ineq(15, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux310,1),ineq(movesFrom_00002, 16, 0),ineq(16, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux313,1),ineq(movesFrom_00002, 17, 0),ineq(17, movesTo_00002, 0)})
watched-or({diseq(3,moves_00002),gaceq(states_00002_00018,states_00003_00018),ineq(movesFrom_00002, 18, 0),ineq(18, movesTo_00002, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux259,1),ineq(movesFrom_00003, 2, 0),ineq(2, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux263,1),ineq(movesFrom_00003, 3, 0),ineq(3, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux261,1),ineq(movesFrom_00003, 4, 0),ineq(4, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux267,1),ineq(movesFrom_00003, 5, 0),ineq(5, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux266,1),ineq(movesFrom_00003, 6, 0),ineq(6, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux272,1),ineq(movesFrom_00003, 7, 0),ineq(7, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux270,1),ineq(movesFrom_00003, 8, 0),ineq(8, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux274,1),ineq(movesFrom_00003, 9, 0),ineq(9, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux244,1),ineq(movesFrom_00003, 10, 0),ineq(10, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux246,1),ineq(movesFrom_00003, 11, 0),ineq(11, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux252,1),ineq(movesFrom_00003, 12, 0),ineq(12, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux254,1),ineq(movesFrom_00003, 13, 0),ineq(13, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux248,1),ineq(movesFrom_00003, 14, 0),ineq(14, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux250,1),ineq(movesFrom_00003, 15, 0),ineq(15, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux256,1),ineq(movesFrom_00003, 16, 0),ineq(16, movesTo_00003, 0)})
watched-or({diseq(3,moves_00003),gaceq(states_00004_00017,states_00003_00017),ineq(movesFrom_00003, 17, 0),ineq(17, movesTo_00003, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux287,1),ineq(movesFrom_00004, 2, 0),ineq(2, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux285,1),ineq(movesFrom_00004, 3, 0),ineq(3, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux284,1),ineq(movesFrom_00004, 4, 0),ineq(4, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux281,1),ineq(movesFrom_00004, 5, 0),ineq(5, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux280,1),ineq(movesFrom_00004, 6, 0),ineq(6, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux277,1),ineq(movesFrom_00004, 7, 0),ineq(7, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux276,1),ineq(movesFrom_00004, 8, 0),ineq(8, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux288,1),ineq(movesFrom_00004, 9, 0),ineq(9, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux291,1),ineq(movesFrom_00004, 10, 0),ineq(10, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux293,1),ineq(movesFrom_00004, 11, 0),ineq(11, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux294,1),ineq(movesFrom_00004, 12, 0),ineq(12, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux297,1),ineq(movesFrom_00004, 13, 0),ineq(13, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux298,1),ineq(movesFrom_00004, 14, 0),ineq(14, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux301,1),ineq(movesFrom_00004, 15, 0),ineq(15, movesTo_00004, 0)})
watched-or({diseq(3,moves_00004),gaceq(states_00004_00016,states_00005_00016),ineq(movesFrom_00004, 16, 0),ineq(16, movesTo_00004, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux180,1),ineq(movesFrom_00005, 2, 0),ineq(2, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux179,1),ineq(movesFrom_00005, 3, 0),ineq(3, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux183,1),ineq(movesFrom_00005, 4, 0),ineq(4, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux182,1),ineq(movesFrom_00005, 5, 0),ineq(5, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux187,1),ineq(movesFrom_00005, 6, 0),ineq(6, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux186,1),ineq(movesFrom_00005, 7, 0),ineq(7, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux191,1),ineq(movesFrom_00005, 8, 0),ineq(8, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux190,1),ineq(movesFrom_00005, 9, 0),ineq(9, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux177,1),ineq(movesFrom_00005, 10, 0),ineq(10, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux170,1),ineq(movesFrom_00005, 11, 0),ineq(11, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux173,1),ineq(movesFrom_00005, 12, 0),ineq(12, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux166,1),ineq(movesFrom_00005, 13, 0),ineq(13, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux169,1),ineq(movesFrom_00005, 14, 0),ineq(14, movesTo_00005, 0)})
watched-or({diseq(3,moves_00005),gaceq(states_00005_00015,states_00006_00015),ineq(movesFrom_00005, 15, 0),ineq(15, movesTo_00005, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 2, 0),w-literal(aux336,1),ineq(2, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 3, 0),w-literal(aux343,1),ineq(3, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 4, 0),w-literal(aux342,1),ineq(4, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 5, 0),w-literal(aux339,1),ineq(5, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 6, 0),w-literal(aux338,1),ineq(6, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 7, 0),w-literal(aux349,1),ineq(7, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 8, 0),w-literal(aux348,1),ineq(8, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 9, 0),w-literal(aux345,1),ineq(9, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 10, 0),w-literal(aux354,1),ineq(10, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 11, 0),w-literal(aux356,1),ineq(11, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 12, 0),w-literal(aux357,1),ineq(12, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 13, 0),w-literal(aux360,1),ineq(13, movesTo_00006, 0)})
watched-or({diseq(3,moves_00006),ineq(movesFrom_00006, 14, 0),gaceq(states_00006_00014,states_00007_00014),ineq(14, movesTo_00006, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux371,1),ineq(movesFrom_00007, 2, 0),ineq(2, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux370,1),ineq(movesFrom_00007, 3, 0),ineq(3, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux374,1),ineq(movesFrom_00007, 4, 0),ineq(4, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux373,1),ineq(movesFrom_00007, 5, 0),ineq(5, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux363,1),ineq(movesFrom_00007, 6, 0),ineq(6, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux362,1),ineq(movesFrom_00007, 7, 0),ineq(7, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux367,1),ineq(movesFrom_00007, 8, 0),ineq(8, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux366,1),ineq(movesFrom_00007, 9, 0),ineq(9, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux383,1),ineq(movesFrom_00007, 10, 0),ineq(10, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux378,1),ineq(movesFrom_00007, 11, 0),ineq(11, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux381,1),ineq(movesFrom_00007, 12, 0),ineq(12, movesTo_00007, 0)})
watched-or({diseq(3,moves_00007),gaceq(states_00007_00013,states_00008_00013),ineq(movesFrom_00007, 13, 0),ineq(13, movesTo_00007, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux235,1),ineq(movesFrom_00008, 2, 0),ineq(2, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux233,1),ineq(movesFrom_00008, 3, 0),ineq(3, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux243,1),ineq(movesFrom_00008, 4, 0),ineq(4, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux241,1),ineq(movesFrom_00008, 5, 0),ineq(5, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux239,1),ineq(movesFrom_00008, 6, 0),ineq(6, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux237,1),ineq(movesFrom_00008, 7, 0),ineq(7, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux229,1),ineq(movesFrom_00008, 8, 0),ineq(8, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux230,1),ineq(movesFrom_00008, 9, 0),ineq(9, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux223,1),ineq(movesFrom_00008, 10, 0),ineq(10, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux225,1),ineq(movesFrom_00008, 11, 0),ineq(11, movesTo_00008, 0)})
watched-or({diseq(3,moves_00008),gaceq(states_00009_00012,states_00008_00012),ineq(movesFrom_00008, 12, 0),ineq(12, movesTo_00008, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 2, 0),w-literal(aux193,1),ineq(2, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 3, 0),w-literal(aux195,1),ineq(3, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 4, 0),w-literal(aux196,1),ineq(4, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 5, 0),w-literal(aux198,1),ineq(5, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 6, 0),w-literal(aux200,1),ineq(6, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 7, 0),w-literal(aux203,1),ineq(7, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 8, 0),w-literal(aux204,1),ineq(8, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 9, 0),w-literal(aux206,1),ineq(9, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 10, 0),w-literal(aux209,1),ineq(10, movesTo_00009, 0)})
watched-or({diseq(3,moves_00009),ineq(movesFrom_00009, 11, 0),gaceq(states_00009_00011,states_00010_00011),ineq(11, movesTo_00009, 0)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 2, 0),ineq(2, movesTo_00010, 0),w-literal(aux129,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 3, 0),ineq(3, movesTo_00010, 0),w-literal(aux131,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 4, 0),ineq(4, movesTo_00010, 0),w-literal(aux125,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 5, 0),ineq(5, movesTo_00010, 0),w-literal(aux128,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 6, 0),ineq(6, movesTo_00010, 0),w-literal(aux121,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 7, 0),ineq(7, movesTo_00010, 0),w-literal(aux124,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 8, 0),ineq(8, movesTo_00010, 0),w-literal(aux117,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 9, 0),ineq(9, movesTo_00010, 0),w-literal(aux120,1)})
watched-or({diseq(3,moves_00010),ineq(movesFrom_00010, 10, 0),ineq(10, movesTo_00010, 0),gaceq(states_00010_00010,states_00011_00010)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 2, 0),w-literal(aux142,1),ineq(2, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 3, 0),w-literal(aux144,1),ineq(3, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 4, 0),w-literal(aux134,1),ineq(4, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 5, 0),w-literal(aux136,1),ineq(5, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 6, 0),w-literal(aux138,1),ineq(6, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 7, 0),w-literal(aux140,1),ineq(7, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 8, 0),w-literal(aux146,1),ineq(8, movesTo_00011, 0)})
watched-or({diseq(3,moves_00011),ineq(movesFrom_00011, 9, 0),gaceq(states_00012_00009,states_00011_00009),ineq(9, movesTo_00011, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux86,1),ineq(movesFrom_00012, 2, 0),ineq(2, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux88,1),ineq(movesFrom_00012, 3, 0),ineq(3, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux93,1),ineq(movesFrom_00012, 4, 0),ineq(4, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux96,1),ineq(movesFrom_00012, 5, 0),ineq(5, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux89,1),ineq(movesFrom_00012, 6, 0),ineq(6, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux92,1),ineq(movesFrom_00012, 7, 0),ineq(7, movesTo_00012, 0)})
watched-or({diseq(3,moves_00012),gaceq(states_00012_00008,states_00013_00008),ineq(movesFrom_00012, 8, 0),ineq(8, movesTo_00012, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 2, 0),w-literal(aux222,1),ineq(2, movesTo_00013, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 3, 0),w-literal(aux214,1),ineq(3, movesTo_00013, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 4, 0),w-literal(aux217,1),ineq(4, movesTo_00013, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 5, 0),w-literal(aux218,1),ineq(5, movesTo_00013, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 6, 0),w-literal(aux221,1),ineq(6, movesTo_00013, 0)})
watched-or({diseq(3,moves_00013),ineq(movesFrom_00013, 7, 0),gaceq(states_00013_00007,states_00014_00007),ineq(7, movesTo_00013, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux160,1),ineq(movesFrom_00014, 2, 0),ineq(2, movesTo_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux162,1),ineq(movesFrom_00014, 3, 0),ineq(3, movesTo_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux156,1),ineq(movesFrom_00014, 4, 0),ineq(4, movesTo_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux159,1),ineq(movesFrom_00014, 5, 0),ineq(5, movesTo_00014, 0)})
watched-or({diseq(3,moves_00014),gaceq(states_00014_00006,states_00015_00006),ineq(movesFrom_00014, 6, 0),ineq(6, movesTo_00014, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux384,1),ineq(movesFrom_00015, 2, 0),ineq(2, movesTo_00015, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux385,1),ineq(movesFrom_00015, 3, 0),ineq(3, movesTo_00015, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux388,1),ineq(movesFrom_00015, 4, 0),ineq(4, movesTo_00015, 0)})
watched-or({diseq(3,moves_00015),gaceq(states_00015_00005,states_00016_00005),ineq(movesFrom_00015, 5, 0),ineq(5, movesTo_00015, 0)})
watched-or({diseq(3,moves_00016),ineq(movesFrom_00016, 2, 0),w-literal(aux149,1),ineq(2, movesTo_00016, 0)})
watched-or({diseq(3,moves_00016),ineq(movesFrom_00016, 3, 0),w-literal(aux151,1),ineq(3, movesTo_00016, 0)})
watched-or({diseq(3,moves_00016),ineq(movesFrom_00016, 4, 0),gaceq(states_00017_00004,states_00016_00004),ineq(4, movesTo_00016, 0)})
watched-or({diseq(3,moves_00017),w-literal(aux165,1),ineq(movesFrom_00017, 2, 0),ineq(2, movesTo_00017, 0)})
watched-or({diseq(3,moves_00017),gaceq(states_00017_00003,states_00018_00003),ineq(movesFrom_00017, 3, 0),ineq(3, movesTo_00017, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00003,49),ineq(4, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00004,5),ineq(5, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00005,28),ineq(6, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00006,25),ineq(7, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00007,41),ineq(8, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00008,2),ineq(9, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00009,24),ineq(10, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00010,20),ineq(11, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00011,15),ineq(12, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00012,44),ineq(13, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00013,31),ineq(14, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00014,27),ineq(15, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00015,42),ineq(16, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00016,33),ineq(17, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00017,11),ineq(18, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00018,6),ineq(19, movesFrom_00001, 0),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00001),w-literal(states_00002_00019,1),ineq(20, movesFrom_00001, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux326,1),ineq(4, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux325,1),ineq(5, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux322,1),ineq(6, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux334,1),ineq(7, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux331,1),ineq(8, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux330,1),ineq(9, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux321,1),ineq(10, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux315,1),ineq(11, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux318,1),ineq(12, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux319,1),ineq(13, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux307,1),ineq(14, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux308,1),ineq(15, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux311,1),ineq(16, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux312,1),ineq(17, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux304,1),ineq(18, movesFrom_00002, 0),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00002),w-literal(aux305,1),ineq(19, movesFrom_00002, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux260,1),ineq(3, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux264,1),ineq(4, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux262,1),ineq(5, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux268,1),ineq(6, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux265,1),ineq(7, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux271,1),ineq(8, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux269,1),ineq(9, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux273,1),ineq(10, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux245,1),ineq(11, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux247,1),ineq(12, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux253,1),ineq(13, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux255,1),ineq(14, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux249,1),ineq(15, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux251,1),ineq(16, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux257,1),ineq(17, movesFrom_00003, 0),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00003),w-literal(aux258,1),ineq(18, movesFrom_00003, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux286,1),ineq(3, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux283,1),ineq(4, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux282,1),ineq(5, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux279,1),ineq(6, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux278,1),ineq(7, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux275,1),ineq(8, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux289,1),ineq(9, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux290,1),ineq(10, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux292,1),ineq(11, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux295,1),ineq(12, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux296,1),ineq(13, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux299,1),ineq(14, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux300,1),ineq(15, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux302,1),ineq(16, movesFrom_00004, 0),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00004),w-literal(aux303,1),ineq(17, movesFrom_00004, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux178,1),ineq(3, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux184,1),ineq(4, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux181,1),ineq(5, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux188,1),ineq(6, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux185,1),ineq(7, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux192,1),ineq(8, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux189,1),ineq(9, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux176,1),ineq(10, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux171,1),ineq(11, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux172,1),ineq(12, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux167,1),ineq(13, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux168,1),ineq(14, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux174,1),ineq(15, movesFrom_00005, 0),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00005),w-literal(aux175,1),ineq(16, movesFrom_00005, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux344,1),ineq(3, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux341,1),ineq(4, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux340,1),ineq(5, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux337,1),ineq(6, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux350,1),ineq(7, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux347,1),ineq(8, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux346,1),ineq(9, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux351,1),ineq(10, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux355,1),ineq(11, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux358,1),ineq(12, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux359,1),ineq(13, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux352,1),ineq(14, movesFrom_00006, 0),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00006),w-literal(aux353,1),ineq(15, movesFrom_00006, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux369,1),ineq(3, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux375,1),ineq(4, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux372,1),ineq(5, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux364,1),ineq(6, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux361,1),ineq(7, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux368,1),ineq(8, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux365,1),ineq(9, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux382,1),ineq(10, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux379,1),ineq(11, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux380,1),ineq(12, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux376,1),ineq(13, movesFrom_00007, 0),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00007),w-literal(aux377,1),ineq(14, movesFrom_00007, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux234,1),ineq(3, movesFrom_00008, 0),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux232,1),ineq(4, movesFrom_00008, 0),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux242,1),ineq(5, movesFrom_00008, 0),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux240,1),ineq(6, movesFrom_00008, 0),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux238,1),ineq(7, movesFrom_00008, 0),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux236,1),ineq(8, movesFrom_00008, 0),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux228,1),ineq(9, movesFrom_00008, 0),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux231,1),ineq(10, movesFrom_00008, 0),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux224,1),ineq(11, movesFrom_00008, 0),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux226,1),ineq(12, movesFrom_00008, 0),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00008),w-literal(aux227,1),ineq(13, movesFrom_00008, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux194,1),ineq(3, movesFrom_00009, 0),ineq(12, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux197,1),ineq(4, movesFrom_00009, 0),ineq(12, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux199,1),ineq(5, movesFrom_00009, 0),ineq(12, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux201,1),ineq(6, movesFrom_00009, 0),ineq(12, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux202,1),ineq(7, movesFrom_00009, 0),ineq(12, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux205,1),ineq(8, movesFrom_00009, 0),ineq(12, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux207,1),ineq(9, movesFrom_00009, 0),ineq(12, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux208,1),ineq(10, movesFrom_00009, 0),ineq(12, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux211,1),ineq(11, movesFrom_00009, 0),ineq(12, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00009),w-literal(aux210,1),ineq(12, movesFrom_00009, 0)})
watched-or({diseq(3,moves_00010),ineq(3, movesFrom_00010, 0),ineq(11, movesFrom_00010, 0),w-literal(aux130,1)})
watched-or({diseq(3,moves_00010),ineq(4, movesFrom_00010, 0),ineq(11, movesFrom_00010, 0),w-literal(aux126,1)})
watched-or({diseq(3,moves_00010),ineq(5, movesFrom_00010, 0),ineq(11, movesFrom_00010, 0),w-literal(aux127,1)})
watched-or({diseq(3,moves_00010),ineq(6, movesFrom_00010, 0),ineq(11, movesFrom_00010, 0),w-literal(aux122,1)})
watched-or({diseq(3,moves_00010),ineq(7, movesFrom_00010, 0),ineq(11, movesFrom_00010, 0),w-literal(aux123,1)})
watched-or({diseq(3,moves_00010),ineq(8, movesFrom_00010, 0),ineq(11, movesFrom_00010, 0),w-literal(aux118,1)})
watched-or({diseq(3,moves_00010),ineq(9, movesFrom_00010, 0),ineq(11, movesFrom_00010, 0),w-literal(aux119,1)})
watched-or({diseq(3,moves_00010),ineq(10, movesFrom_00010, 0),ineq(11, movesFrom_00010, 0),w-literal(aux133,1)})
watched-or({diseq(3,moves_00010),ineq(11, movesFrom_00010, 0),w-literal(aux132,1)})
watched-or({diseq(3,moves_00011),w-literal(aux143,1),ineq(3, movesFrom_00011, 0),ineq(10, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux145,1),ineq(4, movesFrom_00011, 0),ineq(10, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux135,1),ineq(5, movesFrom_00011, 0),ineq(10, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux137,1),ineq(6, movesFrom_00011, 0),ineq(10, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux139,1),ineq(7, movesFrom_00011, 0),ineq(10, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux141,1),ineq(8, movesFrom_00011, 0),ineq(10, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux147,1),ineq(9, movesFrom_00011, 0),ineq(10, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00011),w-literal(aux148,1),ineq(10, movesFrom_00011, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux87,1),ineq(3, movesFrom_00012, 0),ineq(9, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux94,1),ineq(4, movesFrom_00012, 0),ineq(9, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux95,1),ineq(5, movesFrom_00012, 0),ineq(9, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux90,1),ineq(6, movesFrom_00012, 0),ineq(9, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux91,1),ineq(7, movesFrom_00012, 0),ineq(9, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux97,1),ineq(8, movesFrom_00012, 0),ineq(9, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00012),w-literal(aux98,1),ineq(9, movesFrom_00012, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux215,1),ineq(3, movesFrom_00013, 0),ineq(8, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux216,1),ineq(4, movesFrom_00013, 0),ineq(8, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux219,1),ineq(5, movesFrom_00013, 0),ineq(8, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux220,1),ineq(6, movesFrom_00013, 0),ineq(8, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux212,1),ineq(7, movesFrom_00013, 0),ineq(8, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00013),w-literal(aux213,1),ineq(8, movesFrom_00013, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux161,1),ineq(3, movesFrom_00014, 0),ineq(7, movesFrom_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux157,1),ineq(4, movesFrom_00014, 0),ineq(7, movesFrom_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux158,1),ineq(5, movesFrom_00014, 0),ineq(7, movesFrom_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux154,1),ineq(6, movesFrom_00014, 0),ineq(7, movesFrom_00014, 0)})
watched-or({diseq(3,moves_00014),w-literal(aux155,1),ineq(7, movesFrom_00014, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux386,1),ineq(3, movesFrom_00015, 0),ineq(6, movesFrom_00015, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux387,1),ineq(4, movesFrom_00015, 0),ineq(6, movesFrom_00015, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux389,1),ineq(5, movesFrom_00015, 0),ineq(6, movesFrom_00015, 0)})
watched-or({diseq(3,moves_00015),w-literal(aux390,1),ineq(6, movesFrom_00015, 0)})
watched-or({diseq(3,moves_00016),w-literal(aux150,1),ineq(3, movesFrom_00016, 0),ineq(5, movesFrom_00016, 0)})
watched-or({diseq(3,moves_00016),w-literal(aux152,1),ineq(4, movesFrom_00016, 0),ineq(5, movesFrom_00016, 0)})
watched-or({diseq(3,moves_00016),w-literal(aux153,1),ineq(5, movesFrom_00016, 0)})
watched-or({diseq(3,moves_00017),w-literal(aux163,1),ineq(3, movesFrom_00017, 0),ineq(4, movesFrom_00017, 0)})
watched-or({diseq(3,moves_00017),w-literal(aux164,1),ineq(4, movesFrom_00017, 0)})
reifyimply(w-literal(states_00002_00001,43), aux447)
reifyimply(w-literal(states_00002_00002,19), aux448)
reifyimply(w-literal(states_00002_00003,18), aux449)
reifyimply(w-literal(states_00002_00004,49), aux450)
reifyimply(w-literal(states_00002_00005,5), aux451)
reifyimply(w-literal(states_00002_00006,28), aux452)
reifyimply(w-literal(states_00002_00007,25), aux453)
reifyimply(w-literal(states_00002_00008,41), aux454)
reifyimply(w-literal(states_00002_00009,2), aux455)
reifyimply(w-literal(states_00002_00010,24), aux456)
reifyimply(w-literal(states_00002_00011,20), aux457)
reifyimply(w-literal(states_00002_00012,15), aux458)
reifyimply(w-literal(states_00002_00013,44), aux459)
reifyimply(w-literal(states_00002_00014,31), aux460)
reifyimply(w-literal(states_00002_00015,27), aux461)
reifyimply(w-literal(states_00002_00016,42), aux462)
reifyimply(w-literal(states_00002_00017,33), aux463)
reifyimply(w-literal(states_00002_00018,11), aux464)
reifyimply(gaceq(states_00002_00001,states_00003_00001), aux465)
ineq(aux466, aux335, 0)
ineq(aux467, aux328, 0)
ineq(aux468, aux327, 0)
ineq(aux469, aux324, 0)
ineq(aux470, aux323, 0)
ineq(aux471, aux333, 0)
ineq(aux472, aux332, 0)
ineq(aux473, aux329, 0)
ineq(aux474, aux314, 0)
ineq(aux475, aux316, 0)
ineq(aux476, aux317, 0)
ineq(aux477, aux320, 0)
ineq(aux478, aux306, 0)
ineq(aux479, aux309, 0)
ineq(aux480, aux310, 0)
ineq(aux481, aux313, 0)
reifyimply(gaceq(states_00004_00001,states_00003_00001), aux482)
ineq(aux483, aux259, 0)
ineq(aux484, aux263, 0)
ineq(aux485, aux261, 0)
ineq(aux486, aux267, 0)
ineq(aux487, aux266, 0)
ineq(aux488, aux272, 0)
ineq(aux489, aux270, 0)
ineq(aux490, aux274, 0)
ineq(aux491, aux244, 0)
ineq(aux492, aux246, 0)
ineq(aux493, aux252, 0)
ineq(aux494, aux254, 0)
ineq(aux495, aux248, 0)
ineq(aux496, aux250, 0)
ineq(aux497, aux256, 0)
reifyimply(gaceq(states_00004_00001,states_00005_00001), aux498)
ineq(aux499, aux287, 0)
ineq(aux500, aux285, 0)
ineq(aux501, aux284, 0)
ineq(aux502, aux281, 0)
ineq(aux503, aux280, 0)
ineq(aux504, aux277, 0)
ineq(aux505, aux276, 0)
ineq(aux506, aux288, 0)
ineq(aux507, aux291, 0)
ineq(aux508, aux293, 0)
ineq(aux509, aux294, 0)
ineq(aux510, aux297, 0)
ineq(aux511, aux298, 0)
ineq(aux512, aux301, 0)
reifyimply(gaceq(states_00005_00001,states_00006_00001), aux513)
ineq(aux514, aux180, 0)
ineq(aux515, aux179, 0)
ineq(aux516, aux183, 0)
ineq(aux517, aux182, 0)
ineq(aux518, aux187, 0)
ineq(aux519, aux186, 0)
ineq(aux520, aux191, 0)
ineq(aux521, aux190, 0)
ineq(aux522, aux177, 0)
ineq(aux523, aux170, 0)
ineq(aux524, aux173, 0)
ineq(aux525, aux166, 0)
ineq(aux526, aux169, 0)
reifyimply(gaceq(states_00006_00001,states_00007_00001), aux527)
ineq(aux528, aux336, 0)
ineq(aux529, aux343, 0)
ineq(aux530, aux342, 0)
ineq(aux531, aux339, 0)
ineq(aux532, aux338, 0)
ineq(aux533, aux349, 0)
ineq(aux534, aux348, 0)
ineq(aux535, aux345, 0)
ineq(aux536, aux354, 0)
ineq(aux537, aux356, 0)
ineq(aux538, aux357, 0)
ineq(aux539, aux360, 0)
reifyimply(gaceq(states_00007_00001,states_00008_00001), aux540)
ineq(aux541, aux371, 0)
ineq(aux542, aux370, 0)
ineq(aux543, aux374, 0)
ineq(aux544, aux373, 0)
ineq(aux545, aux363, 0)
ineq(aux546, aux362, 0)
ineq(aux547, aux367, 0)
ineq(aux548, aux366, 0)
ineq(aux549, aux383, 0)
ineq(aux550, aux378, 0)
ineq(aux551, aux381, 0)
reifyimply(gaceq(states_00009_00001,states_00008_00001), aux552)
ineq(aux553, aux235, 0)
ineq(aux554, aux233, 0)
ineq(aux555, aux243, 0)
ineq(aux556, aux241, 0)
ineq(aux557, aux239, 0)
ineq(aux558, aux237, 0)
ineq(aux559, aux229, 0)
ineq(aux560, aux230, 0)
ineq(aux561, aux223, 0)
ineq(aux562, aux225, 0)
reifyimply(gaceq(states_00009_00001,states_00010_00001), aux563)
ineq(aux564, aux193, 0)
ineq(aux565, aux195, 0)
ineq(aux566, aux196, 0)
ineq(aux567, aux198, 0)
ineq(aux568, aux200, 0)
ineq(aux569, aux203, 0)
ineq(aux570, aux204, 0)
ineq(aux571, aux206, 0)
ineq(aux572, aux209, 0)
reifyimply(gaceq(states_00010_00001,states_00011_00001), aux573)
ineq(aux574, aux129, 0)
ineq(aux575, aux131, 0)
ineq(aux576, aux125, 0)
ineq(aux577, aux128, 0)
ineq(aux578, aux121, 0)
ineq(aux579, aux124, 0)
ineq(aux580, aux117, 0)
ineq(aux581, aux120, 0)
reifyimply(gaceq(states_00012_00001,states_00011_00001), aux582)
ineq(aux583, aux142, 0)
ineq(aux584, aux144, 0)
ineq(aux585, aux134, 0)
ineq(aux586, aux136, 0)
ineq(aux587, aux138, 0)
ineq(aux588, aux140, 0)
ineq(aux589, aux146, 0)
reifyimply(gaceq(states_00012_00001,states_00013_00001), aux590)
ineq(aux591, aux86, 0)
ineq(aux592, aux88, 0)
ineq(aux593, aux93, 0)
ineq(aux594, aux96, 0)
ineq(aux595, aux89, 0)
ineq(aux596, aux92, 0)
reifyimply(gaceq(states_00013_00001,states_00014_00001), aux597)
ineq(aux598, aux222, 0)
ineq(aux599, aux214, 0)
ineq(aux600, aux217, 0)
ineq(aux601, aux218, 0)
ineq(aux602, aux221, 0)
reifyimply(gaceq(states_00014_00001,states_00015_00001), aux603)
ineq(aux604, aux160, 0)
ineq(aux605, aux162, 0)
ineq(aux606, aux156, 0)
ineq(aux607, aux159, 0)
reifyimply(gaceq(states_00015_00001,states_00016_00001), aux608)
ineq(aux609, aux384, 0)
ineq(aux610, aux385, 0)
ineq(aux611, aux388, 0)
reifyimply(gaceq(states_00017_00001,states_00016_00001), aux612)
ineq(aux613, aux149, 0)
ineq(aux614, aux151, 0)
reifyimply(gaceq(states_00017_00001,states_00018_00001), aux615)
ineq(aux616, aux165, 0)
reifyimply(gaceq(states_00018_00001,states_00019_00001), aux617)
watchelement([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00002_00009, states_00002_00010, states_00002_00011, states_00002_00012, states_00002_00013, states_00002_00014, states_00002_00015, states_00002_00016, states_00002_00017, states_00002_00018, states_00002_00019], aux105, aux18)
watchelement([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00003_00008, states_00003_00009, states_00003_00010, states_00003_00011, states_00003_00012, states_00003_00013, states_00003_00014, states_00003_00015, states_00003_00016, states_00003_00017, states_00003_00018], aux107, aux21)
watchelement([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00004_00008, states_00004_00009, states_00004_00010, states_00004_00011, states_00004_00012, states_00004_00013, states_00004_00014, states_00004_00015, states_00004_00016, states_00004_00017], aux106, aux19)
watchelement([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00005_00007, states_00005_00008, states_00005_00009, states_00005_00010, states_00005_00011, states_00005_00012, states_00005_00013, states_00005_00014, states_00005_00015, states_00005_00016], aux102, aux23)
watchelement([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00006_00006, states_00006_00007, states_00006_00008, states_00006_00009, states_00006_00010, states_00006_00011, states_00006_00012, states_00006_00013, states_00006_00014, states_00006_00015], aux101, aux25)
watchelement([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00007_00005, states_00007_00006, states_00007_00007, states_00007_00008, states_00007_00009, states_00007_00010, states_00007_00011, states_00007_00012, states_00007_00013, states_00007_00014], aux104, aux27)
watchelement([states_00008_00001, states_00008_00002, states_00008_00003, states_00008_00004, states_00008_00005, states_00008_00006, states_00008_00007, states_00008_00008, states_00008_00009, states_00008_00010, states_00008_00011, states_00008_00012, states_00008_00013], aux103, aux29)
watchelement([states_00009_00001, states_00009_00002, states_00009_00003, states_00009_00004, states_00009_00005, states_00009_00006, states_00009_00007, states_00009_00008, states_00009_00009, states_00009_00010, states_00009_00011, states_00009_00012], aux100, aux31)
watchelement([states_00010_00001, states_00010_00002, states_00010_00003, states_00010_00004, states_00010_00005, states_00010_00006, states_00010_00007, states_00010_00008, states_00010_00009, states_00010_00010, states_00010_00011], aux99, aux32)
watchelement([states_00011_00001, states_00011_00002, states_00011_00003, states_00011_00004, states_00011_00005, states_00011_00006, states_00011_00007, states_00011_00008, states_00011_00009, states_00011_00010], aux116, aux34)
watchelement([states_00012_00001, states_00012_00002, states_00012_00003, states_00012_00004, states_00012_00005, states_00012_00006, states_00012_00007, states_00012_00008, states_00012_00009], aux115, aux36)
watchelement([states_00013_00001, states_00013_00002, states_00013_00003, states_00013_00004, states_00013_00005, states_00013_00006, states_00013_00007, states_00013_00008], aux112, aux38)
watchelement([states_00014_00001, states_00014_00002, states_00014_00003, states_00014_00004, states_00014_00005, states_00014_00006, states_00014_00007], aux111, aux40)
watchelement([states_00015_00001, states_00015_00002, states_00015_00003, states_00015_00004, states_00015_00005, states_00015_00006], aux114, aux42)
watchelement([states_00016_00001, states_00016_00002, states_00016_00003, states_00016_00004, states_00016_00005], aux113, aux44)
watchelement([states_00017_00001, states_00017_00002, states_00017_00003, states_00017_00004], aux109, aux46)
watchelement([states_00018_00001, states_00018_00002, states_00018_00003], aux108, aux49)
watchelement([states_00019_00001, states_00020_00001], aux110, aux50)
watched-or({div(aux16, 13, aux391),modulo(aux16,13,aux392)})
watched-or({div(aux17, 13, aux393),modulo(aux17,13,aux394)})
watched-or({modulo(aux19,13,aux395),div(aux19, 13, aux396)})
watched-or({div(aux22, 13, aux397),modulo(aux22,13,aux398)})
watched-or({div(aux24, 13, aux399),modulo(aux25,13,aux400)})
watched-or({div(aux27, 13, aux401),modulo(aux27,13,aux402)})
watched-or({modulo(aux28,13,aux403),div(aux29, 13, aux404)})
watched-or({div(aux30, 13, aux405),modulo(aux30,13,aux406)})
watched-or({modulo(aux32,13,aux407),div(aux33, 13, aux408)})
watched-or({div(aux34, 13, aux409),modulo(aux35,13,aux410)})
watched-or({div(aux37, 13, aux411),modulo(aux37,13,aux412)})
watched-or({div(aux38, 13, aux413),modulo(aux38,13,aux414)})
watched-or({modulo(aux41,13,aux415),div(aux40, 13, aux416)})
watched-or({div(aux42, 13, aux417),modulo(aux42,13,aux418)})
watched-or({div(aux44, 13, aux419),modulo(aux44,13,aux420)})
watched-or({modulo(aux46,13,aux421),div(aux47, 13, aux422)})
watched-or({div(aux48, 13, aux423),modulo(aux49,13,aux424)})
watched-or({modulo(aux51,13,aux425),div(aux50, 13, aux426)})
watched-or({div(states_00020_00001, 13, aux427),modulo(states_00020_00001,13,aux428)})
watched-or({w-literal(aux52,1),w-literal(aux55,1)})
watched-or({w-literal(aux53,1),w-literal(aux56,1)})
watched-or({w-literal(aux54,1),w-literal(aux58,1)})
watched-or({w-literal(aux57,1),w-literal(aux61,1)})
watched-or({w-literal(aux59,1),w-literal(aux63,1)})
watched-or({w-literal(aux60,1),w-literal(aux64,1)})
watched-or({w-literal(aux62,1),w-literal(aux66,1)})
watched-or({w-literal(aux65,1),w-literal(aux68,1)})
watched-or({w-literal(aux67,1),w-literal(aux69,1)})
watched-or({w-literal(aux71,1),w-literal(aux74,1)})
watched-or({w-literal(aux70,1),w-literal(aux73,1)})
watched-or({w-literal(aux75,1),w-literal(aux79,1)})
watched-or({w-literal(aux72,1),w-literal(aux76,1)})
watched-or({w-literal(aux78,1),w-literal(aux82,1)})
watched-or({w-literal(aux77,1),w-literal(aux81,1)})
watched-or({w-literal(aux83,1),w-literal(aux85,1)})
watched-or({w-literal(aux80,1),w-literal(aux84,1)})
reifyimply(w-literal(moves_00001,1), aux52)
reifyimply(w-literal(moves_00002,1), aux53)
reifyimply(w-literal(moves_00003,1), aux54)
reifyimply(w-literal(moves_00004,1), aux57)
reifyimply(w-literal(moves_00005,1), aux59)
reifyimply(w-literal(moves_00006,1), aux60)
reifyimply(w-literal(moves_00007,1), aux62)
reifyimply(w-literal(moves_00008,1), aux65)
reifyimply(w-literal(moves_00009,1), aux67)
reifyimply(w-literal(moves_00010,1), aux71)
reifyimply(w-literal(moves_00011,1), aux70)
reifyimply(w-literal(moves_00012,1), aux75)
reifyimply(w-literal(moves_00013,1), aux72)
reifyimply(w-literal(moves_00014,1), aux78)
reifyimply(w-literal(moves_00015,1), aux77)
reifyimply(w-literal(moves_00016,1), aux83)
reifyimply(w-literal(moves_00017,1), aux80)
reifyimply(w-literal(moves_00001,3), aux55)
reifyimply(w-literal(moves_00002,3), aux56)
reifyimply(w-literal(moves_00003,3), aux58)
reifyimply(w-literal(moves_00004,3), aux61)
reifyimply(w-literal(moves_00005,3), aux63)
reifyimply(w-literal(moves_00006,3), aux64)
reifyimply(w-literal(moves_00007,3), aux66)
reifyimply(w-literal(moves_00008,3), aux68)
reifyimply(w-literal(moves_00009,3), aux69)
reifyimply(w-literal(moves_00010,3), aux74)
reifyimply(w-literal(moves_00011,3), aux73)
reifyimply(w-literal(moves_00012,3), aux79)
reifyimply(w-literal(moves_00013,3), aux76)
reifyimply(w-literal(moves_00014,3), aux82)
reifyimply(w-literal(moves_00015,3), aux81)
reifyimply(w-literal(moves_00016,3), aux85)
reifyimply(w-literal(moves_00017,3), aux84)
ineq(movesTo_00001, movesFrom_00001, -1)
ineq(movesTo_00002, movesFrom_00002, -1)
ineq(movesTo_00003, movesFrom_00003, -1)
ineq(movesTo_00004, movesFrom_00004, -1)
ineq(movesTo_00005, movesFrom_00005, -1)
ineq(movesTo_00006, movesFrom_00006, -1)
ineq(movesTo_00007, movesFrom_00007, -1)
ineq(movesTo_00008, movesFrom_00008, -1)
ineq(movesTo_00009, movesFrom_00009, -1)
ineq(movesTo_00010, movesFrom_00010, -1)
ineq(movesTo_00011, movesFrom_00011, -1)
ineq(movesTo_00012, movesFrom_00012, -1)
ineq(movesTo_00013, movesFrom_00013, -1)
ineq(movesTo_00014, movesFrom_00014, -1)
ineq(movesTo_00015, movesFrom_00015, -1)
ineq(movesTo_00016, movesFrom_00016, -1)
ineq(movesTo_00017, movesFrom_00017, -1)
ineq(movesTo_00018, movesFrom_00018, -1)
sumleq([-3,movesFrom_00001],aux429)
sumgeq([-3,movesFrom_00001],aux429)
sumleq([-2,movesFrom_00003],aux430)
sumgeq([-2,movesFrom_00003],aux430)
sumleq([-3,movesFrom_00002],aux431)
sumgeq([-3,movesFrom_00002],aux431)
sumleq([-2,movesFrom_00004],aux432)
sumgeq([-2,movesFrom_00004],aux432)
sumleq([-2,movesFrom_00005],aux433)
sumgeq([-2,movesFrom_00005],aux433)
sumleq([-2,movesFrom_00006],aux434)
sumgeq([-2,movesFrom_00006],aux434)
sumleq([-2,movesFrom_00007],aux435)
sumgeq([-2,movesFrom_00007],aux435)
sumleq([-2,movesFrom_00008],aux436)
sumgeq([-2,movesFrom_00008],aux436)
sumleq([-2,movesFrom_00009],aux437)
sumgeq([-2,movesFrom_00009],aux437)
sumleq([-2,movesFrom_00010],aux438)
sumgeq([-2,movesFrom_00010],aux438)
sumleq([-2,movesFrom_00011],aux439)
sumgeq([-2,movesFrom_00011],aux439)
sumleq([-2,movesFrom_00012],aux440)
sumgeq([-2,movesFrom_00012],aux440)
sumleq([-2,movesFrom_00013],aux441)
sumgeq([-2,movesFrom_00013],aux441)
sumleq([-2,movesFrom_00014],aux442)
sumgeq([-2,movesFrom_00014],aux442)
sumleq([-2,movesFrom_00015],aux443)
sumgeq([-2,movesFrom_00015],aux443)
sumleq([-2,movesFrom_00016],aux444)
sumgeq([-2,movesFrom_00016],aux444)
sumleq([-2,movesFrom_00017],aux445)
sumgeq([-2,movesFrom_00017],aux445)
sumleq([-2,movesFrom_00018],aux446)
sumgeq([-2,movesFrom_00018],aux446)
sumleq([-1,movesTo_00009],aux99)
sumgeq([-1,movesTo_00009],aux99)
sumleq([-1,movesTo_00008],aux100)
sumgeq([-1,movesTo_00008],aux100)
sumleq([-1,movesTo_00005],aux101)
sumgeq([-1,movesTo_00005],aux101)
sumleq([-1,movesTo_00004],aux102)
sumgeq([-1,movesTo_00004],aux102)
sumleq([-1,movesTo_00007],aux103)
sumgeq([-1,movesTo_00007],aux103)
sumleq([-1,movesTo_00006],aux104)
sumgeq([-1,movesTo_00006],aux104)
sumleq([-1,movesTo_00001],aux105)
sumgeq([-1,movesTo_00001],aux105)
sumleq([-1,movesTo_00003],aux106)
sumgeq([-1,movesTo_00003],aux106)
sumleq([-1,movesTo_00002],aux107)
sumgeq([-1,movesTo_00002],aux107)
sumleq([-1,movesTo_00017],aux108)
sumgeq([-1,movesTo_00017],aux108)
sumleq([-1,movesTo_00016],aux109)
sumgeq([-1,movesTo_00016],aux109)
sumleq([-1,movesTo_00018],aux110)
sumgeq([-1,movesTo_00018],aux110)
sumleq([-1,movesTo_00013],aux111)
sumgeq([-1,movesTo_00013],aux111)
sumleq([-1,movesTo_00012],aux112)
sumgeq([-1,movesTo_00012],aux112)
sumleq([-1,movesTo_00015],aux113)
sumgeq([-1,movesTo_00015],aux113)
sumleq([-1,movesTo_00014],aux114)
sumgeq([-1,movesTo_00014],aux114)
sumleq([-1,movesTo_00011],aux115)
sumgeq([-1,movesTo_00011],aux115)
sumleq([-1,movesTo_00010],aux116)
sumgeq([-1,movesTo_00010],aux116)
sumleq([1,movesTo_00018],movesFrom_00018)
sumgeq([1,movesTo_00018],movesFrom_00018)
**EOF**
